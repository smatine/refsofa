{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\TrigrammeEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL } from './constants';\n\nvar TrigrammeEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TrigrammeEdit, _Component);\n\n  function TrigrammeEdit(props) {\n    var _this;\n\n    _classCallCheck(this, TrigrammeEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TrigrammeEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      mailList: '',\n      owner: '',\n      irtCode: '',\n      description: '',\n      errors: {},\n      touched: {\n        name: false,\n        mailList: false,\n        owner: false,\n        irtCode: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TrigrammeEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var trigramme;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/trigrammes/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                trigramme = _context.sent;\n                trigramme.touched = {\n                  name: false,\n                  mailList: false,\n                  owner: false,\n                  irtCode: false,\n                  emailState: ''\n                };\n                this.setState({\n                  item: trigramme\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  mailList: true,\n                  owner: true,\n                  irtCode: true,\n                  emailState: ''\n                };\n                errors = this.validate(item.name, item.mailList, item.owner, item.irtCode);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                _context2.next = 10;\n                return fetch(item.id ? API_BASE_URL + '/trigrammes/' + item.id : API_BASE_URL + '/trigrammes', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 10:\n                this.props.history.push(API_BASE_URL + '/trigrammes');\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail(e) {\n      var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      var item = this.state.item;\n\n      if (emailRex.test(e.target.value)) {\n        item.touched.emailState = 'has-success';\n      } else {\n        item.touched.emailState = 'has-danger';\n      }\n\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(name, mailList, owner, irtCode) {\n      var errors = {\n        name: '',\n        mailList: '',\n        owner: '',\n        irtCode: ''\n      }; // true means invalid, so our conditions got reversed  email.split('').filter(x ==> x === '@').length !== 1)\n\n      /*return {\r\n        name: name.length === 0,\r\n        irCode: irtCode.length === 0,\r\n      };*/\n\n      if (this.state.item.touched.name && name.length !== 3) {\n        errors.name = 'Name should be = 3 characters';\n        return errors;\n      } else if (this.state.item.touched.irtCode && irtCode.length !== 5) {\n        errors.irtCode = 'Irt Code should be = 5 characters!';\n        return errors;\n      }\n\n      var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (this.state.item.touched.owner && !emailRex.test(owner)) {\n        errors.owner = 'Owner mail should have correct format ';\n        return errors;\n      }\n\n      if (this.state.item.touched.mailList && !emailRex.test(mailList)) {\n        errors.mailList = 'Mailling List should have correct format ';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _React$createElement;\n\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, item.id ? 'Edit TRI' : 'Add TRI');\n      var errors = this.validate(item.name, item.mailList, item.owner, item.irtCode);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      /*let accs = null;\r\n      if(item.id) accs = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/trigramme/\" + item.id + \"/products\"}>Products</Button>;*/\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter text\",\n        maxLength: \"3\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"owner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Owner (*)\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"owner\",\n        id: \"owner\",\n        value: item.owner || '',\n        placeholder: \"Enter Name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('owner'),\n        autoComplete: \"owner\",\n        valid: errors.owner === '',\n        invalid: errors.owner !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, errors.owner)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"irtCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"IRT Code (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"irtCode\",\n        id: \"irtCode\",\n        value: item.irtCode || '',\n        placeholder: \"Enter IRT Code\",\n        maxLength: \"5\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('irtCode'),\n        autoComplete: \"irtCode\",\n        valid: errors.irtCode === '',\n        invalid: errors.irtCode !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, errors.irtCode)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"mailList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Email address (*)\"), React.createElement(Input, (_React$createElement = {\n        type: \"email\",\n        name: \"mailList\",\n        id: \"mailList\",\n        value: item.mailList || '',\n        placeholder: \"Enter email\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('mailList'),\n        autoComplete: \"mailList\",\n        valid: errors.mailList === '',\n        invalid: errors.mailList !== ''\n      }, _defineProperty(_React$createElement, \"onChange\", function onChange(e) {\n        _this2.handleChange(e);\n      }), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, errors.mailList)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        value: item.description || '',\n        onChange: this.handleChange,\n        autoComplete: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: API_BASE_URL + \"/trigrammes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return TrigrammeEdit;\n}(Component);\n\nexport default withRouter(TrigrammeEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\TrigrammeEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","TrigrammeEdit","props","emptyItem","name","mailList","owner","irtCode","description","errors","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","trigramme","emailState","event","target","value","preventDefault","validate","isDisabled","Object","keys","some","x","forceUpdate","method","headers","body","JSON","stringify","history","push","e","emailRex","test","length","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TrigrammeEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    mailList:'',\r\n    owner: '',\r\n    irtCode:'',\r\n    description: '',\r\n    errors: {},\r\n    touched: {\r\n        name: false,\r\n        mailList: false,\r\n        owner: false,\r\n        irtCode: false\r\n      }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const trigramme = await (await fetch(`${API_BASE_URL}/trigrammes/${this.props.match.params.id}`)).json();\r\n      trigramme.touched = {\r\n        name: false,\r\n        mailList: false,\r\n        owner: false,\r\n        irtCode: false,\r\n        emailState: ''\r\n      };\r\n      this.setState({item: trigramme});\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n    \r\n    item.touched = {\r\n        name: true,\r\n        mailList: true,\r\n        owner: true,\r\n        irtCode: true,\r\n        emailState: ''\r\n    };\r\n    const errors = this.validate(item.name, item.mailList, item.owner, item.irtCode);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    await fetch((item.id) ? API_BASE_URL + '/trigrammes/'+(item.id) : API_BASE_URL + '/trigrammes', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n\r\n    \r\n    this.props.history.push(API_BASE_URL + '/trigrammes');\r\n  }\r\n\r\n  validateEmail(e) {\r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const { item } = this.state\r\n      if (emailRex.test(e.target.value)) {\r\n        item.touched.emailState = 'has-success'\r\n      } else {\r\n        item.touched.emailState = 'has-danger'\r\n      }\r\n      this.setState({ item })\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n  \r\n  validate(name, mailList, owner, irtCode) {\r\n\r\n    const errors = {\r\n      name: '',\r\n      mailList: '',\r\n      owner: '',\r\n      irtCode: ''\r\n    };\r\n // true means invalid, so our conditions got reversed  email.split('').filter(x ==> x === '@').length !== 1)\r\n    /*return {\r\n      name: name.length === 0,\r\n      irCode: irtCode.length === 0,\r\n    };*/\r\n    \r\n    if(this.state.item.touched.name && name.length !== 3){\r\n      errors.name = 'Name should be = 3 characters';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.irtCode && irtCode.length !== 5){\r\n      errors.irtCode = 'Irt Code should be = 5 characters!';\r\n      return errors;\r\n    }\r\n    \r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    \r\n    if(this.state.item.touched.owner && !emailRex.test(owner)){\r\n      errors.owner = 'Owner mail should have correct format ';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.mailList && !emailRex.test(mailList)){\r\n      errors.mailList = 'Mailling List should have correct format ';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit TRI' : 'Add TRI'}</h2>;\r\n    \r\n    const errors = this.validate(item.name, item.mailList, item.owner, item.irtCode);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n    /*let accs = null;\r\n    if(item.id) accs = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/trigramme/\" + item.id + \"/products\"}>Products</Button>;*/\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter text\" maxLength=\"3\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\" \r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n                   />\r\n            <FormFeedback>{errors.name}</FormFeedback>\r\n         </FormGroup>\r\n         \r\n          <FormGroup>\r\n            <Label for=\"owner\">Owner (*)</Label>\r\n            <Input type=\"email\" name=\"owner\" id=\"owner\" value={item.owner || ''} placeholder=\"Enter Name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('owner')} autoComplete=\"owner\"\r\n                   valid={errors.owner === ''}\r\n                   invalid={errors.owner !== ''}\r\n            />\r\n            <FormFeedback>{errors.owner}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"irtCode\">IRT Code (*)</Label>\r\n            <Input type=\"text\" name=\"irtCode\" id=\"irtCode\" value={item.irtCode || ''} placeholder=\"Enter IRT Code\" maxLength=\"5\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('irtCode')} autoComplete=\"irtCode\"\r\n                   valid={errors.irtCode === ''}\r\n                   invalid={errors.irtCode !== ''}\r\n            />\r\n            <FormFeedback>{errors.irtCode}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n       \r\n          \r\n          <FormGroup>\r\n            <Label for=\"mailList\">Email address (*)</Label>\r\n            <Input type=\"email\" name=\"mailList\" id=\"mailList\" value={item.mailList || ''} \r\n                   placeholder=\"Enter email\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('mailList')} autoComplete=\"mailList\"\r\n                   valid={errors.mailList === ''}\r\n                   invalid={errors.mailList !== ''}\r\n                   onChange={ (e) => {\r\n                            this.handleChange(e)\r\n                           }}\r\n            />\r\n            <FormFeedback>{errors.mailList}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n         <FormGroup>\r\n            <Label for=\"description\">Description</Label>\r\n            <Input type=\"text\" name=\"description\" id=\"description\" value={item.description || ''}\r\n                   onChange={this.handleChange} autoComplete=\"description\"/>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            \r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={API_BASE_URL + \"/trigrammes\"}>Cancel</Button>\r\n\r\n            \r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TrigrammeEdit);"]},"metadata":{},"sourceType":"module"}