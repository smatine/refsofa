{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\VpcEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar VpcEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VpcEdit, _Component);\n\n  function VpcEdit(props) {\n    var _this;\n\n    _classCallCheck(this, VpcEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VpcEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      text: '',\n      account: {},\n      accounts: {},\n      accountId: '',\n      cidrs: {},\n      cidrId: '',\n      isSameEnv: true,\n      touched: {\n        accountId: false,\n        cidrId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(VpcEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var vpc, item, _vpc;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/vpcs/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                vpc = _context.sent;\n                vpc.touched = {\n                  name: false,\n                  accountId: false,\n                  cidrId: false\n                };\n                this.setState({\n                  item: vpc\n                });\n                item = _objectSpread({}, this.state.item);\n                _context.next = 11;\n                return fetch(API_BASE_URL + '/cidr/env/' + vpc.account.env).then(function (result) {\n                  //console.log('change2');\n                  return result.json();\n                }).then(function (jsonResult) {\n                  //let item = {...this.state.item};\n                  item.cidrs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 11:\n                item.isSameEnv = true;\n                item.accountId = vpc.account.id;\n                item.cidrId = vpc.cidr.id;\n                this.setState({\n                  item: item\n                });\n                _context.next = 20;\n                break;\n\n              case 17:\n                //const account = await (await fetch(`/accounts/${this.props.match.params.ida}`)).json();\n                _vpc = {\n                  name: '',\n                  text: '',\n                  account: {},\n                  accounts: {},\n                  accountId: '',\n                  cidrs: {},\n                  cidrId: '',\n                  isSameEnv: true,\n                  touched: {\n                    name: false,\n                    accountId: false,\n                    cidrId: false\n                  }\n                }; //console.log(account.id);\n                //vpc.account = account;\n\n                _vpc.touched = {\n                  name: false,\n                  accountId: false,\n                  cidrId: false\n                };\n                this.setState({\n                  item: _vpc\n                });\n\n              case 20:\n                _context.next = 22;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item); //item.isSameEnv = true;\n\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value; //console.log('change=' + name);\n\n      item.isSameEnv = true;\n\n      if (name === 'accountId') {\n        //console.log('change' + item.accountId);\n        var acc = {};\n        fetch(API_BASE_URL + \"/accounts/\" + item.accountId).then(function (result) {\n          //console.log('change1');\n          return result.json();\n        }).then(function (jsonResult) {\n          acc = jsonResult;\n          if (acc.env !== item.account.env) item.isSameEnv = false; //console.log(\"attention=\"  + acc.env + \" \" + item.account.env);\n\n          fetch(API_BASE_URL + '/cidr/env/' + acc.env).then(function (result) {\n            //console.log('change2');\n            return result.json();\n          }).then(function (jsonResult) {\n            //let item = {...this.state.item};\n            item.cidrs = jsonResult;\n\n            _this3.setState({\n              item: item\n            });\n          });\n        });\n      }\n\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist, values;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  accountId: true,\n                  cidrId: true\n                };\n                errors = this.validate(item.name, item.accountId, item.cidrId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 7:\n                hist = FRT_BASE_URL + '/vpcs';\n                item.cidr = {\n                  id: item.cidrId\n                };\n                item.account = {\n                  id: item.accountId\n                };\n                values = [];\n                item.nacls.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.nacls = values;\n                values = [];\n                item.routeTables.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.routeTables = values;\n                values = [];\n                item.dhcps.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.dhcps = values;\n                _context2.next = 21;\n                return fetch(item.id ? API_BASE_URL + '/accounts/' + item.account.id + '/vpcs/' + item.id : API_BASE_URL + '/accounts/' + item.account.id + '/vpcs', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 21:\n                this.props.history.push(hist);\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, accountId, cidrId) {\n      var errors = {\n        name: '',\n        accountId: '',\n        cidrId: ''\n      }; //console.log(\"cidr=\" + cidrId + \"=!\");\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      } else if (this.state.item.touched.cidrId && cidrId === '') {\n        errors.cidrId = 'CidrId should not be null'; //alert('CidrId should not be null');\n\n        return errors;\n      } else if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'Account should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, item.id ? 'Edit Vpc' : 'Add Vpc');\n      var errors = this.validate(item.name, item.accountId, item.cidrId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = FRT_BASE_URL + \"/vpcs\";\n      /*let accs = null;\r\n      accs = <FormGroup>\r\n              <Label for=\"accountId\">Account: {item.account.numAccount}</Label>\r\n              <Input type=\"text\" name=\"accountId\" id=\"accountId\" value={item.account.id || ''} disabled=\"true\"/>\r\n            </FormGroup>;*/\n\n      /*let subs = null;\r\n      if(item.id) subs = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/vpc/\" + item.id + \"/subnets\"}>Subnets</Button>;*/\n\n      var opts = [];\n\n      if (item.cidrs && item.cidrs.length) {\n        item.cidrs.map(function (cidr) {\n          opts.push(React.createElement(\"option\", {\n            key: cidr.id,\n            value: cidr.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252\n            },\n            __self: this\n          }, cidr.id, \" \", cidr.cidr, \" \", cidr.env));\n        });\n      }\n\n      if (item.id && item.isSameEnv) {\n        opts.push(React.createElement(\"option\", {\n          key: item.cidr.id,\n          value: item.cidr.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, item.cidr.id, \" \", item.cidr.cidr, \" \", item.cidr.env));\n      }\n\n      var cid = item.cidrId || '';\n      item.cidrId = cid;\n      var optsa = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          optsa.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount, \"  \", s.env));\n        });\n      }\n\n      if (item.id) {//optsa.push(<option value={item.account.id} >{item.account.id} {item.account.numAccount} </option>);\n      }\n\n      var acc = item.accountId || '';\n      item.accounttId = acc;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Accounts (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: acc,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Choose\"), optsa), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"cidrId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"CIDR (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"cidrId\",\n        id: \"cidrId\",\n        value: cid,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('cidrId'),\n        valid: errors.cidrId === '',\n        invalid: errors.cidrId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, errors.cidrId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return VpcEdit;\n}(Component);\n\nexport default withRouter(VpcEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\VpcEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","FRT_BASE_URL","VpcEdit","props","emptyItem","name","text","account","accounts","accountId","cidrs","cidrId","isSameEnv","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","vpc","env","then","result","jsonResult","cidr","event","target","value","acc","preventDefault","errors","validate","isDisabled","Object","keys","some","x","hist","values","nacls","map","s","push","routeTables","dhcps","method","headers","body","JSON","stringify","history","length","title","canc","opts","cid","optsa","numAccount","accounttId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\n\r\nclass VpcEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name:'',\r\n    text: '',\r\n\t  account: {},\r\n    accounts: {},\r\n  \taccountId : '',\r\n    cidrs: {},\r\n    cidrId: '',\r\n    isSameEnv: true,\r\n    touched: {\r\n      accountId: false,\r\n      cidrId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const vpc = await (await fetch(`${API_BASE_URL}/vpcs/${this.props.match.params.id}`)).json();\r\n\r\n      vpc.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        cidrId: false\r\n      };\r\n      \r\n      this.setState({item: vpc});\r\n      \r\n      let item = {...this.state.item};\r\n\r\n\r\n      await await(fetch(API_BASE_URL + '/cidr/env/' + (vpc.account.env),)\r\n        .then((result) => {\r\n          //console.log('change2');\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.cidrs = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n\r\n\r\n      item.isSameEnv = true;\r\n      item.accountId = vpc.account.id;\r\n      item.cidrId = vpc.cidr.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      //const account = await (await fetch(`/accounts/${this.props.match.params.ida}`)).json();\r\n      const vpc = {\r\n        name:'',\r\n        text: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        cidrs: {},\r\n        cidrId: '',\r\n        isSameEnv: true,\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          cidrId: false\r\n        }\r\n      };\r\n      //console.log(account.id);\r\n      //vpc.account = account;\r\n      vpc.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        cidrId: false,\r\n      };\r\n      this.setState({item: vpc});\r\n    }\r\n\r\n        \r\n    //const {item} = this.state;\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      \r\n      let item = {...this.state.item};\r\n      //item.isSameEnv = true;\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n    \r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n\r\n    //console.log('change=' + name);\r\n    item.isSameEnv = true;\r\n    if(name === 'accountId')\r\n    {\r\n      //console.log('change' + item.accountId);\r\n      \r\n      let acc={};\r\n      fetch(API_BASE_URL + \"/accounts/\" + item.accountId,)\r\n      .then((result) => {\r\n        //console.log('change1');\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        acc = jsonResult;\r\n        \r\n        if(acc.env !== item.account.env) item.isSameEnv = false;//console.log(\"attention=\"  + acc.env + \" \" + item.account.env);\r\n\r\n        fetch(API_BASE_URL + '/cidr/env/' + (acc.env),)\r\n        .then((result) => {\r\n          //console.log('change2');\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.cidrs = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n      });\r\n\r\n    }\r\n\r\n\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n        name: true,\r\n        accountId: true,\r\n        cidrId: true,\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.cidrId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) return;\r\n    \r\n    const hist= FRT_BASE_URL + '/vpcs';\r\n    \r\n    item.cidr={id: item.cidrId};\r\n    item.account={id: item.accountId};\r\n\r\n    var values = [];\r\n      item.nacls.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.nacls = values;\r\n    var values = [];\r\n      item.routeTables.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.routeTables = values;\r\n    var values = [];\r\n      item.dhcps.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.dhcps = values;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/vpcs/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/vpcs', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId, cidrId) {\r\n\r\n    const errors = {\r\n      name: '',\r\n      accountId: '',\r\n      cidrId: ''\r\n    };\r\n    //console.log(\"cidr=\" + cidrId + \"=!\");\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.cidrId && cidrId === ''){\r\n      errors.cidrId = 'CidrId should not be null';\r\n      //alert('CidrId should not be null');\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Account should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    \r\n    const title = <h2>{item.id ? 'Edit Vpc' : 'Add Vpc'}</h2>;\r\n\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.cidrId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = FRT_BASE_URL + \"/vpcs\";\r\n\r\n    /*let accs = null;\r\n    accs = <FormGroup>\r\n            <Label for=\"accountId\">Account: {item.account.numAccount}</Label>\r\n            <Input type=\"text\" name=\"accountId\" id=\"accountId\" value={item.account.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;*/\r\n\r\n    /*let subs = null;\r\n    if(item.id) subs = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/vpc/\" + item.id + \"/subnets\"}>Subnets</Button>;*/\r\n\r\n    let opts = [];\r\n    if(item.cidrs && item.cidrs.length){\r\n          item.cidrs.map(cidr => {  \r\n          opts.push(<option key={cidr.id} value={cidr.id}>{cidr.id} {cidr.cidr} {cidr.env}</option>);\r\n      });\r\n    }\r\n\r\n    if(item.id && item.isSameEnv) {\r\n          opts.push(<option key={item.cidr.id} value={item.cidr.id} >{item.cidr.id} {item.cidr.cidr} {item.cidr.env}</option>);\r\n    }\r\n    \r\n    let cid = item.cidrId || '';\r\n    item.cidrId = cid;\r\n\r\n    \r\n    let optsa = [];\r\n    if(item.accounts && item.accounts.length){\r\n          item.accounts.map(s => {  \r\n          optsa.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}  {s.env}</option>);\r\n      });\r\n    }\r\n    if(item.id) {\r\n          //optsa.push(<option value={item.account.id} >{item.account.id} {item.account.numAccount} </option>);\r\n    }\r\n\r\n    let acc = item.accountId || '';\r\n    item.accounttId = acc;\r\n\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Accounts (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={acc} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsa}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"cidrId\">CIDR (*)</Label>\r\n            <Input type=\"select\" name=\"cidrId\" id=\"cidrId\"  value={cid} onChange={this.handleChange} onBlur={this.handleBlur('cidrId')}\r\n                 valid={errors.cidrId === ''}\r\n                 invalid={errors.cidrId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.cidrId}</FormFeedback>\r\n          </FormGroup>\r\n\t\t  \r\n\t\t  \r\n\t\t  <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\t\t  \r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n            \r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(VpcEdit);"]},"metadata":{},"sourceType":"module"}