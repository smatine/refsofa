{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\TrigrammeList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar TrigrammeList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TrigrammeList, _Component);\n\n  function TrigrammeList(props) {\n    var _this;\n\n    _classCallCheck(this, TrigrammeList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TrigrammeList).call(this, props));\n    _this.state = {\n      trigrammes: [],\n      isLoading: true\n    };\n    _this.remove = _this.remove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TrigrammeList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      fetch(API_BASE_URL + '/trigrammes2').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          trigrammes: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_BASE_URL, \"/trigrammes/\").concat(id), {\n                  method: 'DELETE',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function () {\n                  var updateTrigramme = _toConsumableArray(_this3.state.trigrammes).filter(function (i) {\n                    return i.id !== id;\n                  });\n\n                  _this3.setState({\n                    trigrammes: updateTrigramme\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function remove(_x) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          trigrammes = _this$state.trigrammes,\n          isLoading = _this$state.isLoading;\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var trigrammeList = trigrammes.map(function (trigramme) {\n        return React.createElement(\"tr\", {\n          key: trigramme.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, trigramme.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, trigramme.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, trigramme.owner), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, trigramme.irtCode), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, trigramme.mailList), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, trigramme.description), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          tag: Link,\n          to: FRT_BASE_URL + \"/trigrammes/\" + trigramme.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this4.remove(trigramme.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        tag: Link,\n        to: FRT_BASE_URL + \"/trigrammes/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Add TRI\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Trigramme\"), React.createElement(Table, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        width: \"10%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        width: \"10%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        width: \"10%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(\"th\", {\n        width: \"10%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"IRT Code\"), React.createElement(\"th\", {\n        width: \"10%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Mailling List\"), React.createElement(\"th\", {\n        width: \"10%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        width: \"10%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, trigrammeList))));\n    }\n  }]);\n\n  return TrigrammeList;\n}(Component);\n\nexport default TrigrammeList;","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\TrigrammeList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","API_BASE_URL","FRT_BASE_URL","TrigrammeList","props","state","trigrammes","isLoading","remove","bind","setState","fetch","then","response","json","data","id","method","headers","updateTrigramme","filter","i","trigrammeList","map","trigramme","whiteSpace","name","owner","irtCode","mailList","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass TrigrammeList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {trigrammes: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(API_BASE_URL + '/trigrammes2')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({trigrammes: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`${API_BASE_URL}/trigrammes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTrigramme = [...this.state.trigrammes].filter(i => i.id !== id);\r\n      this.setState({trigrammes: updateTrigramme});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {trigrammes, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const trigrammeList = trigrammes.map(trigramme => {\r\n      \r\n      return <tr key={trigramme.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{trigramme.id}</td>\r\n\t\t    <td>{trigramme.name}</td>\r\n        <td>{trigramme.owner}</td>\r\n\r\n        <td>{trigramme.irtCode}</td>\r\n        \r\n        <td>{trigramme.mailList}</td>\r\n\t\t    <td>{trigramme.description}</td>\r\n        \r\n\r\n        \r\n        <td>\r\n          \r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={FRT_BASE_URL + \"/trigrammes/\" + trigramme.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(trigramme.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n          \r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={FRT_BASE_URL + \"/trigrammes/new\"}>Add TRI</Button>\r\n          </div>\r\n          <h3>Trigramme</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n\t\t\t        <th width=\"10%\">Id</th>\r\n              <th width=\"10%\">Name</th>\r\n              <th width=\"10%\">Owner</th>\r\n              <th width=\"10%\">IRT Code</th>\r\n              \r\n              <th width=\"10%\">Mailling List</th>\r\n              <th width=\"10%\">Description</th>\r\n              \r\n              <th width=\"10%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {trigrammeList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrigrammeList;"]},"metadata":{},"sourceType":"module"}