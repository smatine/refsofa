{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\StorageEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar StorageEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StorageEdit, _Component);\n\n  function StorageEdit(props) {\n    var _this;\n\n    _classCallCheck(this, StorageEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StorageEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      text: '',\n      account: {},\n      accountId: '',\n      regionId: '',\n      regions: [],\n      region: {},\n      versionning: true,\n      cloudWatchMetrics: false,\n      encryption: false,\n      encryptionType: 'AES-256',\n      kmsId: '',\n      kms: {},\n      kmss: [],\n      serverAccessLoging: false,\n      storageTargetId: '',\n      storageTarget: {},\n      storageTargets: [],\n      targetPrefix: '',\n      cors: '',\n      grantAmazonS3ReadAccess: false,\n      blockNewPublicAclObject: false,\n      removePublicAccessGranted: false,\n      blockNewPublicBucket: false,\n      blockPublicCross: false,\n      touched: {\n        name: false,\n        accountId: false,\n        regionId: false,\n        encryptionType: false,\n        kmsId: false,\n        storageTargetId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(StorageEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var storage, item, _storage;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/storages/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                storage = _context.sent;\n                storage.touched = {\n                  name: false,\n                  accountId: false,\n                  regionId: false,\n                  encryptionType: false,\n                  kmsId: false,\n                  storageTargetId: false\n                };\n                this.setState({\n                  item: storage\n                });\n                item = _objectSpread({}, this.state.item);\n                item.accountId = storage.account.id;\n                item.regionId = storage.region.id;\n                if (item.encryptionType === '') item.encryptionType = 'AES-256';\n                if (storage.kms) item.kmsId = storage.kms.id;\n                if (storage.storageTarget) item.storageTargetId = storage.storageTarget.id;\n                fetch(API_BASE_URL + '/accounts/' + storage.account.id + '/kmss').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.kmss = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n                fetch(API_BASE_URL + '/accounts/' + storage.account.id + '/storages').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.storageTargets = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n                this.setState({\n                  item: item\n                });\n                _context.next = 22;\n                break;\n\n              case 19:\n                _storage = {\n                  name: '',\n                  text: '',\n                  account: {},\n                  accountId: '',\n                  regionId: '',\n                  regions: [],\n                  region: {},\n                  versionning: true,\n                  cloudWatchMetrics: false,\n                  encryption: false,\n                  encryptionType: 'AES-256',\n                  kmsId: '',\n                  kms: {},\n                  kmss: [],\n                  serverAccessLoging: false,\n                  storageTargetId: '',\n                  storageTarget: {},\n                  storageTargets: [],\n                  targetPrefix: '',\n                  cors: '',\n                  grantAmazonS3ReadAccess: false,\n                  blockNewPublicAclObject: false,\n                  removePublicAccessGranted: false,\n                  blockNewPublicBucket: false,\n                  blockPublicCross: false,\n                  touched: {\n                    name: false,\n                    accountId: false,\n                    regionId: false,\n                    encryptionType: false,\n                    kmsId: false,\n                    storageTargetId: false\n                  }\n                };\n                _storage.touched = {\n                  name: false,\n                  accountId: false,\n                  regionId: false,\n                  encryptionType: false,\n                  kmsId: false,\n                  storageTargetId: false\n                };\n                this.setState({\n                  item: _storage\n                });\n\n              case 22:\n                _context.next = 24;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.account = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 24:\n                _context.next = 26;\n                return fetch(API_BASE_URL + '/regions').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.regions = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      }); // \n\n      if (name === 'serverAccessLoging') {\n        item.serverAccessLoging = target.checked ? true : false;\n      }\n\n      if (name === 'versionning') {\n        item.versionning = target.checked ? true : false;\n      }\n\n      if (name === 'cloudWatchMetrics') {\n        item.cloudWatchMetrics = target.checked ? true : false;\n      }\n\n      if (name === 'encryption') {\n        item.encryption = target.checked ? true : false;\n      }\n\n      if (name === 'type') {\n        if (value === 'AES-256') {\n          item.encryptionType = 'AES-256';\n        } else {\n          item.encryptionType = 'AWS-KMS';\n        }\n      }\n\n      if (name === 'blockNewPublicAclObject') {\n        item.blockNewPublicAclObject = target.checked ? true : false;\n      }\n\n      if (name === 'removePublicAccessGranted') {\n        item.removePublicAccessGranted = target.checked ? true : false;\n      }\n\n      if (name === 'blockNewPublicBucket') {\n        item.blockNewPublicBucket = target.checked ? true : false;\n      }\n\n      if (name === 'blockPublicCross') {\n        item.blockPublicCross = target.checked ? true : false;\n      }\n\n      if (name === 'accountId') {\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/kmss').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.kmss = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/storages').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.storageTargets = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  accountId: true,\n                  regionId: true,\n                  encryptionType: true,\n                  kmsId: true,\n                  storageTargetId: true\n                };\n                errors = this.validate(item.name, item.accountId, item.regionId, item.encryptionType, item.kmsId, item.storageTargetId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = FRT_BASE_URL + '/storages';\n                item.account = {\n                  id: item.accountId\n                };\n                item.region = {\n                  id: item.regionId\n                };\n\n                if (!item.encryption) {\n                  item.encryptionType = '';\n                  item.kms = null;\n                } else {\n                  if (item.encryptionType === 'AWS-KMS') item.kms = {\n                    id: item.kmsId\n                  };else item.kms = null;\n                }\n\n                if (!item.serverAccessLoging) {\n                  item.targetPrefix = null;\n                  item.storageTarget = null;\n                } else {\n                  //console.log(item.storageTarget + '   ' + item.storageTargetId);\n                  item.storageTarget = {\n                    id: item.storageTargetId\n                  };\n                } //console.log(item.accountId + '   ' + item.account.id);\n\n\n                _context2.next = 15;\n                return fetch(item.id ? API_BASE_URL + '/accounts/' + item.account.id + '/storages/' + item.id : API_BASE_URL + '/accounts/' + item.account.id + '/storages', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 15:\n                this.props.history.push(hist);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, accountId, regionId, encryptionType, kmsId, storageTargetId) {\n      var errors = {\n        name: '',\n        accountId: '',\n        regionId: '',\n        encryptionType: '',\n        kmsId: '',\n        storageTargetId: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'account should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.regionId && regionId.length === 0) {\n        errors.regionId = 'regionId should not be null';\n        return errors;\n      }\n\n      if (this.state.item.encryption && this.state.item.touched.encryptionType && encryptionType.length === 0) {\n        errors.encryptionType = 'encryptionType should not be null';\n        return errors;\n      }\n\n      if (this.state.item.encryption && this.state.item.encryptionType === 'AWS-KMS' && this.state.item.touched.kmsId && kmsId.length === 0) {\n        errors.kmsId = 'kmsId should not be null';\n        return errors;\n      }\n\n      if (this.state.item.serverAccessLoging && this.state.item.touched.storageTarget && storageTargetId.length === 0) {\n        errors.storageTargetId = 'storageTarget should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, item.id ? 'Edit storage' : 'Add storage');\n      var errors = this.validate(item.name, item.accountId, item.regionId, item.encryptionType, item.kmsId, item.storageTagetId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = FRT_BASE_URL + \"/storages\";\n      var opts = [];\n\n      if (item.account && item.account.length) {\n        item.account.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 370\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount));\n        });\n      }\n\n      var tri = item.accountId || '';\n      item.accountId = tri;\n      var optrs = [];\n\n      if (item.regions && item.regions.length) {\n        item.regions.map(function (r) {\n          optrs.push(React.createElement(\"option\", {\n            value: r.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379\n            },\n            __self: this\n          }, r.id, \" \", r.name));\n        });\n      }\n\n      var region = item.regionId || '';\n      item.regionId = region;\n      var optks = [];\n\n      if (item.kmss && item.kmss.length) {\n        item.kmss.map(function (r) {\n          optks.push(React.createElement(\"option\", {\n            value: r.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 388\n            },\n            __self: this\n          }, r.id, \" \", r.alias));\n        });\n      }\n\n      var kms = item.kmsId || '';\n      item.kmsId = kms;\n      var optss = [];\n\n      if (item.storageTargets && item.storageTargets.length) {\n        item.storageTargets.map(function (r) {\n          optss.push(React.createElement(\"option\", {\n            value: r.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 397\n            },\n            __self: this\n          }, r.id, \" \", r.name));\n        });\n      }\n\n      var storageTarget = item.storageTargetId || '';\n      item.storageTargetId = storageTarget;\n      var encryptionType = item.encryption ? React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"Encryption Type(*)\"), React.createElement(FormGroup, {\n        check: true,\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"type\",\n        id: \"type\",\n        value: \"AES-256\",\n        checked: item.encryptionType === 'AES-256',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('type'),\n        autoComplete: \"type\",\n        valid: errors.type === '',\n        invalid: errors.type !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }), ' ', \"AES-256\")), React.createElement(FormGroup, {\n        check: true,\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"type\",\n        id: \"type\",\n        value: \"AWS-KMS\",\n        checked: item.encryptionType === 'AWS-KMS',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('type'),\n        autoComplete: \"type\",\n        valid: errors.type === '',\n        invalid: errors.type !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }), ' ', \"AWS-KMS\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, errors.type)) : '';\n      var kmss = item.encryption && item.encryptionType === 'AWS-KMS' ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"kmsId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, \"Kms (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"kmsId\",\n        id: \"kmsId\",\n        value: kms,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('kmsId'),\n        valid: errors.kmsId === '',\n        invalid: errors.kmsId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"Choose\"), optks), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, errors.kmsId)) : '';\n      var storageTargets = item.serverAccessLoging ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"storageTargetId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, \"Storage Target (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"storageTargetId\",\n        id: \"storageTargetId\",\n        value: storageTarget,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('storageTargetId'),\n        valid: errors.storageTargetId === '',\n        invalid: errors.storageTargetId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"Choose\"), optss), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, errors.storageTargetId)) : '';\n      var targetPrefix = item.serverAccessLoging ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"targetPrefix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, \"Target Prefix (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"targetPrefix\",\n        id: \"targetPrefix\",\n        value: item.targetPrefix || '',\n        placeholder: \"Enter targetPrefix\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('targetPrefix'),\n        autoComplete: \"targetPrefix\",\n        valid: errors.targetPrefix === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, errors.targetPrefix)) : '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, \"accounts (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: tri,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"regionId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, \"Region (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"regionId\",\n        id: \"regionId\",\n        value: region,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('regionId'),\n        valid: errors.regionId === '',\n        invalid: errors.regionId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, \"Choose\"), optrs), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, errors.regionId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"versionning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, \"Versionning:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"versionning\",\n        id: \"versionning\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('versionning'),\n        checked: item.versionning === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"encryption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, \"Encryption:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"encryption\",\n        id: \"encryption\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('encryption'),\n        checked: item.encryption === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      })), encryptionType, kmss, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"cloudWatchMetrics\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, \"Cloud Watch Metrics:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"cloudWatchMetrics\",\n        id: \"cloudWatchMetrics\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('cloudWatchMetrics'),\n        checked: item.cloudWatchMetrics === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"serverAccessLoging\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, \"Server Access Loging:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"serverAccessLoging\",\n        id: \"serverAccessLoging\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('serverAccessLoging'),\n        checked: item.serverAccessLoging === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      })), storageTargets, targetPrefix, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, \"Public access settings for this bucket\"), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, \"Use the Amazon S3 block public access settings to enforce that buckets don\\\\''t allow public access to data. You can also configure the Amazon S3 block public access settings at the account level\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, \"Manage public access control lists (ACLs) for this bucket\"), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"blockNewPublicAclObject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, \"Block new public ACLs and uploading public objects (Recommended):\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"blockNewPublicAclObject\",\n        id: \"blockNewPublicAclObject\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('blockNewPublicAclObject'),\n        checked: item.blockNewPublicAclObject === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"removePublicAccessGranted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, \"Remove public access granted through public ACLs (Recommended):\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"removePublicAccessGranted\",\n        id: \"removePublicAccessGranted\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('removePublicAccessGranted'),\n        checked: item.removePublicAccessGranted === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, \"Manage public bucket policies for this bucket\"), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"blockNewPublicBucket\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, \"Block new public bucket policies (Recommended):\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"blockNewPublicBucket\",\n        id: \"blockNewPublicBucket\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('blockNewPublicBucket'),\n        checked: item.blockNewPublicBucket === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"blockPublicCross\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \"Block public and cross-account access if bucket has public policies (Recommended):\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"blockPublicCross\",\n        id: \"blockPublicCross\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('blockPublicCross'),\n        checked: item.blockPublicCross === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"grantAmazonS3ReadAccess\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \"Grant Amazon S3 Delivery Read Access (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"grantAmazonS3ReadAccess\",\n        id: \"grantAmazonS3ReadAccess\",\n        value: item.grantAmazonS3ReadAccess,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('grantAmazonS3ReadAccess'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, \"Do not grant Amazon S3 Log Delivery group write access to this bucket\"), React.createElement(\"option\", {\n        value: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, \"Grant Amazon S3 Log Delivery group write access to this bucket\"))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"cors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, \"Cors Configuration\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"cors\",\n        id: \"cors\",\n        value: item.cors || '',\n        placeholder: \"<CORSConfiguration>\\r <CORSRule>\\r <AllowedOrigin>*</AllowedOrigin>\\r <AllowedMethod>GET</AllowedMethod>\\r <AllowedHeader>Authorization</AllowedHeader>\\r <MaxAgeSeconds>3000</MaxAgeSeconds>\\r </CORSRule>\\r\\n</CORSConfiguration>\",\n        onChange: this.handleChange,\n        autoComplete: \"cors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return StorageEdit;\n}(Component);\n\nexport default withRouter(StorageEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\StorageEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","FormText","AppNavbar","API_BASE_URL","FRT_BASE_URL","StorageEdit","props","emptyItem","name","text","account","accountId","regionId","regions","region","versionning","cloudWatchMetrics","encryption","encryptionType","kmsId","kms","kmss","serverAccessLoging","storageTargetId","storageTarget","storageTargets","targetPrefix","cors","grantAmazonS3ReadAccess","blockNewPublicAclObject","removePublicAccessGranted","blockNewPublicBucket","blockPublicCross","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","storage","then","result","jsonResult","event","target","value","checked","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","push","length","title","storageTagetId","canc","opts","map","s","numAccount","tri","optrs","r","optks","alias","optss","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass StorageEdit extends Component {\r\n \r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n\t  account: {},\r\n  \taccountId : '',\r\n    regionId:'',\r\n    regions:[],\r\n    region: {},\r\n    versionning: true,\r\n    cloudWatchMetrics: false,\r\n    encryption: false,\r\n    encryptionType: 'AES-256',\r\n    kmsId:'',\r\n    kms: {},\r\n    kmss: [],\r\n    serverAccessLoging: false,\r\n    storageTargetId: '',\r\n    storageTarget: {},\r\n    storageTargets: [],\r\n    targetPrefix: '',\r\n    cors: '',\r\n    grantAmazonS3ReadAccess: false,\r\n    blockNewPublicAclObject:false, \r\n    removePublicAccessGranted:false, \r\n    blockNewPublicBucket:false, \r\n    blockPublicCross:false, \r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      regionId: false,\r\n      encryptionType: false,\r\n      kmsId: false,\r\n      storageTargetId: false\r\n     \r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const storage = await (await fetch(`${API_BASE_URL}/storages/${this.props.match.params.id}`)).json();\r\n      storage.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        regionId: false,\r\n        encryptionType: false,\r\n        kmsId: false,\r\n        storageTargetId: false\r\n      };\r\n      this.setState({item: storage});\r\n\r\n      let item = {...this.state.item};\r\n      item.accountId = storage.account.id;\r\n      item.regionId = storage.region.id;\r\n      \r\n      if(item.encryptionType === '') item.encryptionType = 'AES-256';\r\n      if(storage.kms) item.kmsId = storage.kms.id;\r\n\r\n      if(storage.storageTarget) item.storageTargetId = storage.storageTarget.id;\r\n\r\n       fetch(API_BASE_URL + '/accounts/' + (storage.account.id) + '/kmss',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.kmss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/accounts/' + (storage.account.id) + '/storages',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.storageTargets = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const storage = {\r\n        name: '',\r\n        text: '',\r\n        account: {},\r\n        accountId : '',\r\n        regionId:'',\r\n        regions:[],\r\n        region: {},\r\n        versionning: true,\r\n        cloudWatchMetrics: false,\r\n        encryption: false,\r\n        encryptionType: 'AES-256',\r\n        kmsId:'',\r\n        kms: {},\r\n        kmss: [],\r\n        serverAccessLoging: false,\r\n        storageTargetId: '',\r\n        storageTarget: {},\r\n        storageTargets: [],\r\n        targetPrefix: '',\r\n        cors: '',\r\n        grantAmazonS3ReadAccess: false,\r\n        blockNewPublicAclObject:false, \r\n        removePublicAccessGranted:false, \r\n        blockNewPublicBucket:false, \r\n        blockPublicCross:false, \r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          regionId: false,\r\n          encryptionType: false,\r\n          kmsId: false,\r\n          storageTargetId: false\r\n        }\r\n      };\r\n      storage.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          regionId: false,\r\n          encryptionType: false,\r\n          kmsId: false,\r\n          storageTargetId: false\r\n      };\r\n\r\n      this.setState({item: storage});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.account = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n    await fetch(API_BASE_URL + '/regions',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.regions = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    // \r\n    if(name === 'serverAccessLoging')\r\n    {\r\n      item.serverAccessLoging = (target.checked) ? true: false;\r\n    }\r\n\r\n    if(name === 'versionning')\r\n    {\r\n      item.versionning = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'cloudWatchMetrics')\r\n    {\r\n      item.cloudWatchMetrics = (target.checked) ? true: false;\r\n    }\r\n\r\n    if(name === 'encryption')\r\n    {\r\n      item.encryption = (target.checked) ? true: false;\r\n    }\r\n\r\n    if(name === 'type')\r\n    {\r\n      if(value === 'AES-256'){\r\n        item.encryptionType = 'AES-256';\r\n      }\r\n      else\r\n      {\r\n        item.encryptionType = 'AWS-KMS';\r\n      }\r\n    }\r\n\r\n\r\n    if(name === 'blockNewPublicAclObject')\r\n    {\r\n      item.blockNewPublicAclObject = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'removePublicAccessGranted')\r\n    {\r\n      item.removePublicAccessGranted = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'blockNewPublicBucket')\r\n    {\r\n      item.blockNewPublicBucket = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'blockPublicCross')\r\n    {\r\n      item.blockPublicCross = (target.checked) ? true: false;\r\n    }\r\n\r\n    if(name === 'accountId')\r\n    {\r\n     \r\n      fetch(API_BASE_URL + '/accounts/' + item.accountId + '/kmss',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.kmss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/accounts/' + item.accountId  + '/storages',) \r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.storageTargets = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n     \r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          regionId: true,\r\n          encryptionType: true,\r\n          kmsId: true,\r\n          storageTargetId: true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.regionId, item.encryptionType, item.kmsId, item.storageTargetId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= FRT_BASE_URL + '/storages'; \r\n\r\n    \r\n    item.account={id: item.accountId};\r\n    item.region={id: item.regionId};\r\n\r\n    if (!item.encryption)\r\n    {\r\n      item.encryptionType = '';\r\n      item.kms= null;\r\n    }\r\n    else \r\n    {\r\n      if(item.encryptionType === 'AWS-KMS') item.kms = {id : item.kmsId};\r\n      else item.kms= null;\r\n    }\r\n\r\n    if (!item.serverAccessLoging)\r\n    {\r\n      item.targetPrefix = null;\r\n      item.storageTarget = null;\r\n    }\r\n    else\r\n    {\r\n      //console.log(item.storageTarget + '   ' + item.storageTargetId);\r\n      item.storageTarget = {id: item.storageTargetId};\r\n    }\r\n    \r\n    //console.log(item.accountId + '   ' + item.account.id);\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/storages/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/storages', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId, regionId, encryptionType, kmsId, storageTargetId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      regionId: '',\r\n      encryptionType: '',\r\n      kmsId: '',\r\n      storageTargetId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'account should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.regionId && regionId.length === 0){\r\n      errors.regionId = 'regionId should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.encryption && this.state.item.touched.encryptionType && encryptionType.length === 0){\r\n      errors.encryptionType = 'encryptionType should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.encryption && this.state.item.encryptionType === 'AWS-KMS' && this.state.item.touched.kmsId && kmsId.length === 0){\r\n      errors.kmsId = 'kmsId should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.serverAccessLoging && this.state.item.touched.storageTarget  && storageTargetId.length === 0){\r\n      errors.storageTargetId = 'storageTarget should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit storage' : 'Add storage'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.regionId, item.encryptionType, item.kmsId, item.storageTagetId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = FRT_BASE_URL + \"/storages\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.account && item.account.length){\r\n      item.account.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let tri = item.accountId || '';\r\n    item.accountId = tri;\r\n\r\n    let optrs = [];\r\n    if(item.regions && item.regions.length){\r\n      item.regions.map(r => {  \r\n          optrs.push(<option value={r.id}>{r.id} {r.name}</option>);\r\n      });\r\n    }\r\n    let region = item.regionId || '';\r\n    item.regionId = region;\r\n\r\n    let optks = [];\r\n    if(item.kmss && item.kmss.length){\r\n      item.kmss.map(r => {  \r\n          optks.push(<option value={r.id}>{r.id} {r.alias}</option>);\r\n      });\r\n    }\r\n    let kms = item.kmsId || '';\r\n    item.kmsId = kms;\r\n\r\n    let optss = [];\r\n    if(item.storageTargets && item.storageTargets.length){\r\n      item.storageTargets.map(r => {  \r\n          optss.push(<option value={r.id}>{r.id} {r.name}</option>);\r\n      });\r\n    }\r\n    let storageTarget = item.storageTargetId || '';\r\n    item.storageTargetId = storageTarget;\r\n\r\n    let encryptionType = (item.encryption) ? <FormGroup tag=\"fieldset\">\r\n            <Label for=\"type\">Encryption Type(*)</Label>\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"AES-256\" checked={item.encryptionType === 'AES-256'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                AES-256\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"AWS-KMS\" checked={item.encryptionType === 'AWS-KMS'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                 AWS-KMS\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup> : '';\r\n    \r\n    let kmss = (item.encryption && item.encryptionType === 'AWS-KMS' ) ? <FormGroup>\r\n            <Label for=\"kmsId\">Kms (*)</Label>\r\n            <Input type=\"select\" name=\"kmsId\" id=\"kmsId\"  value={kms} onChange={this.handleChange} onBlur={this.handleBlur('kmsId')}\r\n                 valid={errors.kmsId === ''}\r\n                 invalid={errors.kmsId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optks}\r\n            </Input>\r\n            <FormFeedback>{errors.kmsId}</FormFeedback>\r\n          </FormGroup> : '';\r\n    \r\n    let storageTargets = (item.serverAccessLoging) ? <FormGroup>\r\n            <Label for=\"storageTargetId\">Storage Target (*)</Label>\r\n            <Input type=\"select\" name=\"storageTargetId\" id=\"storageTargetId\"  value={storageTarget} onChange={this.handleChange} onBlur={this.handleBlur('storageTargetId')}\r\n                 valid={errors.storageTargetId === ''}\r\n                 invalid={errors.storageTargetId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optss}\r\n            </Input>\r\n            <FormFeedback>{errors.storageTargetId}</FormFeedback>\r\n          </FormGroup> : '';\r\n\r\n    \r\n    let targetPrefix = (item.serverAccessLoging) ? <FormGroup>\r\n            <Label for=\"targetPrefix\">Target Prefix (*)</Label>\r\n            <Input type=\"text\" name=\"targetPrefix\" id=\"targetPrefix\" value={item.targetPrefix || ''} placeholder=\"Enter targetPrefix\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('targetPrefix')} autoComplete=\"targetPrefix\"\r\n                   valid={errors.targetPrefix === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.targetPrefix}</FormFeedback>\r\n          </FormGroup> : '';\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">accounts (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         <FormGroup>\r\n            <Label for=\"regionId\">Region (*)</Label>\r\n            <Input type=\"select\" name=\"regionId\" id=\"regionId\"  value={region} onChange={this.handleChange} onBlur={this.handleBlur('regionId')}\r\n                 valid={errors.regionId === ''}\r\n                 invalid={errors.regionId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optrs}\r\n            </Input>\r\n            <FormFeedback>{errors.regionId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         <FormGroup > \r\n            <Label for=\"versionning\">Versionning:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"versionning\" id=\"versionning\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('versionning')} \r\n                    checked={item.versionning === true}/>\r\n          </FormGroup>\r\n\r\n\r\n           <FormGroup > \r\n            <Label for=\"encryption\">Encryption:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"encryption\" id=\"encryption\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('encryption')} \r\n                    checked={item.encryption === true}/>\r\n          </FormGroup>\r\n\r\n\r\n          {encryptionType}\r\n          {kmss}\r\n\r\n          <FormGroup >\r\n            <Label for=\"cloudWatchMetrics\">Cloud Watch Metrics:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"cloudWatchMetrics\" id=\"cloudWatchMetrics\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('cloudWatchMetrics')} \r\n                    checked={item.cloudWatchMetrics === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"serverAccessLoging\">Server Access Loging:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"serverAccessLoging\" id=\"serverAccessLoging\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('serverAccessLoging')} \r\n                    checked={item.serverAccessLoging === true}/>\r\n          </FormGroup>\r\n          \r\n          {storageTargets}\r\n          {targetPrefix}\r\n\r\n          <FormGroup> \r\n            <Label for=\"\">Public access settings for this bucket</Label>\r\n            <FormText>Use the Amazon S3 block public access settings to enforce that buckets don\\''t allow public access to data. You can also configure the Amazon S3 block public access settings at the account level</FormText>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"\">Manage public access control lists (ACLs) for this bucket</Label>\r\n            <FormText></FormText>\r\n          </FormGroup>\r\n          <FormGroup > \r\n            <Label for=\"blockNewPublicAclObject\">Block new public ACLs and uploading public objects (Recommended):</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"blockNewPublicAclObject\" id=\"blockNewPublicAclObject\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('blockNewPublicAclObject')} \r\n                    checked={item.blockNewPublicAclObject === true}/>\r\n          </FormGroup>\r\n          <FormGroup > \r\n            <Label for=\"removePublicAccessGranted\">Remove public access granted through public ACLs (Recommended):</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"removePublicAccessGranted\" id=\"removePublicAccessGranted\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('removePublicAccessGranted')} \r\n                    checked={item.removePublicAccessGranted === true}/>\r\n          </FormGroup>\r\n\r\n           <FormGroup>\r\n            <Label for=\"\">Manage public bucket policies for this bucket</Label>\r\n            <FormText></FormText>\r\n          </FormGroup>\r\n          <FormGroup > \r\n            <Label for=\"blockNewPublicBucket\">Block new public bucket policies (Recommended):</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"blockNewPublicBucket\" id=\"blockNewPublicBucket\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('blockNewPublicBucket')} \r\n                    checked={item.blockNewPublicBucket === true}/>\r\n          </FormGroup>\r\n          <FormGroup > \r\n            <Label for=\"blockPublicCross\">Block public and cross-account access if bucket has public policies (Recommended):</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"blockPublicCross\" id=\"blockPublicCross\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('blockPublicCross')} \r\n                    checked={item.blockPublicCross === true}/>\r\n          </FormGroup>\r\n          \r\n\r\n          <FormGroup>\r\n            <Label for=\"grantAmazonS3ReadAccess\">Grant Amazon S3 Delivery Read Access (*)</Label>\r\n            <Input type=\"select\" name=\"grantAmazonS3ReadAccess\" id=\"grantAmazonS3ReadAccess\"  value={item.grantAmazonS3ReadAccess} onChange={this.handleChange} onBlur={this.handleBlur('grantAmazonS3ReadAccess')}\r\n            >\r\n              <option value=\"false\">Do not grant Amazon S3 Log Delivery group write access to this bucket</option>\r\n              <option value=\"true\">Grant Amazon S3 Log Delivery group write access to this bucket</option>\r\n            </Input>\r\n             \r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"cors\">Cors Configuration</Label>\r\n            <Input type=\"textarea\" name=\"cors\" id=\"cors\" value={item.cors || ''}\r\n                   placeholder='<CORSConfiguration>\r\n <CORSRule>\r\n   <AllowedOrigin>*</AllowedOrigin>\r\n   <AllowedMethod>GET</AllowedMethod>\r\n   <AllowedHeader>Authorization</AllowedHeader>\r\n  <MaxAgeSeconds>3000</MaxAgeSeconds>\r\n </CORSRule>\r\n</CORSConfiguration>'\r\n                   onChange={this.handleChange} autoComplete=\"cors\"/>\r\n          </FormGroup>\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(StorageEdit);"]},"metadata":{},"sourceType":"module"}