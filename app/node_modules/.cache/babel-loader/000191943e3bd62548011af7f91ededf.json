{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\ProductEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL } from './constants';\n\nvar ProductEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductEdit, _Component);\n\n  function ProductEdit(props) {\n    var _this;\n\n    _classCallCheck(this, ProductEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      mailList: '',\n      type: '',\n      bastion: '',\n      mailListAlert: '',\n      text: '',\n      appContext: '',\n      trigramme: {},\n      trigrammeId: '',\n      touched: {\n        name: false,\n        mailList: false,\n        type: false,\n        bastion: false,\n        trigrammeId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProductEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var product, item, _product;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/products/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                product = _context.sent;\n                product.touched = {\n                  name: false,\n                  trigrammeId: false\n                };\n                this.setState({\n                  item: product\n                });\n                item = _objectSpread({}, this.state.item);\n                item.trigrammeId = product.trigramme.id;\n                this.setState({\n                  item: item\n                });\n                _context.next = 16;\n                break;\n\n              case 13:\n                //alert(`/trigrammes/${this.props.match.params.idt}`);      \n                //const trigramme = await (await fetch(`/trigrammes/${this.props.match.params.idt}`)).json();\n                _product = {\n                  name: '',\n                  mailList: '',\n                  type: '',\n                  bastion: '',\n                  mailListAlert: '',\n                  text: '',\n                  appContext: '',\n                  trigramme: {},\n                  trigrammeId: '',\n                  touched: {\n                    name: false,\n                    mailList: false,\n                    type: false,\n                    bastion: false,\n                    trigrammeId: false\n                  }\n                };\n                _product.touched = {\n                  name: false,\n                  mailList: false,\n                  type: false,\n                  bastion: false,\n                  trigrammeId: false\n                };\n                this.setState({\n                  item: _product\n                });\n\n              case 16:\n                _context.next = 18;\n                return fetch(API_BASE_URL + '/trigrammes2').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.trigramme = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  mailList: true,\n                  type: true,\n                  bastion: true,\n                  trigrammeId: true\n                };\n                errors = this.validate(item.name, item.mailList, item.type, item.bastion, item.trigrammeId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/products';\n                item.trigramme = {\n                  id: item.trigrammeId\n                }; //console.log(item.trigrammeId + '   ' + item.trigramme.id);\n\n                _context2.next = 12;\n                return fetch(item.id ? API_BASE_URL + '/trigrammes/' + item.trigramme.id + '/products/' + item.id : API_BASE_URL + '/trigrammes/' + item.trigramme.id + '/products', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 12:\n                this.props.history.push(hist);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, mailList, type, bastion, trigrammeId) {\n      var errors = {\n        name: '',\n        mailList: '',\n        type: '',\n        bastion: '',\n        trigrammeId: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      } else if (this.state.item.touched.type && type.length === 0) {\n        errors.type = 'Type should not be null';\n        return errors;\n      } else if (this.state.item.touched.bastion && bastion.length === 0) {\n        errors.bastion = 'Bastion should not be null';\n        return errors;\n      }\n\n      var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (this.state.item.touched.mailList && !emailRex.test(mailList)) {\n        errors.mailList = 'mailList should have correct format ';\n        return errors;\n      }\n      /*if(!this.state.item.id && this.state.item.touched.trigrammeId && trigrammeId.length === 0){\r\n        errors.trigrammeId = 'trigramme should not be null';\r\n        return errors;\r\n      }*/\n\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, item.id ? 'Edit Product' : 'Add Product');\n      var errors = this.validate(item.name, item.mailList, item.type, item.bastion, item.trigrammeId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/products\";\n      /*let accs = null;\r\n      accs = <FormGroup>\r\n              <Label for=\"trigrammeId\">Trigramme: {item.trigramme.name}</Label>\r\n              <Input type=\"text\" name=\"trigrammeId\" id=\"trigrammeId\" value={item.trigramme.id || ''} disabled=\"true\"/>\r\n            </FormGroup>;\r\n      */\n\n      /*let acc = null;\r\n      if(item.id) acc = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/product/\" + item.id + \"/accounts\"}>Accounts</Button>;*/\n\n      var opts = [];\n\n      if (item.trigramme && item.trigramme.length) {\n        item.trigramme.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      if (item.id) {\n        opts.push(React.createElement(\"option\", {\n          key: item.trigramme.id,\n          value: item.trigramme.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, item.trigramme.id, \" \", item.trigramme.name, \" \"));\n      }\n\n      var tri = item.trigrammeId || '';\n      item.trigrammeId = tri;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"trigrammeId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Trigrammes (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"trigrammeId\",\n        id: \"trigrammeId\",\n        value: tri,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('trigrammeId'),\n        valid: errors.trigrammeId === '',\n        invalid: errors.trigrammeId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, errors.trigrammeId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Type (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"type\",\n        id: \"type\",\n        value: item.type || '',\n        placeholder: \"Enter type\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('type'),\n        autoComplete: \"type\",\n        valid: errors.type === '',\n        invalid: errors.type !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, errors.type)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"bastion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Bastion (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"bastion\",\n        id: \"bastion\",\n        value: item.bastion || '',\n        placeholder: \"Enter bastion\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('bastion'),\n        autoComplete: \"bastion\",\n        valid: errors.bastion === '',\n        invalid: errors.bastion !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, errors.bastion)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"mailList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"mailList (*)\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"mailList\",\n        id: \"mailList\",\n        value: item.mailList || '',\n        placeholder: \"Enter mailList\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('mailList'),\n        autoComplete: \"mailList\",\n        valid: errors.mailList === '',\n        invalid: errors.mailList !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, errors.mailList)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"mailListAlert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"mailListAlert\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"mailListAlert\",\n        id: \"mailListAlert\",\n        value: item.mailListAlert || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"appContext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"APP Context\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"appContext\",\n        id: \"appContext\",\n        value: item.appContext || '',\n        placeholder: \"Enter app context\",\n        onChange: this.handleChange,\n        autoComplete: \"appContext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return ProductEdit;\n}(Component);\n\nexport default withRouter(ProductEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\ProductEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","ProductEdit","props","emptyItem","name","mailList","type","bastion","mailListAlert","text","appContext","trigramme","trigrammeId","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","product","then","result","jsonResult","event","target","value","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","push","length","emailRex","test","title","canc","opts","map","s","tri"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass ProductEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    mailList: '',\r\n    type: '',\r\n    bastion: '',\r\n    mailListAlert: '',\r\n    text: '',\r\n    appContext: '',\r\n\t  trigramme: {},\r\n  \ttrigrammeId : '',\r\n    touched: {\r\n      name: false,\r\n      mailList: false,\r\n      type: false,\r\n      bastion: false,\r\n      trigrammeId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const product = await (await fetch(`${API_BASE_URL}/products/${this.props.match.params.id}`)).json();\r\n      product.touched = {\r\n        name: false,\r\n        trigrammeId: false\r\n      };\r\n      this.setState({item: product});\r\n\r\n      let item = {...this.state.item};\r\n      item.trigrammeId = product.trigramme.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      //alert(`/trigrammes/${this.props.match.params.idt}`);      \r\n      //const trigramme = await (await fetch(`/trigrammes/${this.props.match.params.idt}`)).json();\r\n      const product = {\r\n        name: '',\r\n        mailList: '',\r\n        type: '',\r\n        bastion: '',\r\n        mailListAlert: '',\r\n        text: '',\r\n        appContext: '',\r\n        trigramme: {},\r\n        trigrammeId : '',\r\n        touched: {\r\n          name: false,\r\n          mailList: false,\r\n          type: false,\r\n          bastion: false,\r\n          trigrammeId: false\r\n        }\r\n      };\r\n      product.touched = {\r\n          name: false,\r\n          mailList: false,\r\n          type: false,\r\n          bastion: false,\r\n          trigrammeId: false\r\n      };\r\n      this.setState({item: product});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/trigrammes2',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.trigramme = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          mailList: true,\r\n          type: true,\r\n          bastion: true,\r\n          trigrammeId: true\r\n    };\r\n    const errors = this.validate(item.name, item.mailList, item.type, item.bastion, item.trigrammeId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    const hist= API_BASE_URL + '/products'; \r\n\r\n    item.trigramme={id: item.trigrammeId};\r\n    //console.log(item.trigrammeId + '   ' + item.trigramme.id);\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/trigrammes/' + (item.trigramme.id) + '/products/'+(item.id) : API_BASE_URL + '/trigrammes/' + item.trigramme.id + '/products', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, mailList, type, bastion, trigrammeId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      mailList: '',\r\n      type: '',\r\n      bastion: '',\r\n      trigrammeId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'Type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.bastion && bastion.length === 0){\r\n      errors.bastion = 'Bastion should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    \r\n    if(this.state.item.touched.mailList && !emailRex.test(mailList)){\r\n      errors.mailList = 'mailList should have correct format ';\r\n      return errors;\r\n    }\r\n\r\n    /*if(!this.state.item.id && this.state.item.touched.trigrammeId && trigrammeId.length === 0){\r\n      errors.trigrammeId = 'trigramme should not be null';\r\n      return errors;\r\n    }*/\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Product' : 'Add Product'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.mailList, item.type, item.bastion, item.trigrammeId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/products\";\r\n\r\n    /*let accs = null;\r\n    accs = <FormGroup>\r\n            <Label for=\"trigrammeId\">Trigramme: {item.trigramme.name}</Label>\r\n            <Input type=\"text\" name=\"trigrammeId\" id=\"trigrammeId\" value={item.trigramme.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n    */\r\n    /*let acc = null;\r\n    if(item.id) acc = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/product/\" + item.id + \"/accounts\"}>Accounts</Button>;*/\r\n\r\n    let opts = [];\r\n    if(item.trigramme && item.trigramme.length){\r\n      item.trigramme.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    if(item.id) {\r\n          opts.push(<option key={item.trigramme.id} value={item.trigramme.id} >{item.trigramme.id} {item.trigramme.name} </option>);\r\n    }\r\n\r\n    let tri = item.trigrammeId || '';\r\n    item.trigrammeId = tri;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"trigrammeId\">Trigrammes (*)</Label>\r\n            <Input type=\"select\" name=\"trigrammeId\" id=\"trigrammeId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('trigrammeId')}\r\n                 valid={errors.trigrammeId === ''}\r\n                 invalid={errors.trigrammeId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.trigrammeId}</FormFeedback>\r\n          </FormGroup>\r\n                    \r\n          <FormGroup>\r\n            <Label for=\"type\">Type (*)</Label>\r\n            <Input type=\"text\" name=\"type\" id=\"type\" value={item.type || ''} placeholder=\"Enter type\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                   valid={errors.type === ''}\r\n                   invalid={errors.type !== ''}\r\n            />\r\n           <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n\r\n  \r\n\t\t      <FormGroup>\r\n            <Label for=\"bastion\">Bastion (*)</Label>\r\n            <Input type=\"text\" name=\"bastion\" id=\"bastion\" value={item.bastion || ''} placeholder=\"Enter bastion\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('bastion')} autoComplete=\"bastion\"\r\n                   valid={errors.bastion === ''}\r\n                   invalid={errors.bastion !== ''}\r\n            />\r\n           <FormFeedback>{errors.bastion}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"mailList\">mailList (*)</Label>\r\n            <Input type=\"email\" name=\"mailList\" id=\"mailList\" value={item.mailList || ''} placeholder=\"Enter mailList\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('mailList')} autoComplete=\"mailList\"\r\n                   valid={errors.mailList === ''}\r\n                   invalid={errors.mailList !== ''}\r\n            />\r\n           <FormFeedback>{errors.mailList}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"mailListAlert\">mailListAlert</Label>\r\n            <Input type=\"email\" name=\"mailListAlert\" id=\"mailListAlert\" value={item.mailListAlert || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"appContext\">APP Context</Label>\r\n            <Input type=\"text\" name=\"appContext\" id=\"appContext\" value={item.appContext || ''} placeholder=\"Enter app context\"\r\n                   onChange={this.handleChange} autoComplete=\"appContext\"\r\n                   \r\n                   />\r\n          </FormGroup>\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(ProductEdit);"]},"metadata":{},"sourceType":"module"}