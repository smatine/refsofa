{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\ElasticSearchEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText, Col } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar ElasticSearchEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ElasticSearchEdit, _Component);\n\n  function ElasticSearchEdit(props) {\n    var _this;\n\n    _classCallCheck(this, ElasticSearchEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ElasticSearchEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      account: {},\n      accounts: {},\n      accountId: '',\n      text: '',\n      vpc: {},\n      vpcs: {},\n      vpcId: '',\n      subnetgroup: {},\n      subnetgroups: {},\n      subnetgroupId: '',\n      prive: true,\n      domainName: '',\n      version: '',\n      instanceCount: '',\n      instanceTypes: {},\n      nodeInstance: {},\n      nodeMaster: {},\n      nodeInstanceId: '',\n      nodeMasterId: '',\n      enableDedicatedMaster: false,\n      dedicatedMasterInstanceCount: '',\n      enableZoneAwareness: false,\n      storageType: '',\n      volumeType: '',\n      volumeSize: '',\n      enableEncrypt: false,\n      snapshotConfiguration: '',\n      nodeToNodeEncryption: false,\n      provisionedIops: '',\n      allowExplicitIndex: true,\n      cacheSize: '',\n      maxClauseCount: '',\n      accessPolicy: '',\n      touched: {\n        name: false,\n        accountId: false,\n        vpcId: false,\n        subnetgroupId: false,\n        domainName: false,\n        version: false,\n        instanceCount: false,\n        dedicatedMasterInstanceCount: false,\n        storageType: false,\n        volumeType: false,\n        volumeSize: false,\n        snapshotConfiguration: false,\n        nodeInstanceId: false,\n        nodeMasterId: false,\n        provisionedIops: false,\n        accessPolicy: false,\n        enableZoneAwareness: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ElasticSearchEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var elasticSearch, _item, item, _elasticSearch;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 23;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/elasticSearchs/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                elasticSearch = _context.sent;\n                elasticSearch.touched = {\n                  name: false,\n                  accountId: false,\n                  vpcId: false,\n                  subnetgroupId: false,\n                  domainName: false,\n                  version: false,\n                  instanceCount: false,\n                  dedicatedMasterInstanceCount: false,\n                  storageType: false,\n                  volumeType: false,\n                  volumeSize: false,\n                  snapshotConfiguration: false,\n                  nodeInstanceId: false,\n                  nodeMasterId: false,\n                  provisionedIops: false,\n                  accessPolicy: false,\n                  enableZoneAwareness: false\n                };\n                this.setState({\n                  item: elasticSearch\n                });\n\n                if (!elasticSearch.prive) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.next = 11;\n                return fetch(API_BASE_URL + '/accounts/' + elasticSearch.account.id + '/vpcs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.vpcs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 11:\n                _context.next = 13;\n                return fetch(API_BASE_URL + '/vpcs/' + elasticSearch.vpc.id + '/type/ELK' + '/subnetGroups').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.subnetgroups = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 13:\n                _item = _objectSpread({}, this.state.item);\n                _item.vpcId = elasticSearch.vpc.id;\n                _item.subnetgroupId = elasticSearch.subnetgroup.id;\n                this.setState({\n                  item: _item\n                });\n\n              case 17:\n                item = _objectSpread({}, this.state.item);\n                item.accountId = elasticSearch.account.id;\n\n                if (item.nodes && item.nodes.length) {\n                  item.nodes.map(function (n) {\n                    if (n.type === 'instance') {\n                      item.instanceCount = n.instanceCount;\n                      item.nodeInstanceId = n.instanceType.id;\n                    } else if (n.type === 'master') {\n                      item.dedicatedMasterInstanceCount = n.instanceCount;\n                      item.nodeMasterId = n.instanceType.id;\n                    }\n                  });\n                }\n\n                this.setState({\n                  item: item\n                });\n                _context.next = 26;\n                break;\n\n              case 23:\n                _elasticSearch = {\n                  name: '',\n                  account: {},\n                  accounts: {},\n                  accountId: '',\n                  text: '',\n                  vpc: {},\n                  vpcs: {},\n                  vpcId: '',\n                  subnetgroup: {},\n                  subnetgroups: {},\n                  subnetgroupId: '',\n                  prive: true,\n                  domainName: '',\n                  version: '',\n                  instanceCount: '',\n                  enableDedicatedMaster: false,\n                  dedicatedMasterInstanceCount: '',\n                  enableZoneAwareness: false,\n                  storageType: '',\n                  volumeType: '',\n                  volumeSize: '',\n                  enableEncrypt: false,\n                  snapshotConfiguration: '',\n                  nodeToNodeEncryption: false,\n                  instanceTypes: {},\n                  nodeInstance: {},\n                  nodeMaster: {},\n                  nodeInstanceId: '',\n                  nodeMasterId: '',\n                  provisionedIops: '',\n                  allowExplicitIndex: true,\n                  accessPolicy: '',\n                  touched: {\n                    name: false,\n                    accountId: false,\n                    vpcId: false,\n                    subnetgroupId: false,\n                    domainName: false,\n                    version: false,\n                    instanceCount: false,\n                    dedicatedMasterInstanceCount: false,\n                    storageType: false,\n                    volumeType: false,\n                    volumeSize: false,\n                    snapshotConfiguration: false,\n                    nodeInstanceId: false,\n                    nodeMasterId: false,\n                    provisionedIops: false,\n                    accessPolicy: false,\n                    enableZoneAwareness: false\n                  }\n                };\n                _elasticSearch.touched = {\n                  name: false,\n                  accountId: false,\n                  vpcId: false,\n                  subnetgroupId: false,\n                  domainName: false,\n                  version: false,\n                  instanceCount: false,\n                  dedicatedMasterInstanceCount: false,\n                  storageType: false,\n                  volumeType: false,\n                  volumeSize: false,\n                  snapshotConfiguration: false,\n                  nodeInstanceId: false,\n                  nodeMasterId: false,\n                  provisionedIops: false,\n                  accessPolicy: false,\n                  enableZoneAwareness: false\n                };\n                this.setState({\n                  item: _elasticSearch\n                });\n\n              case 26:\n                _context.next = 28;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 28:\n                _context.next = 30;\n                return fetch(API_BASE_URL + '/instanceTypes').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.instanceTypes = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 30:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n\n      if (name === 'enableDedicatedMaster') {\n        item.enableDedicatedMaster = target.checked ? true : false;\n      } else if (name === 'enableZoneAwareness') {\n        item.enableZoneAwareness = target.checked ? true : false;\n      } else if (name === 'enableEncrypt') {\n        item.enableEncrypt = target.checked ? true : false;\n      } else if (name === 'nodeToNodeEncryption') {\n        item.nodeToNodeEncryption = target.checked ? true : false;\n      } else if (name === 'accessType') {\n        if (value === 'prive') {\n          //hide \n          item.prive = true;\n        } else {\n          //show\n          item.prive = false;\n        }\n      } else if (name === 'accountId') {\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/vpcs').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.vpcs = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        item.vpcId = '';\n        item.subnetgroupId = '';\n        item.subnetgroup = {};\n        item.subnetgroups = [];\n      } else if (name === 'vpcId') {\n        fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/type/ELK' + '/subnetGroups').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          item.subnetgroups = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  accountId: true,\n                  vpcId: true,\n                  subnetgroupId: true,\n                  domainName: true,\n                  version: true,\n                  instanceCount: true,\n                  dedicatedMasterInstanceCount: true,\n                  storageType: true,\n                  volumeType: true,\n                  volumeSize: true,\n                  snapshotConfiguration: true,\n                  nodeInstanceId: true,\n                  nodeMasterId: true,\n                  provisionedIops: true,\n                  accessPolicy: true,\n                  enableZoneAwareness: true\n                };\n                errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.domainName, item.version, item.instanceCount, item.dedicatedMasterInstanceCount, item.storageType, item.volumeType, item.volumeSize, item.snapshotConfiguration, item.nodeInstanceId, item.nodeMasterId, item.enableDedicatedMaster, item.provisionedIops, item.accessPolicy, item.enableZoneAwareness, item.accountId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = FRT_BASE_URL + '/elasticSearchs';\n                item.account = {\n                  id: item.accountId\n                };\n\n                if (item.prive) {\n                  item.vpc = {\n                    id: item.vpcId\n                  };\n                  item.subnetgroup = {\n                    id: item.subnetgroupId\n                  };\n                } else {\n                  item.vpc = null;\n                  item.subnetgroup = null;\n                }\n\n                item.nodeInstance = {\n                  \"type\": \"instance\",\n                  \"instanceCount\": item.instanceCount,\n                  \"instanceType\": {\n                    \"id\": item.nodeInstanceId\n                  }\n                };\n\n                if (!item.enableDedicatedMaster) {\n                  item.nodeMaster = null; //item.dedicatedMasterInstanceCount = 0;\n                } else {\n                  item.nodeMaster = {\n                    \"type\": \"master\",\n                    \"instanceCount\": item.dedicatedMasterInstanceCount,\n                    \"instanceType\": {\n                      \"id\": item.nodeMasterId\n                    }\n                  };\n                } //console.log(\"sma=\" + item.nodeInstanceId + \" \" + item.nodeMasterId);\n                //return;\n\n\n                item.nodes = [item.nodeInstance, item.nodeMaster];\n\n                if (!item.prive) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                _context2.next = 17;\n                return fetch(item.id ? API_BASE_URL + '/vpcs/' + item.vpc.id + '/elasticSearchs/' + item.id : API_BASE_URL + '/vpcs/' + item.vpc.id + '/elasticSearchs', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 17:\n                _context2.next = 21;\n                break;\n\n              case 19:\n                _context2.next = 21;\n                return fetch(item.id ? API_BASE_URL + '/elasticSearch/' + item.id : API_BASE_URL + '/elasticSearch', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 21:\n                this.props.history.push(hist);\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, vpcId, subnetgroupId, domainName, version, instanceCount, dedicatedMasterInstanceCount, storageType, volumeType, volumeSize, snapshotConfiguration, nodeInstanceId, nodeMasterId, enableDedicatedMaster, provisionedIops, accessPolicy, enableZoneAwareness, accountId) {\n      var errors = {\n        name: '',\n        accountId: '',\n        vpcId: '',\n        subnetgroupId: '',\n        domainName: '',\n        version: '',\n        instanceCount: '',\n        dedicatedMasterInstanceCount: '',\n        storageType: '',\n        volumeType: '',\n        volumeSize: '',\n        snapshotConfiguration: '',\n        nodeInstanceId: '',\n        nodeMasterId: '',\n        provisionedIops: '',\n        accessPolicy: '',\n        enableZoneAwareness: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      } else if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'accountId should not be null';\n        return errors;\n      } else if (this.state.item.prive && this.state.item.touched.vpcId && vpcId.length === 0) {\n        errors.vpcId = 'Vpc should not be null';\n        return errors;\n      } else if (this.state.item.prive && this.state.item.touched.subnetgroupId && subnetgroupId.length === 0) {\n        errors.subnetgroupId = 'Subnet group should not be null';\n        return errors;\n      } else if (this.state.item.touched.domainName && domainName.length === 0\n      /*|| !domainName.match(\"[a-z][0-9]-\")*/\n      ) {\n        errors.domainName = 'The name must start with a lowercase letter and must be between 3 and 28 characters. Valid characters are a-z (lowercase only), 0-9, and - (hyphen)';\n        return errors;\n      } else if (this.state.item.touched.version && version.length === 0) {\n        errors.version = 'version should not be null';\n        return errors;\n      } else if (this.state.item.touched.instanceCount && (instanceCount.length === 0 || instanceCount < 0)) {\n        errors.instanceCount = 'instanceCount should not be null or less than 0';\n        return errors;\n      } else if (this.state.item.touched.nodeInstanceId && nodeInstanceId.length === 0) {\n        errors.nodeInstanceId = 'nodeInstanceId should not be null';\n        return errors;\n      } else if (enableDedicatedMaster && this.state.item.touched.nodeMasterId && nodeMasterId.length === 0) {\n        errors.nodeMasterId = 'nodeMasterId should not be null';\n        return errors;\n      } else if (this.state.item.touched.enableZoneAwareness && enableZoneAwareness && (instanceCount == '' || instanceCount % 2 != 0)) {\n        errors.enableZoneAwareness = 'Zone awareness requires the instance count to be an even number';\n        return errors;\n      } else if (enableDedicatedMaster && this.state.item.touched.dedicatedMasterInstanceCount && dedicatedMasterInstanceCount.length === 0) {\n        errors.dedicatedMasterInstanceCount = 'dedicatedMasterInstanceCount should not be null';\n        return errors;\n      } else if (this.state.item.touched.storageType && storageType.length === 0) {\n        errors.storageType = 'storageType should not be null';\n        return errors;\n      } else if (this.state.item.touched.volumeType && volumeType.length === 0) {\n        errors.volumeType = 'volumeType should not be null';\n        return errors;\n      } else if (this.state.item.touched.volumeSize && (volumeSize.length === 0 || volumeSize < 10 || volumeSize > 512)) {\n        errors.volumeSize = 'volumeSize should not be between 10 and 512';\n        return errors;\n      } else if (volumeType === 'ISSD' && this.state.item.touched.provisionedIops && (provisionedIops.length === 0 || provisionedIops < 1000 || provisionedIops > 16000)) {\n        errors.provisionedIops = 'provisionedIops should not be between 1000 and 16000';\n        return errors;\n      } else if (this.state.item.touched.snapshotConfiguration && snapshotConfiguration.length === 0) {\n        errors.snapshotConfiguration = 'snapshotConfiguration should not be null';\n        return errors;\n      } else if (this.state.item.touched.accessPolicy && accessPolicy.length === 0) {\n        errors.accessPolicy = 'accessPolicy should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, item.id ? 'Edit elasticSearch' : 'Add elasticSearch');\n      var errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.domainName, item.version, item.instanceCount, item.dedicatedMasterInstanceCount, item.storageType, item.volumeType, item.volumeSize, item.snapshotConfiguration, item.nodeInstanceId, item.nodeMasterId, item.enableDedicatedMaster, item.provisionedIops, item.accessPolicy, item.enableZoneAwareness, item.accountId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = FRT_BASE_URL + \"/elasticSearchs\";\n      var optas = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          optas.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 526\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount));\n        });\n      }\n\n      var account = item.accountId || '';\n      item.accountId = account;\n      var opts = [];\n\n      if (item.vpcs && item.vpcs.length) {\n        item.vpcs.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 535\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var tri = item.vpcId || '';\n      item.vpcId = tri;\n      var optss = [];\n\n      if (item.subnetgroups && item.subnetgroups.length) {\n        item.subnetgroups.map(function (s) {\n          optss.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 545\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var sg = item.subnetgroupId || '';\n      item.subnetgroupId = sg;\n      var optsi = [];\n\n      if (item.instanceTypes && item.instanceTypes.length) {\n        item.instanceTypes.map(function (i) {\n          optsi.push(React.createElement(\"option\", {\n            key: i.id,\n            value: i.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 555\n            },\n            __self: this\n          }, i.id, \" \", i.family, \" \", i.type));\n        });\n      }\n\n      var iti = item.nodeInstanceId || '';\n      item.nodeInstanceId = iti;\n      var itm = item.nodeMasterId || '';\n      item.nodeMasterId = itm;\n      var prive = item.prive;\n      var vpcsr = prive ? React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"vpcId\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, \"Vpcs (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"vpcId\",\n        id: \"vpcId\",\n        value: tri,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('vpcId'),\n        valid: errors.vpcId === '',\n        invalid: errors.vpcId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, errors.vpcId))) : '';\n      var subnetgroupr = prive ? React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"subnetgroupId\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, \"Subnet group (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"subnetgroupId\",\n        id: \"subnetgroupId\",\n        value: sg,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('subnetgroupId'),\n        valid: errors.subnetgroupId === '',\n        invalid: errors.subnetgroupId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, \"Choose\"), optss), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, errors.subnetgroupId))) : '';\n      var dedicatedMasterInstanceType = item.enableDedicatedMaster ? React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"nodeMasterId\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, \"Instance Type (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"nodeMasterId\",\n        id: \"nodeMasterId\",\n        value: itm,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('nodeMasterId'),\n        valid: errors.nodeMasterId === '',\n        invalid: errors.nodeMasterId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, \"Choose\"), optsi), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, errors.nodeMasterId))) : '';\n      var dedicatedMasterInstanceCount = item.enableDedicatedMaster ? React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"dedicatedMasterInstanceCount\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, \"Dedicated Master InstanceCount (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"dedicatedMasterInstanceCount\",\n        id: \"dedicatedMasterInstanceCount\",\n        value: item.dedicatedMasterInstanceCount || '',\n        placeholder: \"Enter dedicatedMasterInstanceCount\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('dedicatedMasterInstanceCount'),\n        autoComplete: \"dedicatedMasterInstanceCount\",\n        valid: errors.dedicatedMasterInstanceCount === '',\n        invalid: errors.dedicatedMasterInstanceCount !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, \"5\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, errors.dedicatedMasterInstanceCount))) : '';\n      var provisionedIops = item.volumeType === 'ISSD' ? React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"provisionedIops\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }, \"Provisioned Iops (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"provisionedIops\",\n        id: \"provisionedIops\",\n        value: item.provisionedIops || '',\n        placeholder: \"Enter provisionedIops\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('provisionedIops'),\n        valid: errors.provisionedIops === '',\n        invalid: errors.provisionedIops !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, errors.provisionedIops), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }, \"The provisioned IOPS value must be an integer between 1000 and 16000.\"))) : '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, errors.name))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: account,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, \"Choose\"), optas), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, errors.accountId))), React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accessType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, \"Access Type (*)\"), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"accessType\",\n        id: \"accessType\",\n        value: \"prive\",\n        checked: prive === true,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accessType'),\n        autoComplete: \"accessType\",\n        valid: errors.accessType === '',\n        invalid: errors.accessType !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679\n        },\n        __self: this\n      }), ' ', \"VPC access (Recommended)\")), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"accessType\",\n        id: \"accessType\",\n        value: \"public\",\n        checked: prive === false,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accessType'),\n        autoComplete: \"accessType\",\n        valid: errors.accessType === '',\n        invalid: errors.accessType !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689\n        },\n        __self: this\n      }), ' ', \"Public access\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698\n        },\n        __self: this\n      }, errors.accessType)), vpcsr, subnetgroupr, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"domainName\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        },\n        __self: this\n      }, \"Domain Name (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"domainName\",\n        id: \"domainName\",\n        value: item.domainName || '',\n        placeholder: \"Enter domainName\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('domainName'),\n        autoComplete: \"domainName\",\n        valid: errors.domainName === '',\n        invalid: errors.domainName !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }, \"The name must start with a lowercase letter and must be between 3 and 28 characters. Valid characters are a-z (lowercase only), 0-9, and - (hyphen).\"), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713\n        },\n        __self: this\n      }, errors.domainName))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"version\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, \"Version (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"version\",\n        id: \"version\",\n        value: item.version || '',\n        placeholder: \"Enter version\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('version'),\n        autoComplete: \"version\",\n        valid: errors.version === '',\n        invalid: errors.version !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"6.3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      }, \"6.3\"), React.createElement(\"option\", {\n        value: \"6.2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727\n        },\n        __self: this\n      }, \"6.2\"), React.createElement(\"option\", {\n        value: \"6.0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      }, \"6.0\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      }, errors.version))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"instanceCount\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, \"Instance Count (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"instanceCount\",\n        id: \"instanceCount\",\n        value: item.instanceCount || '',\n        placeholder: \"Enter instanceCount\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('instanceCount'),\n        autoComplete: \"instanceCount\",\n        valid: errors.instanceCount === '',\n        invalid: errors.instanceCount !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744\n        },\n        __self: this\n      }, errors.instanceCount))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"nodeInstanceId\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749\n        },\n        __self: this\n      }, \"Instance Type (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"nodeInstanceId\",\n        id: \"nodeInstanceId\",\n        value: iti,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('nodeInstanceId'),\n        valid: errors.nodeInstanceId === '',\n        invalid: errors.nodeInstanceId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, \"Choose\"), optsi), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759\n        },\n        __self: this\n      }, errors.nodeInstanceId))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"enableDedicatedMaster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        },\n        __self: this\n      }, \"Enable Dedicated Master:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"enableDedicatedMaster\",\n        id: \"enableDedicatedMaster\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('enableDedicatedMaster'),\n        checked: item.enableDedicatedMaster === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766\n        },\n        __self: this\n      })), dedicatedMasterInstanceType, dedicatedMasterInstanceCount, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"enableZoneAwareness\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776\n        },\n        __self: this\n      }, \"Enable Zone Awareness:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"enableZoneAwareness\",\n        id: \"enableZoneAwareness\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('enableZoneAwareness'),\n        checked: item.enableZoneAwareness === true,\n        valid: errors.enableZoneAwareness === '',\n        invalid: errors.enableZoneAwareness !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      }, \"Zone awareness requires the instance count to be an even number.\"), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784\n        },\n        __self: this\n      }, errors.enableZoneAwareness)), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"storageType\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      }, \"Storage Type (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"storageType\",\n        id: \"storageType\",\n        value: item.storageType || '',\n        placeholder: \"Enter storageType\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('storageType'),\n        autoComplete: \"storageType\",\n        valid: errors.storageType === '',\n        invalid: errors.storageType !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"EBS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797\n        },\n        __self: this\n      }, \"EBS\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }, errors.storageType))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"volumeType\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805\n        },\n        __self: this\n      }, \"Volume Type (*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"volumeType\",\n        id: \"volumeType\",\n        value: item.volumeType || '',\n        placeholder: \"Enter volumeType\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('volumeType'),\n        autoComplete: \"volumeType\",\n        valid: errors.volumeType === '',\n        invalid: errors.volumeType !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"SSD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813\n        },\n        __self: this\n      }, \"General Purpose (SSD)\"), React.createElement(\"option\", {\n        value: \"ISSD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814\n        },\n        __self: this\n      }, \"Provisioned Iops (SSD)\"), React.createElement(\"option\", {\n        value: \"MAG\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815\n        },\n        __self: this\n      }, \"Magnetics\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818\n        },\n        __self: this\n      }, errors.volumeType))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"volumeSize\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }, \"Volume Size \"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"volumeSize\",\n        id: \"volumeSize\",\n        value: item.volumeSize || '',\n        placeholder: \"Enter volumeSize\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('volumeSize'),\n        autoComplete: \"volumeSize\",\n        valid: errors.volumeSize === '',\n        invalid: errors.volumeSize !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830\n        },\n        __self: this\n      }, \"Volume size must be an integer between 10 and 512(*)\"), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831\n        },\n        __self: this\n      }, errors.volumeSize))), provisionedIops, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"enableEncrypt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838\n        },\n        __self: this\n      }, \"Enable Encrypt:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"enableEncrypt\",\n        id: \"enableEncrypt\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('enableEncrypt'),\n        checked: item.enableEncrypt === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"snapshotConfiguration\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846\n        },\n        __self: this\n      }, \"Snapshot Configuration : Automated snapshot start hour(*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"snapshotConfiguration\",\n        id: \"snapshotConfiguration\",\n        value: item.snapshotConfiguration || '',\n        placeholder: \"Enter snapshotConfiguration\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('snapshotConfiguration'),\n        autoComplete: \"snapshotConfiguration\",\n        valid: errors.snapshotConfiguration === '',\n        invalid: errors.snapshotConfiguration !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"00:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854\n        },\n        __self: this\n      }, \"00:00 UTC (default)\"), React.createElement(\"option\", {\n        value: \"01:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855\n        },\n        __self: this\n      }, \"01:00 UTC\"), React.createElement(\"option\", {\n        value: \"02:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856\n        },\n        __self: this\n      }, \"02:00 UTC\"), React.createElement(\"option\", {\n        value: \"03:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857\n        },\n        __self: this\n      }, \"03:00 UTC\"), React.createElement(\"option\", {\n        value: \"04:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858\n        },\n        __self: this\n      }, \"04:00 UTC\"), React.createElement(\"option\", {\n        value: \"05:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859\n        },\n        __self: this\n      }, \"05:00 UTC\"), React.createElement(\"option\", {\n        value: \"06:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }, \"06:00 UTC\"), React.createElement(\"option\", {\n        value: \"07:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        },\n        __self: this\n      }, \"07:00 UTC\"), React.createElement(\"option\", {\n        value: \"08:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862\n        },\n        __self: this\n      }, \"08:00 UTC\"), React.createElement(\"option\", {\n        value: \"09:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863\n        },\n        __self: this\n      }, \"09:00 UTC\"), React.createElement(\"option\", {\n        value: \"10:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864\n        },\n        __self: this\n      }, \"10:00 UTC\"), React.createElement(\"option\", {\n        value: \"11:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865\n        },\n        __self: this\n      }, \"11:00 UTC\"), React.createElement(\"option\", {\n        value: \"12:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866\n        },\n        __self: this\n      }, \"12:00 UTC\"), React.createElement(\"option\", {\n        value: \"13:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867\n        },\n        __self: this\n      }, \"13:00 UTC\"), React.createElement(\"option\", {\n        value: \"14:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868\n        },\n        __self: this\n      }, \"14:00 UTC\"), React.createElement(\"option\", {\n        value: \"15:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869\n        },\n        __self: this\n      }, \"15:00 UTC\"), React.createElement(\"option\", {\n        value: \"16:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870\n        },\n        __self: this\n      }, \"16:00 UTC\"), React.createElement(\"option\", {\n        value: \"17:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871\n        },\n        __self: this\n      }, \"17:00 UTC\"), React.createElement(\"option\", {\n        value: \"18:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 872\n        },\n        __self: this\n      }, \"18:00 UTC\"), React.createElement(\"option\", {\n        value: \"19:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873\n        },\n        __self: this\n      }, \"19:00 UTC\"), React.createElement(\"option\", {\n        value: \"20:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874\n        },\n        __self: this\n      }, \"20:00 UTC\"), React.createElement(\"option\", {\n        value: \"21:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875\n        },\n        __self: this\n      }, \"21:00 UTC\"), React.createElement(\"option\", {\n        value: \"22:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876\n        },\n        __self: this\n      }, \"22:00 UTC\"), React.createElement(\"option\", {\n        value: \"23:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877\n        },\n        __self: this\n      }, \"23:00 UTC\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880\n        },\n        __self: this\n      }, errors.snapshotConfiguration))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"nodeToNodeEncryption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888\n        },\n        __self: this\n      }, \"Node To Node Encryption:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"nodeToNodeEncryption\",\n        id: \"nodeToNodeEncryption\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('nodeToNodeEncryption'),\n        checked: item.nodeToNodeEncryption === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"l\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895\n        },\n        __self: this\n      }, \"Advanced Options\")), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"allowExplicitIndex\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899\n        },\n        __self: this\n      }, \"rest.action.multi.allow_explicit_index\"), React.createElement(Col, {\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"allowExplicitIndex\",\n        id: \"allowExplicitIndex\",\n        value: item.allowExplicitIndex || '',\n        placeholder: \"Enter allowExplicitIndex\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('allowExplicitIndex'),\n        autoComplete: \"allowExplicitIndex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }, \"TRUE\"), React.createElement(\"option\", {\n        value: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905\n        },\n        __self: this\n      }, \"FALSE\")), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908\n        },\n        __self: this\n      }, \"If you want to configure access to domain sub-resources, such as specific indices, you must set this property to \\\"false\\\". Setting this property to \\\"false\\\" prevents users from bypassing access control for sub-resources. The default value for this setting is \\\"true\\\".\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"cacheSize\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914\n        },\n        __self: this\n      }, \"indices.fielddata.cache.size\"), React.createElement(Col, {\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"cacheSize\",\n        id: \"cacheSize\",\n        value: item.cacheSize || '',\n        onChange: this.handleChange,\n        autoComplete: \"cacheSize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918\n        },\n        __self: this\n      }, \"Specifies the percentage of heap space that is allocated to fielddata. By default, this setting is unbounded.\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"maxClauseCount\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923\n        },\n        __self: this\n      }, \"indices.query.bool.max_clause_count\"), React.createElement(Col, {\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"maxClauseCount\",\n        id: \"maxClauseCount\",\n        value: item.maxClauseCount || '',\n        onChange: this.handleChange,\n        autoComplete: \"maxClauseCount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928\n        },\n        __self: this\n      }, \"Specifies the maximum number of allowed boolean clauses in a query. By default, this setting is 1024.\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accessPolicy\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933\n        },\n        __self: this\n      }, \"Access Policy(*)\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"textarea\",\n        name: \"accessPolicy\",\n        id: \"accessPolicy\",\n        value: item.accessPolicy || '',\n        placeholder: \"Enter accessPolicy\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accessPolicy'),\n        autoComplete: \"accessPolicy\",\n        valid: errors.accessPolicy === '',\n        invalid: errors.accessPolicy !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941\n        },\n        __self: this\n      }, errors.accessPolicy))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 947\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return ElasticSearchEdit;\n}(Component);\n\nexport default withRouter(ElasticSearchEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\ElasticSearchEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","FormText","Col","AppNavbar","API_BASE_URL","FRT_BASE_URL","ElasticSearchEdit","props","emptyItem","name","account","accounts","accountId","text","vpc","vpcs","vpcId","subnetgroup","subnetgroups","subnetgroupId","prive","domainName","version","instanceCount","instanceTypes","nodeInstance","nodeMaster","nodeInstanceId","nodeMasterId","enableDedicatedMaster","dedicatedMasterInstanceCount","enableZoneAwareness","storageType","volumeType","volumeSize","enableEncrypt","snapshotConfiguration","nodeToNodeEncryption","provisionedIops","allowExplicitIndex","cacheSize","maxClauseCount","accessPolicy","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","elasticSearch","then","result","jsonResult","nodes","length","map","n","type","instanceType","event","target","value","checked","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","push","title","canc","optas","s","numAccount","opts","tri","optss","sg","optsi","i","family","iti","itm","vpcsr","subnetgroupr","dedicatedMasterInstanceType","accessType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText, Col } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass ElasticSearchEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    text: '',\r\n    vpc: {},\r\n    vpcs: {},\r\n    vpcId : '',\r\n    subnetgroup: {},\r\n    subnetgroups: {},\r\n    subnetgroupId : '',\r\n    prive: true,\r\n    domainName: '', \r\n    version: '', \r\n    instanceCount: '', \r\n    instanceTypes: {},\r\n    nodeInstance: {},\r\n    nodeMaster: {}, \r\n    nodeInstanceId: '',\r\n    nodeMasterId: '',\r\n    enableDedicatedMaster: false, \r\n    dedicatedMasterInstanceCount: '', \r\n    enableZoneAwareness: false, \r\n    storageType: '', \r\n    volumeType: '', \r\n    volumeSize: '', \r\n    enableEncrypt: false, \r\n    snapshotConfiguration: '', \r\n    nodeToNodeEncryption: false,\r\n    provisionedIops: '',\r\n    allowExplicitIndex: true,\r\n    cacheSize:'', \r\n    maxClauseCount:'',\r\n    accessPolicy:'',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      subnetgroupId: false,\r\n      domainName: false, \r\n      version: false,\r\n      instanceCount: false, \r\n      dedicatedMasterInstanceCount: false,\r\n      storageType: false,\r\n      volumeType: false,\r\n      volumeSize: false,\r\n      snapshotConfiguration: false,\r\n      nodeInstanceId: false,\r\n      nodeMasterId: false,\r\n      provisionedIops: false,\r\n      accessPolicy: false,\r\n      enableZoneAwareness: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const elasticSearch = await (await fetch(`${API_BASE_URL}/elasticSearchs/${this.props.match.params.id}`)).json();\r\n      elasticSearch.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        subnetgroupId: false,\r\n        domainName: false, \r\n        version: false,\r\n        instanceCount: false, \r\n        dedicatedMasterInstanceCount: false,\r\n        storageType: false,\r\n        volumeType: false,\r\n        volumeSize: false,\r\n        snapshotConfiguration: false,\r\n        nodeInstanceId: false,\r\n        nodeMasterId: false,\r\n        provisionedIops: false,\r\n        accessPolicy: false,\r\n        enableZoneAwareness: false\r\n      };\r\n      this.setState({item: elasticSearch});\r\n\r\n      \r\n      if(elasticSearch.prive) \r\n      {\r\n        await fetch(API_BASE_URL + '/accounts/' + (elasticSearch.account.id) + '/vpcs',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.vpcs = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        await fetch(API_BASE_URL + '/vpcs/' + (elasticSearch.vpc.id) + '/type/ELK' + '/subnetGroups',)\r\n          .then((result) => {\r\n            return result.json();\r\n          }).then((jsonResult) => {\r\n            let item = {...this.state.item};\r\n            item.subnetgroups = jsonResult;\r\n            this.setState({item: item});\r\n        });\r\n        let item = {...this.state.item};\r\n        item.vpcId = elasticSearch.vpc.id;\r\n        item.subnetgroupId = elasticSearch.subnetgroup.id;\r\n        this.setState({item: item});\r\n      }\r\n\r\n      let item = {...this.state.item};\r\n\r\n      item.accountId = elasticSearch.account.id;\r\n      \r\n      if(item.nodes && item.nodes.length){\r\n        item.nodes.map(n => {  \r\n           if(n.type === 'instance')  \r\n           {\r\n              item.instanceCount = n.instanceCount;\r\n              item.nodeInstanceId = n.instanceType.id;\r\n           }\r\n           else if(n.type === 'master') \r\n           {\r\n              item.dedicatedMasterInstanceCount = n.instanceCount;\r\n              item.nodeMasterId = n.instanceType.id;\r\n\r\n            }\r\n        });\r\n      }\r\n\r\n\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const elasticSearch = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        text: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        subnetgroup: {},\r\n        subnetgroups: {},\r\n        subnetgroupId : '',\r\n        prive: true,\r\n        domainName: '', \r\n        version: '', \r\n        instanceCount: '', \r\n        enableDedicatedMaster: false, \r\n        dedicatedMasterInstanceCount: '', \r\n        enableZoneAwareness: false, \r\n        storageType: '', \r\n        volumeType: '', \r\n        volumeSize: '', \r\n        enableEncrypt: false, \r\n        snapshotConfiguration: '', \r\n        nodeToNodeEncryption: false,\r\n        instanceTypes: {},\r\n        nodeInstance: {},\r\n        nodeMaster: {}, \r\n        nodeInstanceId: '',\r\n        nodeMasterId: '',\r\n        provisionedIops: '',\r\n        allowExplicitIndex: true,\r\n        accessPolicy:'',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          domainName: false, \r\n          version: false,\r\n          instanceCount: false, \r\n          dedicatedMasterInstanceCount: false,\r\n          storageType: false,\r\n          volumeType: false,\r\n          volumeSize: false,\r\n          snapshotConfiguration: false,\r\n          nodeInstanceId: false,\r\n          nodeMasterId: false,\r\n          provisionedIops: false,\r\n          accessPolicy:false,\r\n          enableZoneAwareness:false\r\n        }\r\n      };\r\n      elasticSearch.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          domainName: false, \r\n          version: false,\r\n          instanceCount: false,\r\n          dedicatedMasterInstanceCount: false,\r\n          storageType: false,\r\n          volumeType: false,\r\n          volumeSize: false,\r\n          snapshotConfiguration: false,\r\n          nodeInstanceId: false,\r\n          nodeMasterId: false,\r\n          provisionedIops: false,\r\n          accessPolicy:false,\r\n          enableZoneAwareness: false\r\n      };\r\n      this.setState({item: elasticSearch});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    });*/\r\n\r\n    await fetch(API_BASE_URL + '/instanceTypes',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.instanceTypes = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'enableDedicatedMaster')\r\n    {\r\n      item.enableDedicatedMaster = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'enableZoneAwareness')\r\n    {\r\n      item.enableZoneAwareness = (target.checked) ? true: false;\r\n    } \r\n    else if(name === 'enableEncrypt')\r\n    {\r\n      item.enableEncrypt = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'nodeToNodeEncryption')\r\n    {\r\n      item.nodeToNodeEncryption = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'accessType')\r\n    {\r\n      if(value === 'prive'){\r\n       //hide \r\n        item.prive = true;\r\n      }\r\n      else\r\n      {\r\n        //show\r\n        item.prive = false;\r\n      }\r\n    }\r\n    else if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n\r\n      item.subnetgroupId = '';\r\n      item.subnetgroup = {};\r\n      item.subnetgroups = [];\r\n      \r\n    }\r\n    else if(name === 'vpcId')\r\n    {\r\n      \r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/type/ELK' + '/subnetGroups',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.subnetgroups = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          vpcId: true,\r\n          subnetgroupId: true,\r\n          domainName: true, \r\n          version: true,\r\n          instanceCount: true, \r\n          dedicatedMasterInstanceCount: true,\r\n          storageType: true,\r\n          volumeType: true,\r\n          volumeSize: true,\r\n          snapshotConfiguration: true,\r\n          nodeInstanceId: true,\r\n          nodeMasterId: true,\r\n          provisionedIops: true,\r\n          accessPolicy: true,\r\n          enableZoneAwareness: true\r\n          \r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.domainName, item.version, item.instanceCount, \r\n                                 item.dedicatedMasterInstanceCount, item.storageType, \r\n                                 item.volumeType, item.volumeSize, item.snapshotConfiguration, item.nodeInstanceId, item.nodeMasterId, item.enableDedicatedMaster, \r\n                                 item.provisionedIops, item.accessPolicy, item.enableZoneAwareness, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= FRT_BASE_URL + '/elasticSearchs'; \r\n\r\n    item.account={id: item.accountId};\r\n    if(item.prive)\r\n    {\r\n      item.vpc={id: item.vpcId};\r\n      item.subnetgroup={id: item.subnetgroupId};\r\n    } else\r\n    {\r\n      item.vpc=null;\r\n      item.subnetgroup=null;\r\n    }\r\n    \r\n    item.nodeInstance= {\"type\": \"instance\", \"instanceCount\": item.instanceCount, \"instanceType\": {\"id\": item.nodeInstanceId}};\r\n    \r\n    if(!item.enableDedicatedMaster) {\r\n      item.nodeMaster = null;\r\n      //item.dedicatedMasterInstanceCount = 0;\r\n    }\r\n    else{\r\n      item.nodeMaster = {\"type\": \"master\", \"instanceCount\": item.dedicatedMasterInstanceCount, \"instanceType\": {\"id\": item.nodeMasterId}};\r\n    }\r\n    //console.log(\"sma=\" + item.nodeInstanceId + \" \" + item.nodeMasterId);\r\n    //return;\r\n    item.nodes = [item.nodeInstance, item.nodeMaster];\r\n\r\n    if(item.prive)\r\n    {\r\n        \r\n        await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/elasticSearchs/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/elasticSearchs', {\r\n        method: (item.id) ? 'PUT' : 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(item),\r\n      });\r\n    } else\r\n    {\r\n      await fetch((item.id) ? API_BASE_URL + '/elasticSearch/'+(item.id) : API_BASE_URL + '/elasticSearch', {\r\n        method: (item.id) ? 'PUT' : 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(item),\r\n      });\r\n    } \r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetgroupId, domainName, version, instanceCount, dedicatedMasterInstanceCount, \r\n    storageType, volumeType, volumeSize, snapshotConfiguration, nodeInstanceId, nodeMasterId, enableDedicatedMaster, provisionedIops, accessPolicy, enableZoneAwareness, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      subnetgroupId: '',\r\n      domainName: '',\r\n      version: '',\r\n      instanceCount: '',\r\n      dedicatedMasterInstanceCount: '',\r\n      storageType: '',\r\n      volumeType: '',\r\n      volumeSize: '',\r\n      snapshotConfiguration: '',\r\n      nodeInstanceId: '',\r\n      nodeMasterId: '', \r\n      provisionedIops: '',\r\n      accessPolicy:'',\r\n      enableZoneAwareness:''\r\n\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.prive && this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.prive && this.state.item.touched.subnetgroupId && subnetgroupId.length === 0){\r\n      errors.subnetgroupId = 'Subnet group should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.domainName && (domainName.length === 0 /*|| !domainName.match(\"[a-z][0-9]-\")*/)){\r\n      errors.domainName = 'The name must start with a lowercase letter and must be between 3 and 28 characters. Valid characters are a-z (lowercase only), 0-9, and - (hyphen)';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.version && version.length === 0){\r\n      errors.version = 'version should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.instanceCount && (instanceCount.length === 0 || instanceCount < 0)){\r\n      errors.instanceCount = 'instanceCount should not be null or less than 0';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.nodeInstanceId && nodeInstanceId.length === 0){\r\n      errors.nodeInstanceId = 'nodeInstanceId should not be null';\r\n      return errors;\r\n    }\r\n    else if(enableDedicatedMaster && this.state.item.touched.nodeMasterId && nodeMasterId.length === 0){\r\n      errors.nodeMasterId = 'nodeMasterId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.enableZoneAwareness && enableZoneAwareness && (instanceCount == '' || instanceCount % 2 != 0)){\r\n      errors.enableZoneAwareness = 'Zone awareness requires the instance count to be an even number';\r\n      return errors;\r\n    }\r\n    else if(enableDedicatedMaster && this.state.item.touched.dedicatedMasterInstanceCount && dedicatedMasterInstanceCount.length === 0){\r\n      errors.dedicatedMasterInstanceCount = 'dedicatedMasterInstanceCount should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.storageType && storageType.length === 0){\r\n      errors.storageType = 'storageType should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.volumeType && volumeType.length === 0){\r\n      errors.volumeType = 'volumeType should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.volumeSize && (volumeSize.length === 0 || volumeSize < 10 || volumeSize > 512)){\r\n      errors.volumeSize = 'volumeSize should not be between 10 and 512';\r\n      return errors;\r\n    }\r\n    else if(volumeType === 'ISSD' && this.state.item.touched.provisionedIops && (provisionedIops.length === 0 || provisionedIops < 1000 || provisionedIops > 16000)) {\r\n      errors.provisionedIops = 'provisionedIops should not be between 1000 and 16000';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.snapshotConfiguration && snapshotConfiguration.length === 0){\r\n      errors.snapshotConfiguration = 'snapshotConfiguration should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accessPolicy && accessPolicy.length === 0){\r\n      errors.accessPolicy = 'accessPolicy should not be null';\r\n      return errors;\r\n    }\r\n    \r\n\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit elasticSearch' : 'Add elasticSearch'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.domainName, item.version, item.instanceCount, \r\n                                 item.dedicatedMasterInstanceCount, item.storageType, \r\n                                 item.volumeType, item.volumeSize, item.snapshotConfiguration, item.nodeInstanceId, item.nodeMasterId, item.enableDedicatedMaster, \r\n                                 item.provisionedIops, item.accessPolicy, item.enableZoneAwareness, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = FRT_BASE_URL + \"/elasticSearchs\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let tri = item.vpcId || '';\r\n    item.vpcId = tri;\r\n\r\n\r\n    let optss = [];\r\n    if(item.subnetgroups && item.subnetgroups.length){\r\n      item.subnetgroups.map(s => {  \r\n          optss.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let sg = item.subnetgroupId || '';\r\n    item.subnetgroupId = sg;\r\n\r\n\r\n    let optsi = [];\r\n    if(item.instanceTypes && item.instanceTypes.length){\r\n      item.instanceTypes.map(i => {  \r\n          optsi.push(<option key={i.id} value={i.id}>{i.id} {i.family} {i.type}</option>);\r\n      });\r\n    }\r\n    let iti = item.nodeInstanceId || '';\r\n    item.nodeInstanceId = iti;\r\n\r\n    let itm = item.nodeMasterId || '';\r\n    item.nodeMasterId = itm;\r\n    \r\n    const prive = item.prive;\r\n    const vpcsr =  (prive) ? <FormGroup row>\r\n                <Label for=\"vpcId\" sm={2}>Vpcs (*)</Label>\r\n                <Col sm={10}>\r\n                <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')} \r\n                     valid={errors.vpcId === ''}\r\n                     invalid={errors.vpcId !== ''}\r\n                >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  {opts}\r\n                </Input>\r\n                \r\n                <FormFeedback>{errors.vpcId}</FormFeedback>\r\n                </Col>\r\n              </FormGroup> : ''\r\n             \r\n    const subnetgroupr = (prive) ? <FormGroup row>\r\n                <Label for=\"subnetgroupId\" sm={2}>Subnet group (*)</Label>\r\n                <Col sm={10}>\r\n                <Input type=\"select\" name=\"subnetgroupId\" id=\"subnetgroupId\"  value={sg} onChange={this.handleChange} onBlur={this.handleBlur('subnetgroupId')}\r\n                     valid={errors.subnetgroupId === ''}\r\n                     invalid={errors.subnetgroupId !== ''}\r\n                >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  {optss}\r\n                </Input>\r\n                \r\n                <FormFeedback>{errors.subnetgroupId}</FormFeedback>\r\n                </Col>\r\n              </FormGroup> : ''\r\n    \r\n    const dedicatedMasterInstanceType = (item.enableDedicatedMaster) ? <FormGroup row>\r\n              <Label for=\"nodeMasterId\" sm={2}>Instance Type (*)</Label>\r\n              <Col sm={10}>\r\n              <Input type=\"select\" name=\"nodeMasterId\" id=\"nodeMasterId\"  value={itm} onChange={this.handleChange} onBlur={this.handleBlur('nodeMasterId')} \r\n                   valid={errors.nodeMasterId === ''}\r\n                   invalid={errors.nodeMasterId !== ''}\r\n              >\r\n                <option value=\"\" disabled>Choose</option>\r\n                {optsi}\r\n              </Input>\r\n              \r\n              <FormFeedback>{errors.nodeMasterId}</FormFeedback>\r\n              </Col>\r\n            </FormGroup>  : '';\r\n\r\n    const dedicatedMasterInstanceCount = (item.enableDedicatedMaster) ? <FormGroup row>\r\n            <Label for=\"dedicatedMasterInstanceCount\" sm={2}>Dedicated Master InstanceCount (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"dedicatedMasterInstanceCount\" id=\"dedicatedMasterInstanceCount\" value={item.dedicatedMasterInstanceCount || ''} placeholder=\"Enter dedicatedMasterInstanceCount\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('dedicatedMasterInstanceCount')} autoComplete=\"dedicatedMasterInstanceCount\"\r\n                   valid={errors.dedicatedMasterInstanceCount === ''}\r\n                   invalid={errors.dedicatedMasterInstanceCount !== ''}\r\n                   >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  <option value=\"3\" >3</option>\r\n                  <option value=\"5\" >5</option>\r\n            </Input>\r\n          \r\n           <FormFeedback>{errors.dedicatedMasterInstanceCount}</FormFeedback>\r\n           </Col>\r\n          </FormGroup> : '';\r\n\r\n    const provisionedIops  = (item.volumeType === 'ISSD') ? <FormGroup row>\r\n            <Label for=\"provisionedIops\" sm={2}>Provisioned Iops (*)</Label>\r\n            <Col sm={10}>\r\n            <Input  type=\"number\" name=\"provisionedIops\" id=\"provisionedIops\" value={item.provisionedIops || ''} placeholder=\"Enter provisionedIops\" \r\n                   onChange={this.handleChange}   onBlur={this.handleBlur('provisionedIops')}\r\n                   valid={errors.provisionedIops === ''}\r\n                   invalid={errors.provisionedIops !== ''}\r\n                   />\r\n            \r\n            <FormFeedback>{errors.provisionedIops}</FormFeedback>\r\n            <FormText>The provisioned IOPS value must be an integer between 1000 and 16000.</FormText>\r\n            </Col>\r\n          </FormGroup> : '';\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup row>\r\n            <Label for=\"name\" sm={2}>Name (*)</Label>\r\n             <Col sm={10}>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n             \r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"accountId\" sm={2}>Account (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup tag=\"fieldset\">\r\n            <Label for=\"accessType\">Access Type (*)</Label>\r\n            \r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"prive\" checked={prive === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                VPC access (Recommended)\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"public\" checked={prive === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                Public access\r\n              </Label>\r\n            </FormGroup>\r\n            \r\n            <FormFeedback>{errors.accessType}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n            {vpcsr}\r\n            {subnetgroupr}\r\n          \r\n          <FormGroup row>\r\n            <Label for=\"domainName\" sm={2}>Domain Name (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"text\" name=\"domainName\" id=\"domainName\" value={item.domainName || ''} placeholder=\"Enter domainName\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('domainName')} autoComplete=\"domainName\" \r\n                   valid={errors.domainName === ''}\r\n                   invalid={errors.domainName !== ''}\r\n            />\r\n           <FormText>The name must start with a lowercase letter and must be between 3 and 28 characters. Valid characters are a-z (lowercase only), 0-9, and - (hyphen).</FormText>\r\n           <FormFeedback>{errors.domainName}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"version\" sm={2}>Version (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"version\" id=\"version\" value={item.version || ''} placeholder=\"Enter version\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('version')} autoComplete=\"version\"\r\n                   valid={errors.version === ''}\r\n                   invalid={errors.version !== ''}\r\n                  >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  <option value=\"6.3\" >6.3</option>\r\n                  <option value=\"6.2\" >6.2</option>\r\n                  <option value=\"6.0\" >6.0</option>\r\n            </Input>\r\n            \r\n           <FormFeedback>{errors.version}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"instanceCount\" sm={2}>Instance Count (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"number\" name=\"instanceCount\" id=\"instanceCount\" value={item.instanceCount || ''} placeholder=\"Enter instanceCount\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('instanceCount')} autoComplete=\"instanceCount\"\r\n                   valid={errors.instanceCount === ''}\r\n                   invalid={errors.instanceCount !== ''}\r\n            />\r\n            \r\n           <FormFeedback>{errors.instanceCount}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n              <Label for=\"nodeInstanceId\" sm={2}>Instance Type (*)</Label>\r\n              <Col sm={10}>\r\n              <Input type=\"select\" name=\"nodeInstanceId\" id=\"nodeInstanceId\"  value={iti} onChange={this.handleChange} onBlur={this.handleBlur('nodeInstanceId')} \r\n                   valid={errors.nodeInstanceId === ''}\r\n                   invalid={errors.nodeInstanceId !== ''}\r\n              >\r\n                <option value=\"\" disabled>Choose</option>\r\n                {optsi}\r\n              </Input>\r\n              \r\n              <FormFeedback>{errors.nodeInstanceId}</FormFeedback>\r\n              </Col>\r\n            </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"enableDedicatedMaster\">Enable Dedicated Master:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"enableDedicatedMaster\" id=\"enableDedicatedMaster\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('enableDedicatedMaster')} \r\n                    checked={item.enableDedicatedMaster === true}/>\r\n          </FormGroup>\r\n  \r\n          {dedicatedMasterInstanceType}   \r\n          {dedicatedMasterInstanceCount}\r\n\r\n          \r\n          <FormGroup>\r\n            <Label for=\"enableZoneAwareness\" >Enable Zone Awareness:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"enableZoneAwareness\" id=\"enableZoneAwareness\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('enableZoneAwareness')} \r\n                    checked={item.enableZoneAwareness === true}\r\n                    valid={errors.enableZoneAwareness === ''}\r\n                    invalid={errors.enableZoneAwareness !== ''}\r\n                    />\r\n            <FormText>Zone awareness requires the instance count to be an even number.</FormText>\r\n            <FormFeedback>{errors.enableZoneAwareness}</FormFeedback>\r\n          </FormGroup>\r\n    \r\n\r\n          <FormGroup row>\r\n            <Label for=\"storageType\" sm={2}>Storage Type (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"storageType\" id=\"storageType\" value={item.storageType || ''} placeholder=\"Enter storageType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('storageType')} autoComplete=\"storageType\"\r\n                   valid={errors.storageType === ''}\r\n                   invalid={errors.storageType !== ''}\r\n                   >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   <option value=\"EBS\">EBS</option>\r\n           </Input>\r\n           \r\n           <FormFeedback>{errors.storageType}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"volumeType\" sm={2}>Volume Type (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"volumeType\" id=\"volumeType\" value={item.volumeType || ''} placeholder=\"Enter volumeType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('volumeType')} autoComplete=\"volumeType\"\r\n                   valid={errors.volumeType === ''}\r\n                   invalid={errors.volumeType !== ''}\r\n                   >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   <option value=\"SSD\">General Purpose (SSD)</option>\r\n                   <option value=\"ISSD\">Provisioned Iops (SSD)</option>\r\n                   <option value=\"MAG\">Magnetics</option>\r\n           </Input>\r\n           \r\n           <FormFeedback>{errors.volumeType}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"volumeSize\" sm={2}>Volume Size </Label>\r\n            <Col sm={10}>\r\n            <Input type=\"number\" name=\"volumeSize\" id=\"volumeSize\" value={item.volumeSize || ''} placeholder=\"Enter volumeSize\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('volumeSize')} autoComplete=\"volumeSize\"\r\n                   valid={errors.volumeSize === ''}\r\n                   invalid={errors.volumeSize !== ''}\r\n            />\r\n           <FormText>Volume size must be an integer between 10 and 512(*)</FormText>\r\n           <FormFeedback>{errors.volumeSize}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          {provisionedIops}\r\n\r\n          <FormGroup>\r\n            <Label for=\"enableEncrypt\">Enable Encrypt:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"enableEncrypt\" id=\"enableEncrypt\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('enableEncrypt')} \r\n                    checked={item.enableEncrypt === true}/>\r\n           \r\n          </FormGroup>\r\n    \r\n          <FormGroup row>\r\n            <Label for=\"snapshotConfiguration\" sm={2}>Snapshot Configuration : Automated snapshot start hour(*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"snapshotConfiguration\" id=\"snapshotConfiguration\" value={item.snapshotConfiguration || ''} placeholder=\"Enter snapshotConfiguration\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('snapshotConfiguration')} autoComplete=\"snapshotConfiguration\"\r\n                   valid={errors.snapshotConfiguration === ''}\r\n                   invalid={errors.snapshotConfiguration !== ''}\r\n                  >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  <option value=\"00:00\">00:00 UTC (default)</option>\r\n                  <option value=\"01:00\">01:00 UTC</option>\r\n                  <option value=\"02:00\">02:00 UTC</option>\r\n                  <option value=\"03:00\">03:00 UTC</option>\r\n                  <option value=\"04:00\">04:00 UTC</option>\r\n                  <option value=\"05:00\">05:00 UTC</option>\r\n                  <option value=\"06:00\">06:00 UTC</option>\r\n                  <option value=\"07:00\">07:00 UTC</option>\r\n                  <option value=\"08:00\">08:00 UTC</option>\r\n                  <option value=\"09:00\">09:00 UTC</option>\r\n                  <option value=\"10:00\">10:00 UTC</option>\r\n                  <option value=\"11:00\">11:00 UTC</option>\r\n                  <option value=\"12:00\">12:00 UTC</option>\r\n                  <option value=\"13:00\">13:00 UTC</option>\r\n                  <option value=\"14:00\">14:00 UTC</option>\r\n                  <option value=\"15:00\">15:00 UTC</option>\r\n                  <option value=\"16:00\">16:00 UTC</option>\r\n                  <option value=\"17:00\">17:00 UTC</option>\r\n                  <option value=\"18:00\">18:00 UTC</option>\r\n                  <option value=\"19:00\">19:00 UTC</option>\r\n                  <option value=\"20:00\">20:00 UTC</option>\r\n                  <option value=\"21:00\">21:00 UTC</option>\r\n                  <option value=\"22:00\">22:00 UTC</option>\r\n                  <option value=\"23:00\">23:00 UTC</option>\r\n           </Input>\r\n           \r\n           <FormFeedback>{errors.snapshotConfiguration}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n\r\n          \r\n\r\n          <FormGroup>\r\n            <Label for=\"nodeToNodeEncryption\">Node To Node Encryption:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"nodeToNodeEncryption\" id=\"nodeToNodeEncryption\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('nodeToNodeEncryption')} \r\n                    checked={item.nodeToNodeEncryption === true}/>\r\n          </FormGroup>\r\n    \r\n          <FormGroup>\r\n          <Label for=\"l\">Advanced Options</Label>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"allowExplicitIndex\" sm={3}>rest.action.multi.allow_explicit_index</Label>\r\n            <Col sm={9}>\r\n            <Input type=\"select\" name=\"allowExplicitIndex\" id=\"allowExplicitIndex\" value={item.allowExplicitIndex || ''} placeholder=\"Enter allowExplicitIndex\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('allowExplicitIndex')} autoComplete=\"allowExplicitIndex\"\r\n                  >\r\n                  <option value=\"true\">TRUE</option>\r\n                  <option value=\"false\">FALSE</option>\r\n           </Input>\r\n           \r\n           <FormText>If you want to configure access to domain sub-resources, such as specific indices, you must set this property to \"false\". \r\n           Setting this property to \"false\" prevents users from bypassing access control for sub-resources. The default value for this setting is \"true\".</FormText>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"cacheSize\" sm={3}>indices.fielddata.cache.size</Label>\r\n            <Col sm={9}>\r\n            <Input type=\"number\" name=\"cacheSize\" id=\"cacheSize\" value={item.cacheSize || ''}\r\n                   onChange={this.handleChange} autoComplete=\"cacheSize\"/>\r\n            <FormText>Specifies the percentage of heap space that is allocated to fielddata. By default, this setting is unbounded.</FormText>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"maxClauseCount\" sm={3}>indices.query.bool.max_clause_count</Label>\r\n            <Col sm={9}>\r\n            <Input type=\"number\" name=\"maxClauseCount\" id=\"maxClauseCount\" value={item.maxClauseCount || ''}\r\n                   onChange={this.handleChange} autoComplete=\"maxClauseCount\"/>\r\n            \r\n            <FormText>Specifies the maximum number of allowed boolean clauses in a query. By default, this setting is 1024.</FormText>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"accessPolicy\" sm={2}>Access Policy(*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"textarea\" name=\"accessPolicy\" id=\"accessPolicy\" value={item.accessPolicy || ''} placeholder=\"Enter accessPolicy\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('accessPolicy')} autoComplete=\"accessPolicy\"\r\n                   valid={errors.accessPolicy === ''}\r\n                   invalid={errors.accessPolicy !== ''}\r\n            />\r\n            \r\n           <FormFeedback>{errors.accessPolicy}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"text\" sm={2}>Description</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(ElasticSearchEdit);"]},"metadata":{},"sourceType":"module"}