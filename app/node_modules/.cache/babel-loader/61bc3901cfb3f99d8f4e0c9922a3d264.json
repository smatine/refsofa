{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\RegionEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL } from './constants';\n\nvar RegionEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegionEdit, _Component);\n\n  function RegionEdit(props) {\n    var _this;\n\n    _classCallCheck(this, RegionEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegionEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      description: '',\n      touched: {\n        name: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RegionEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var region;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/regions/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                region = _context.sent;\n                region.touched = {\n                  name: false\n                };\n                this.setState({\n                  item: region\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true\n                };\n                errors = this.validate(item.name);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                }); //console.log('error=' + errors.name);\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                _context2.next = 10;\n                return fetch(item.id ? API_BASE_URL + '/regions/' + item.id : API_BASE_URL + '/regions', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 10:\n                this.props.history.push(API_BASE_URL + '/regions');\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, mailList, owner, irtCode) {\n      var errors = {\n        name: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should be = 3 characters';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, item.id ? 'Edit Region' : 'Add Region');\n      var errors = this.validate(item.name);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var accs = null;\n      if (item.id) accs = React.createElement(Button, {\n        size: \"sm\",\n        color: \"secondary\",\n        tag: Link,\n        to: \"\".concat(API_BASE_URL, \"/region/\").concat(item.id, \"/azs\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Azs\");\n      var isDisabledd = false;\n      if (item.id && item.cidrs.length !== 0) isDisabledd = true;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter text\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        disabled: isDisabledd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        value: item.description || '',\n        onChange: this.handleChange,\n        autoComplete: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: \"\".concat(API_BASE_URL, \"/regions\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Cancel\"), \"\\xA0\\xA0\\xA0\\xA0\", accs))));\n    }\n  }]);\n\n  return RegionEdit;\n}(Component);\n\nexport default withRouter(RegionEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\RegionEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","RegionEdit","props","emptyItem","name","description","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","region","event","target","value","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","method","headers","body","JSON","stringify","history","push","mailList","owner","irtCode","length","title","accs","isDisabledd","cidrs"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RegionEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    description: '',\r\n    touched: {\r\n        name: false\r\n      }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const region = await (await fetch(`${API_BASE_URL}/regions/${this.props.match.params.id}`)).json();\r\n      region.touched = {\r\n        name: false\r\n      };\r\n      this.setState({item: region});\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n    \r\n    item.touched = {\r\n        name: true\r\n    };\r\n    const errors = this.validate(item.name);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    //console.log('error=' + errors.name);\r\n\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    await fetch((item.id) ? API_BASE_URL + '/regions/'+(item.id) : API_BASE_URL + '/regions', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(API_BASE_URL + '/regions');\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n  \r\n  validate(name, mailList, owner, irtCode) {\r\n\r\n    const errors = {\r\n      name: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should be = 3 characters';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Region' : 'Add Region'}</h2>;\r\n    \r\n    const errors = this.validate(item.name);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n    let accs = null;\r\n    if(item.id) accs = <Button size=\"sm\" color=\"secondary\" tag={Link} to={`${API_BASE_URL}/region/${item.id}/azs`}>Azs</Button>;\r\n\r\n    let isDisabledd = false;\r\n    if(item.id && item.cidrs.length !== 0) isDisabledd = true\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter text\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\" \r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n                   disabled={isDisabledd}\r\n                   />\r\n            <FormFeedback>{errors.name}</FormFeedback>\r\n         </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"description\">Description</Label>\r\n            <Input type=\"text\" name=\"description\" id=\"description\" value={item.description || ''}\r\n                   onChange={this.handleChange} autoComplete=\"description\"/>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            \r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={`${API_BASE_URL}/regions`}>Cancel</Button>\r\n\r\n            &nbsp;&nbsp;&nbsp;&nbsp;{accs}\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(RegionEdit);"]},"metadata":{},"sourceType":"module"}