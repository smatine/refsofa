{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\AutoScalingGroupEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport Select from 'react-select';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar AutoScalingGroupEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AutoScalingGroupEdit, _Component);\n\n  function AutoScalingGroupEdit(props) {\n    var _this;\n\n    _classCallCheck(this, AutoScalingGroupEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoScalingGroupEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      account: {},\n      accounts: {},\n      accountId: '',\n      launchConfiguration: {},\n      launchConfigurations: {},\n      launchConfigurationId: '',\n      groupSize: '',\n      loadBalancing: false,\n      targetGroups: [],\n      targetGroupss: [],\n      targetGroupId: [],\n      healthCheckType: 'EC2',\n      healthCheckGracePeriod: '',\n      instanceProtection: '',\n      serviceLinkedRole: '',\n      createAutoScalingGroup: true,\n      vpc: {},\n      vpcs: {},\n      vpcId: '',\n      subnets: [],\n      subnetss: [],\n      subnetId: [],\n      touched: {\n        name: false,\n        accountId: false,\n        vpcId: false,\n        subnetId: false,\n        launchConfigurationId: false,\n        groupSize: false,\n        targetGroupId: false,\n        healthCheckGracePeriod: false,\n        instanceProtection: false,\n        serviceLinkedRole: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.onOptionChange = function (selectName, selectedOption) {\n      var item = _this.state.item;\n      var options = selectedOption;\n      var values = [];\n\n      if (selectName === 'targetGroupId') {\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (item.targetGroupss && item.targetGroupss.length) {\n            item.targetGroupss.map(function (s) {\n              if (s.id == options[i].value) {\n                values.push({\n                  \"id\": s.id\n                });\n              }\n            });\n          }\n        }\n\n        item.targetGroups = values;\n      }\n\n      if (selectName === 'subnetId') {\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (item.subnetss && item.subnetss.length) {\n            item.subnetss.map(function (s) {\n              if (s.id == options[i].value) {\n                values.push({\n                  \"id\": s.id\n                });\n              }\n            });\n          }\n        }\n\n        item.subnets = values;\n      }\n\n      _this.setState({\n        item: item\n      });\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AutoScalingGroupEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var autoScalingGroup, item, values, _autoScalingGroup2, _autoScalingGroup;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 29;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/autoScalingGroups/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                autoScalingGroup = _context.sent;\n                autoScalingGroup.touched = {\n                  name: false,\n                  accountId: false,\n                  vpcId: false,\n                  subnetId: false,\n                  launchConfigurationId: false,\n                  groupSize: false,\n                  targetGroupId: false,\n                  healthCheckGracePeriod: false,\n                  instanceProtection: false,\n                  serviceLinkedRole: false\n                };\n                this.setState({\n                  item: autoScalingGroup\n                });\n                _context.next = 10;\n                return fetch(API_BASE_URL + '/accounts/' + autoScalingGroup.account.id + '/vpcs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.vpcs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 10:\n                _context.next = 12;\n                return fetch(API_BASE_URL + '/vpcs/' + autoScalingGroup.vpc.id + '/subnets').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.subnetss = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 12:\n                _context.next = 14;\n                return fetch(API_BASE_URL + '/vpcs/' + autoScalingGroup.vpc.id + '/launchConfigurations').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.launchConfigurations = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 14:\n                _context.next = 16;\n                return fetch(API_BASE_URL + '/vpcs/' + autoScalingGroup.vpc.id + '/targetGroups').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.targetGroupss = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 16:\n                item = _objectSpread({}, this.state.item);\n                item.vpcId = autoScalingGroup.vpc.id;\n                item.accountId = autoScalingGroup.account.id;\n                item.launchConfigurationId = autoScalingGroup.launchConfiguration.id;\n                values = [];\n                item.subnets.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.subnets = values;\n                values = [];\n                item.targetGroups.map(function (t) {\n                  values.push({\n                    \"id\": t.id\n                  });\n                });\n                item.targetGroups = values;\n                this.setState({\n                  item: item\n                });\n                _context.next = 32;\n                break;\n\n              case 29:\n                _autoScalingGroup = (_autoScalingGroup2 = {\n                  name: '',\n                  accountId: false,\n                  account: {},\n                  accounts: {}\n                }, _defineProperty(_autoScalingGroup2, \"accountId\", ''), _defineProperty(_autoScalingGroup2, \"launchConfiguration\", {}), _defineProperty(_autoScalingGroup2, \"launchConfigurations\", {}), _defineProperty(_autoScalingGroup2, \"launchConfigurationId\", ''), _defineProperty(_autoScalingGroup2, \"groupSize\", ''), _defineProperty(_autoScalingGroup2, \"loadBalancing\", false), _defineProperty(_autoScalingGroup2, \"targetGroups\", []), _defineProperty(_autoScalingGroup2, \"targetGroupss\", []), _defineProperty(_autoScalingGroup2, \"targetGroupId\", []), _defineProperty(_autoScalingGroup2, \"healthCheckType\", 'EC2'), _defineProperty(_autoScalingGroup2, \"healthCheckGracePeriod\", ''), _defineProperty(_autoScalingGroup2, \"instanceProtection\", ''), _defineProperty(_autoScalingGroup2, \"serviceLinkedRole\", ''), _defineProperty(_autoScalingGroup2, \"createAutoScalingGroup\", true), _defineProperty(_autoScalingGroup2, \"vpc\", {}), _defineProperty(_autoScalingGroup2, \"vpcs\", {}), _defineProperty(_autoScalingGroup2, \"vpcId\", ''), _defineProperty(_autoScalingGroup2, \"subnets\", []), _defineProperty(_autoScalingGroup2, \"subnetss\", []), _defineProperty(_autoScalingGroup2, \"subnetId\", []), _defineProperty(_autoScalingGroup2, \"touched\", {\n                  name: false,\n                  vpcId: false,\n                  subnetId: false,\n                  launchConfigurationId: false,\n                  groupSize: false,\n                  targetGroupId: false,\n                  healthCheckGracePeriod: false,\n                  instanceProtection: false,\n                  serviceLinkedRole: false\n                }), _autoScalingGroup2);\n                _autoScalingGroup.touched = {\n                  name: false,\n                  accountId: false,\n                  vpcId: false,\n                  subnetId: false,\n                  launchConfigurationId: false,\n                  groupSize: false,\n                  targetGroupId: false,\n                  healthCheckGracePeriod: false,\n                  instanceProtection: false,\n                  serviceLinkedRole: false\n                };\n                this.setState({\n                  item: _autoScalingGroup\n                });\n\n              case 32:\n                _context.next = 34;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 34:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n\n      if (name === 'typecreateAutoScalingGroup') {\n        if (value === 'Keep') {\n          item.createAutoScalingGroup = true;\n        } else {\n          item.createAutoScalingGroup = false;\n        }\n      }\n\n      if (name === 'type') {\n        if (value === 'ELB') {\n          item.healthCheckType = 'ELB';\n        } else {\n          item.healthCheckType = 'EC2';\n        }\n      }\n\n      if (name === 'loadBalancing') {\n        item.loadBalancing = target.checked ? true : false;\n        if (item.healthCheckType === '') item.healthCheckType = 'EC2';\n      }\n\n      if (name === 'accountId') {\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/vpcs').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.vpcs = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        item.vpcId = '';\n        item.subnetId = '';\n        item.subnets = [];\n        item.subnetss = [];\n        item.launchConfigurationId = '';\n        item.launchConfiguration = {};\n        item.launchConfigurations = [];\n        item.targetGroupId = '';\n        item.targetGroups = [];\n        item.targetGroupss = [];\n      }\n\n      if (name === 'vpcId') {\n        fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/subnets').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.subnetss = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/launchConfigurations').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.launchConfigurations = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/targetGroups').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.targetGroupss = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  accountId: true,\n                  vpcId: true,\n                  subnetId: true,\n                  launchConfigurationId: true,\n                  groupSize: true,\n                  targetGroupId: true,\n                  healthCheckGracePeriod: true,\n                  instanceProtection: true,\n                  serviceLinkedRole: true\n                };\n                errors = this.validate(item.name, item.vpcId, item.subnetId, item.launchConfigurationId, item.groupSize, item.targetGroupId, item.healthCheckGracePeriod, item.instanceProtection, item.serviceLinkedRole, item.accountId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = FRT_BASE_URL + '/autoScalingGroups';\n                item.vpc = {\n                  id: item.vpcId\n                };\n                item.account = {\n                  id: item.accountId\n                };\n                item.launchConfiguration = {\n                  id: item.launchConfigurationId\n                };\n\n                if (!item.loadBalancing) {\n                  item.targetGroups = [];\n                  item.healthCheckType = '';\n                } //console.log(\"groupSize=\" + item.groupSize);\n                //console.log(\"\");\n                //return;\n\n\n                _context2.next = 15;\n                return fetch(item.id ? API_BASE_URL + '/vpcs/' + item.vpc.id + '/autoScalingGroups/' + item.id : API_BASE_URL + '/vpcs/' + item.vpc.id + '/autoScalingGroups', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 15:\n                this.props.history.push(hist);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, vpcId, subnetId, launchConfigurationId, groupSize, targetGroupId, healthCheckGracePeriod, instanceProtection, serviceLinkedRole, accountId) {\n      var errors = {\n        name: '',\n        accountId: '',\n        vpcId: '',\n        subnetId: '',\n        launchConfigurationId: '',\n        groupSize: '',\n        targetGroupId: '',\n        healthCheckGracePeriod: '',\n        instanceProtection: '',\n        serviceLinkedRole: ''\n      }; //console.log('this.state.item.subnets.length=' + this.state.item.subnets.length);\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'accountId should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.vpcId && vpcId.length === 0) {\n        errors.vpcId = 'Vpc should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.launchConfigurationId && launchConfigurationId.length === 0) {\n        errors.launchConfigurationId = 'launchConfigurationId should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.subnetId && this.state.item.subnets.length === 0) {\n        errors.subnetId = 'Add subnets.';\n        return errors;\n      }\n\n      if (this.state.item.touched.groupSize && groupSize.length === 0) {\n        errors.groupSize = 'groupSize should not be null';\n        return errors;\n      }\n\n      if (this.state.item.loadBalancing && this.state.item.touched.targetGroupId && this.state.item.targetGroups.length === 0) {\n        errors.targetGroupId = 'targetGroupId should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.healthCheckGracePeriod && healthCheckGracePeriod.length === 0) {\n        errors.healthCheckGracePeriod = 'healthCheckGracePeriod should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.instanceProtection && instanceProtection.length === 0) {\n        errors.instanceProtection = 'instanceProtection should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.serviceLinkedRole && serviceLinkedRole.length === 0) {\n        errors.serviceLinkedRole = 'serviceLinkedRole should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, item.id ? 'Edit Auto Scaling Group' : 'Add Auto Scaling Group');\n      var errors = this.validate(item.name, item.vpcId, item.subnetId, item.launchConfigurationId, item.groupSize, item.targetGroupId, item.healthCheckGracePeriod, item.instanceProtection, item.serviceLinkedRole, item.accountId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = FRT_BASE_URL + \"/autoscalinggroups\";\n      var optas = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          optas.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 471\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount));\n        });\n      }\n\n      var account = item.accountId || '';\n      item.accountId = account;\n      var opts = [];\n\n      if (item.vpcs && item.vpcs.length) {\n        item.vpcs.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 480\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var vpc = item.vpcId || '';\n      item.vpcId = vpc;\n      var optls = [];\n\n      if (item.launchConfigurations && item.launchConfigurations.length) {\n        item.launchConfigurations.map(function (s) {\n          optls.push(React.createElement(\"option\", {\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 489\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var launchConfiguration = item.launchConfigurationId || '';\n      item.launchConfigurationId = launchConfiguration;\n      var optsub = [];\n      var optsubs = [];\n\n      if (item.subnetss && item.subnetss.length) {\n        item.subnetss.map(function (s) {\n          if (item.subnets && item.subnets.length) item.subnets.map(function (ss) {\n            if (s.id == ss.id) {\n              optsub.push({\n                value: s.id,\n                label: s.name\n              });\n            }\n          });\n          optsubs.push({\n            value: s.id,\n            label: s.name\n          });\n        });\n      }\n\n      var optst = [];\n      var optsts = [];\n\n      if (item.targetGroupss && item.targetGroupss.length) {\n        item.targetGroupss.map(function (s) {\n          if (item.targetGroups && item.targetGroups.length) item.targetGroups.map(function (ss) {\n            if (s.id == ss.id) {\n              optst.push({\n                value: s.id,\n                label: s.name\n              });\n            }\n          });\n          optsts.push({\n            value: s.id,\n            label: s.name\n          });\n        });\n      }\n\n      var healthCheckType = item.healthCheckType;\n      var createAutoScalingGroup = item.createAutoScalingGroup;\n      var targetGroup = item.loadBalancing === true ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"targetGroupId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, \"Target Group (*)\"), React.createElement(Select, {\n        name: \"targetGroupId\",\n        id: \"targetGroupId\",\n        placeholder: \"Enter targetGroup\",\n        isMulti: true,\n        value: optst,\n        onChange: function onChange(e) {\n          return _this4.onOptionChange(\"targetGroupId\", e);\n        },\n        onBlur: this.handleBlur('targetGroupId'),\n        options: optsts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, errors.targetGroupId)) : '';\n      var type = item.loadBalancing === true ? React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, \"Health Check Type (*)\"), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"type\",\n        id: \"type\",\n        value: \"ELB\",\n        checked: healthCheckType === 'ELB',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('type'),\n        autoComplete: \"type\",\n        disabled: \"true\",\n        valid: errors.type === '',\n        invalid: errors.type !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }), ' ', \"ELB\")), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"type\",\n        id: \"type\",\n        value: \"EC2\",\n        checked: healthCheckType === 'EC2',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('type'),\n        autoComplete: \"type\",\n        disabled: \"true\",\n        valid: errors.type === '',\n        invalid: errors.type !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }), ' ', \"EC2\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, errors.type)) : '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: account,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \"Choose\"), optas), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"vpcId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }, \"Vpcs (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"vpcId\",\n        id: \"vpcId\",\n        value: vpc,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('vpcId'),\n        valid: errors.vpcId === '',\n        invalid: errors.vpcId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, errors.vpcId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"launchConfigurationId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, \"Launch Configuration (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"launchConfigurationId\",\n        id: \"launchConfigurationId\",\n        value: launchConfiguration,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('launchConfigurationId'),\n        valid: errors.launchConfigurationId === '',\n        invalid: errors.launchConfigurationId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, \"Choose\"), optls), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, errors.launchConfigurationId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"subnetId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, \"Subnets (*)\"), React.createElement(Select, {\n        name: \"subnetId\",\n        id: \"subnetId\",\n        placeholder: \"Enter subnet\",\n        isMulti: true,\n        value: optsub,\n        onChange: function onChange(e) {\n          return _this4.onOptionChange(\"subnetId\", e);\n        },\n        onBlur: this.handleBlur('subnetId'),\n        options: optsubs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, errors.subnetId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"groupSize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }, \"Group Size (*)\"), React.createElement(Input, {\n        type: \"number\",\n        name: \"groupSize\",\n        id: \"groupSize\",\n        value: item.groupSize || '',\n        placeholder: \"Enter groupSize\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('groupSize'),\n        autoComplete: \"groupSize\",\n        valid: errors.groupSize === '',\n        invalid: errors.groupSize !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }, errors.groupSize)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"loadBalancing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      }, \"Load Balancing:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"loadBalancing\",\n        id: \"loadBalancing\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('loadBalancing'),\n        checked: item.loadBalancing === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      })), targetGroup, type, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"healthCheckGracePeriod\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, \"Health Check Grace Period (*)\"), React.createElement(Input, {\n        type: \"number\",\n        name: \"healthCheckGracePeriod\",\n        id: \"healthCheckGracePeriod\",\n        value: item.healthCheckGracePeriod || '',\n        placeholder: \"Enter healthCheckGracePeriod\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('healthCheckGracePeriod'),\n        autoComplete: \"healthCheckGracePeriod\",\n        valid: errors.healthCheckGracePeriod === '',\n        invalid: errors.healthCheckGracePeriod !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }, errors.healthCheckGracePeriod)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"instanceProtection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, \"Instance Protection (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"instanceProtection\",\n        id: \"instanceProtection\",\n        value: item.instanceProtection || '',\n        placeholder: \"Enter instanceProtection\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('instanceProtection'),\n        autoComplete: \"instanceProtection\",\n        valid: errors.instanceProtection === '',\n        invalid: errors.instanceProtection !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, errors.instanceProtection)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"serviceLinkedRole\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, \"Service Linked Role (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"serviceLinkedRole\",\n        id: \"serviceLinkedRole\",\n        value: item.serviceLinkedRole || '',\n        placeholder: \"Enter serviceLinkedRole\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('serviceLinkedRole'),\n        autoComplete: \"serviceLinkedRole\",\n        valid: errors.serviceLinkedRole === '',\n        invalid: errors.serviceLinkedRole !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, errors.serviceLinkedRole)), React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"typecreateAutoScalingGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, \"Create Auto Scaling Group (*)\"), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"typecreateAutoScalingGroup\",\n        id: \"typecreateAutoScalingGroup\",\n        value: \"Keep\",\n        checked: createAutoScalingGroup === true,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('typecreateAutoScalingGroup'),\n        autoComplete: \"typecreateAutoScalingGroup\",\n        valid: errors.typecreateAutoScalingGroup === '',\n        invalid: errors.typecreateAutoScalingGroup !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }), ' ', \"Keep this group at its initial size\")), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"typecreateAutoScalingGroup\",\n        id: \"type\",\n        value: \"NKeep\",\n        checked: createAutoScalingGroup === false,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('typecreateAutoScalingGroup'),\n        autoComplete: \"typecreateAutoScalingGroup\",\n        valid: errors.typecreateAutoScalingGroup === '',\n        invalid: errors.typecreateAutoScalingGroup !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }), ' ', \"Use scaling policies to adjust the capacity of this group\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, errors.typecreateAutoScalingGroup)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return AutoScalingGroupEdit;\n}(Component);\n\nexport default withRouter(AutoScalingGroupEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\AutoScalingGroupEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","Select","API_BASE_URL","FRT_BASE_URL","AutoScalingGroupEdit","props","emptyItem","name","account","accounts","accountId","launchConfiguration","launchConfigurations","launchConfigurationId","groupSize","loadBalancing","targetGroups","targetGroupss","targetGroupId","healthCheckType","healthCheckGracePeriod","instanceProtection","serviceLinkedRole","createAutoScalingGroup","vpc","vpcs","vpcId","subnets","subnetss","subnetId","touched","handleBlur","field","evt","item","state","setState","onOptionChange","selectName","selectedOption","options","values","i","l","length","map","s","id","value","push","handleChange","bind","handleSubmit","match","params","fetch","json","autoScalingGroup","then","result","jsonResult","t","event","target","checked","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","title","canc","optas","numAccount","opts","optls","optsub","optsubs","ss","label","optst","optsts","targetGroup","e","type","typecreateAutoScalingGroup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass AutoScalingGroupEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    launchConfiguration: {},\r\n    launchConfigurations: {},  \r\n    launchConfigurationId: '',\r\n    groupSize: '', \r\n    loadBalancing: false, \r\n    targetGroups: [], \r\n    targetGroupss: [],\r\n    targetGroupId: [],\r\n    healthCheckType: 'EC2', \r\n    healthCheckGracePeriod: '', \r\n    instanceProtection: '', \r\n    serviceLinkedRole: '', \r\n    createAutoScalingGroup: true,\r\n\t  vpc: {},\r\n    vpcs: {},\r\n  \tvpcId : '',\r\n    subnets: [],\r\n    subnetss: [],\r\n    subnetId: [],\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      subnetId: false,\r\n      launchConfigurationId: false,  \r\n      groupSize: false, \r\n      targetGroupId: false, \r\n      healthCheckGracePeriod: false, \r\n      instanceProtection: false, \r\n      serviceLinkedRole: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const autoScalingGroup = await (await fetch(`${API_BASE_URL}/autoScalingGroups/${this.props.match.params.id}`)).json();\r\n      autoScalingGroup.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        subnetId: false,\r\n        launchConfigurationId: false,  \r\n        groupSize: false, \r\n        targetGroupId: false, \r\n        healthCheckGracePeriod: false, \r\n        instanceProtection: false, \r\n        serviceLinkedRole: false\r\n      };\r\n      this.setState({item: autoScalingGroup});\r\n\r\n\r\n      await fetch(API_BASE_URL + '/accounts/' + (autoScalingGroup.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await (await fetch(API_BASE_URL + '/vpcs/' + (autoScalingGroup.vpc.id) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      await (await fetch(API_BASE_URL + '/vpcs/' + (autoScalingGroup.vpc.id) + '/launchConfigurations',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.launchConfigurations = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      await (await fetch(API_BASE_URL + '/vpcs/' + (autoScalingGroup.vpc.id) + '/targetGroups',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.targetGroupss = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      \r\n      \r\n      let item = {...this.state.item};\r\n      item.vpcId = autoScalingGroup.vpc.id;\r\n      item.accountId = autoScalingGroup.account.id;\r\n      item.launchConfigurationId = autoScalingGroup.launchConfiguration.id;\r\n      var values = [];\r\n      item.subnets.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.subnets = values;\r\n      values = [];\r\n      item.targetGroups.map(t => { \r\n        values.push({\"id\": t.id});\r\n      });\r\n      item.targetGroups = values;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const autoScalingGroup = {\r\n        name: '',\r\n        accountId: false,\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        launchConfiguration: {},\r\n        launchConfigurations: {},  \r\n        launchConfigurationId: '',\r\n        groupSize: '', \r\n        loadBalancing: false, \r\n        targetGroups: [], \r\n        targetGroupss: [],\r\n        targetGroupId: [],\r\n        healthCheckType: 'EC2', \r\n        healthCheckGracePeriod: '', \r\n        instanceProtection: '', \r\n        serviceLinkedRole: '', \r\n        createAutoScalingGroup: true,\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        subnets: [],\r\n        subnetss: [],\r\n        subnetId: [],\r\n        touched: {\r\n          name: false,\r\n          vpcId: false,\r\n          subnetId: false,\r\n          launchConfigurationId: false,  \r\n          groupSize: false, \r\n          targetGroupId: false, \r\n          healthCheckGracePeriod: false, \r\n          instanceProtection: false, \r\n          serviceLinkedRole: false\r\n        }\r\n      };\r\n      autoScalingGroup.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetId: false,\r\n          launchConfigurationId: false,  \r\n          groupSize: false, \r\n          targetGroupId: false, \r\n          healthCheckGracePeriod: false, \r\n          instanceProtection: false, \r\n          serviceLinkedRole: false\r\n      };\r\n      this.setState({item: autoScalingGroup});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*\r\n    await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    \r\n\r\n    if(name === 'typecreateAutoScalingGroup')\r\n    {\r\n      if(value === 'Keep'){\r\n        item.createAutoScalingGroup = true;\r\n      }\r\n      else\r\n      {\r\n        item.createAutoScalingGroup = false;\r\n      }\r\n    }\r\n\r\n    if(name === 'type')\r\n    {\r\n      if(value === 'ELB'){\r\n        item.healthCheckType = 'ELB';\r\n      }\r\n      else\r\n      {\r\n        item.healthCheckType = 'EC2';\r\n      }\r\n    }\r\n\r\n    if(name === 'loadBalancing')\r\n    {\r\n      item.loadBalancing = (target.checked) ? true: false;\r\n      if(item.healthCheckType === '') item.healthCheckType = 'EC2';\r\n    }\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n\r\n      item.subnetId = '';\r\n      item.subnets = [];\r\n      item.subnetss = [];\r\n\r\n      item.launchConfigurationId = '';\r\n      item.launchConfiguration = {};\r\n      item.launchConfigurations = [];\r\n\r\n      item.targetGroupId = '';\r\n      item.targetGroups = [];\r\n      item.targetGroupss = [];\r\n      \r\n\r\n    }\r\n    if(name === 'vpcId')\r\n    {\r\n      \r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/launchConfigurations',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.launchConfigurations = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/targetGroups',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.targetGroupss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true,\r\n      accountId: true,\r\n      vpcId: true,\r\n      subnetId: true,\r\n      launchConfigurationId: true,  \r\n      groupSize: true, \r\n      targetGroupId: true, \r\n      healthCheckGracePeriod: true, \r\n      instanceProtection: true, \r\n      serviceLinkedRole: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.launchConfigurationId, item.groupSize, item.targetGroupId, \r\n      item.healthCheckGracePeriod, item.instanceProtection, item.serviceLinkedRole, item.accountId);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= FRT_BASE_URL + '/autoScalingGroups'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    item.launchConfiguration={id: item.launchConfigurationId};\r\n    if(!item.loadBalancing)\r\n    {\r\n      item.targetGroups = [];\r\n      item.healthCheckType = '';\r\n\r\n    }\r\n    //console.log(\"groupSize=\" + item.groupSize);\r\n    //console.log(\"\");\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/autoScalingGroups/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/autoScalingGroups', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetId, launchConfigurationId, groupSize, targetGroupId, \r\n      healthCheckGracePeriod, instanceProtection, serviceLinkedRole, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      subnetId: '',\r\n      launchConfigurationId: '',  \r\n      groupSize: '', \r\n      targetGroupId: '', \r\n      healthCheckGracePeriod: '', \r\n      instanceProtection: '', \r\n      serviceLinkedRole: ''\r\n    };\r\n    //console.log('this.state.item.subnets.length=' + this.state.item.subnets.length);\r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.launchConfigurationId && launchConfigurationId.length === 0){\r\n      errors.launchConfigurationId = 'launchConfigurationId should not be null';\r\n      return errors;\r\n    } \r\n\r\n    if(this.state.item.touched.subnetId  && this.state.item.subnets.length === 0){\r\n      errors.subnetId = 'Add subnets.';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.groupSize && groupSize.length === 0){\r\n      errors.groupSize = 'groupSize should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.loadBalancing && this.state.item.touched.targetGroupId  && this.state.item.targetGroups.length === 0){\r\n      errors.targetGroupId = 'targetGroupId should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.healthCheckGracePeriod && healthCheckGracePeriod.length === 0){\r\n      errors.healthCheckGracePeriod = 'healthCheckGracePeriod should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.instanceProtection && instanceProtection.length === 0){\r\n      errors.instanceProtection = 'instanceProtection should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.serviceLinkedRole && serviceLinkedRole.length === 0){\r\n      errors.serviceLinkedRole = 'serviceLinkedRole should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'targetGroupId') \r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.targetGroupss && item.targetGroupss.length){\r\n              item.targetGroupss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.targetGroups = values;\r\n      }\r\n      if(selectName === 'subnetId') \r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.subnetss && item.subnetss.length){\r\n              item.subnetss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.subnets = values;\r\n      }\r\n      this.setState({item});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Auto Scaling Group' : 'Add Auto Scaling Group'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.launchConfigurationId, item.groupSize, item.targetGroupId, \r\n      item.healthCheckGracePeriod, item.instanceProtection, item.serviceLinkedRole, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = FRT_BASE_URL + \"/autoscalinggroups\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n\r\n    let optls = [];\r\n    if(item.launchConfigurations && item.launchConfigurations.length){\r\n      item.launchConfigurations.map(s => {  \r\n          optls.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let launchConfiguration = item.launchConfigurationId || '';\r\n    item.launchConfigurationId = launchConfiguration;\r\n    \r\n    let optsub = [];  \r\n    let optsubs = [];\r\n    if(item.subnetss && item.subnetss.length){\r\n      item.subnetss.map(s => {  \r\n          if(item.subnets && item.subnets.length) item.subnets.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsub.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsubs.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n\r\n    let optst = [];  \r\n    let optsts = [];\r\n    if(item.targetGroupss && item.targetGroupss.length){\r\n      item.targetGroupss.map(s => {  \r\n          if(item.targetGroups && item.targetGroups.length) item.targetGroups.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optst.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsts.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n    const healthCheckType = item.healthCheckType;\r\n    const createAutoScalingGroup = item.createAutoScalingGroup;\r\n    const targetGroup = (item.loadBalancing === true) ? <FormGroup>\r\n            <Label for=\"targetGroupId\">Target Group (*)</Label>\r\n            <Select name=\"targetGroupId\" id=\"targetGroupId\"  placeholder=\"Enter targetGroup\" isMulti \r\n              value={optst}\r\n              onChange={e => this.onOptionChange(\"targetGroupId\",e)}\r\n              onBlur={this.handleBlur('targetGroupId')}\r\n              options={optsts}\r\n\r\n            />\r\n            <FormFeedback>{errors.targetGroupId}</FormFeedback>\r\n          </FormGroup> : ''\r\n    const type = (item.loadBalancing === true) ? <FormGroup tag=\"fieldset\">\r\n            <Label for=\"type\">Health Check Type (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"ELB\" checked={healthCheckType === 'ELB'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\" disabled = 'true'\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                ELB\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"EC2\" checked={healthCheckType === 'EC2'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\" disabled = 'true'\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                EC2\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup> : ''\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"launchConfigurationId\">Launch Configuration (*)</Label>\r\n            <Input type=\"select\" name=\"launchConfigurationId\" id=\"launchConfigurationId\"  value={launchConfiguration} onChange={this.handleChange} onBlur={this.handleBlur('launchConfigurationId')}\r\n                 valid={errors.launchConfigurationId === ''}\r\n                 invalid={errors.launchConfigurationId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optls}\r\n            </Input>\r\n            <FormFeedback>{errors.launchConfigurationId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"subnetId\">Subnets (*)</Label>\r\n            <Select name=\"subnetId\" id=\"subnetId\"  placeholder=\"Enter subnet\" isMulti \r\n              value={optsub}\r\n              onChange={e => this.onOptionChange(\"subnetId\",e)}\r\n              onBlur={this.handleBlur('subnetId')}\r\n              options={optsubs}\r\n\r\n            />\r\n            <FormFeedback>{errors.subnetId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"groupSize\">Group Size (*)</Label>\r\n            <Input type=\"number\" name=\"groupSize\" id=\"groupSize\" value={item.groupSize || ''} placeholder=\"Enter groupSize\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('groupSize')} autoComplete=\"groupSize\"\r\n                   valid={errors.groupSize === ''}\r\n                   invalid={errors.groupSize !== ''}\r\n            />\r\n           <FormFeedback>{errors.groupSize}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          \r\n          <FormGroup > \r\n            <Label for=\"loadBalancing\">Load Balancing:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"loadBalancing\" id=\"loadBalancing\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('loadBalancing')} \r\n                    checked={item.loadBalancing === true}/>\r\n          </FormGroup>\r\n          \r\n          {targetGroup}\r\n          {type}\r\n         \r\n          <FormGroup>\r\n            <Label for=\"healthCheckGracePeriod\">Health Check Grace Period (*)</Label>\r\n            <Input type=\"number\" name=\"healthCheckGracePeriod\" id=\"healthCheckGracePeriod\" value={item.healthCheckGracePeriod || ''} placeholder=\"Enter healthCheckGracePeriod\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('healthCheckGracePeriod')} autoComplete=\"healthCheckGracePeriod\"\r\n                   valid={errors.healthCheckGracePeriod === ''}\r\n                   invalid={errors.healthCheckGracePeriod !== ''}\r\n            />\r\n           <FormFeedback>{errors.healthCheckGracePeriod}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"instanceProtection\">Instance Protection (*)</Label>\r\n            <Input type=\"text\" name=\"instanceProtection\" id=\"instanceProtection\" value={item.instanceProtection || ''} placeholder=\"Enter instanceProtection\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('instanceProtection')} autoComplete=\"instanceProtection\"\r\n                   valid={errors.instanceProtection === ''}\r\n                   invalid={errors.instanceProtection !== ''}\r\n            />\r\n           <FormFeedback>{errors.instanceProtection}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"serviceLinkedRole\">Service Linked Role (*)</Label>\r\n            <Input type=\"text\" name=\"serviceLinkedRole\" id=\"serviceLinkedRole\" value={item.serviceLinkedRole || ''} placeholder=\"Enter serviceLinkedRole\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('serviceLinkedRole')} autoComplete=\"serviceLinkedRole\"\r\n                   valid={errors.serviceLinkedRole === ''}\r\n                   invalid={errors.serviceLinkedRole !== ''}\r\n            />\r\n           <FormFeedback>{errors.serviceLinkedRole}</FormFeedback>\r\n          </FormGroup>\r\n\r\n     \r\n          \r\n          <FormGroup tag=\"fieldset\">\r\n            <Label for=\"typecreateAutoScalingGroup\">Create Auto Scaling Group (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"typecreateAutoScalingGroup\" id=\"typecreateAutoScalingGroup\" value=\"Keep\" checked={createAutoScalingGroup === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('typecreateAutoScalingGroup')} autoComplete=\"typecreateAutoScalingGroup\"\r\n                       valid={errors.typecreateAutoScalingGroup === ''}\r\n                       invalid={errors.typecreateAutoScalingGroup !== ''}\r\n                />{' '}\r\n                Keep this group at its initial size\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"typecreateAutoScalingGroup\" id=\"type\" value=\"NKeep\" checked={createAutoScalingGroup === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('typecreateAutoScalingGroup')} autoComplete=\"typecreateAutoScalingGroup\"\r\n                       valid={errors.typecreateAutoScalingGroup === ''}\r\n                       invalid={errors.typecreateAutoScalingGroup !== ''}\r\n                />{' '}\r\n                Use scaling policies to adjust the capacity of this group\r\n              </Label>\r\n            </FormGroup>\r\n            \r\n            <FormFeedback>{errors.typecreateAutoScalingGroup}</FormFeedback>\r\n          </FormGroup>\r\n\r\n  \r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(AutoScalingGroupEdit);"]},"metadata":{},"sourceType":"module"}