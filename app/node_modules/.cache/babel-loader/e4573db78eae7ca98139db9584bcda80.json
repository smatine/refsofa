{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\ElasticSearchList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar ElasticSearchList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ElasticSearchList, _Component);\n\n  function ElasticSearchList(props) {\n    var _this;\n\n    _classCallCheck(this, ElasticSearchList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ElasticSearchList).call(this, props));\n    _this.state = {\n      elasticSearchs: [],\n      isLoading: true\n    };\n    _this.remove = _this.remove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ElasticSearchList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      }); //fetch(`/trigrammes/${this.props.match.params.id}/products`)\n\n      fetch(\"\".concat(API_BASE_URL, \"/elasticSearchs\")).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          elasticSearchs: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(accId, id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_BASE_URL, \"/vpcs/\").concat(accId, \"/elasticSearchs/\").concat(id), {\n                  method: 'DELETE',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function () {\n                  var updateElasticSearch = _toConsumableArray(_this3.state.elasticSearchs).filter(function (i) {\n                    return i.id !== id;\n                  });\n\n                  _this3.setState({\n                    elasticSearchs: updateElasticSearch\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function remove(_x, _x2) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"remove2\",\n    value: function () {\n      var _remove2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"\".concat(API_BASE_URL, \"/elasticSearch/\").concat(id), {\n                  method: 'DELETE',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function () {\n                  var updateElasticSearch = _toConsumableArray(_this4.state.elasticSearchs).filter(function (i) {\n                    return i.id !== id;\n                  });\n\n                  _this4.setState({\n                    elasticSearchs: updateElasticSearch\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function remove2(_x3) {\n        return _remove2.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state = this.state,\n          elasticSearchs = _this$state.elasticSearchs,\n          isLoading = _this$state.isLoading;\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var elasticSearchList = elasticSearchs.map(function (elasticSearch) {\n        var link = elasticSearch.vpc ? FRT_BASE_URL + \"/vpcs/\" + elasticSearch.vpc.id : '';\n        var linkAccount = FRT_BASE_URL + \"/accounts/\" + elasticSearch.account.id;\n        var sg = elasticSearch.subnetgroup ? FRT_BASE_URL + \"/subnetgroups/\" + elasticSearch.subnetgroup.id : '';\n        var sgName = elasticSearch.subnetgroup ? elasticSearch.subnetgroup.name : '';\n        var vpc = elasticSearch.vpc ? React.createElement(\"a\", {\n          href: link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, elasticSearch.vpc.name) : '';\n        var del = elasticSearch.vpc ? React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this5.remove(elasticSearch.vpc.id, elasticSearch.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Delete\") : React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this5.remove2(elasticSearch.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Delete\");\n        var isPrivate = elasticSearch.prive ? 'Privtae VPC' : 'Public';\n        var enableDedicatedMaster = elasticSearch.enableDedicatedMaster ? 'Yes' : 'No';\n        var enableZoneAwareness = elasticSearch.enableZoneAwareness ? 'Yes' : 'No';\n        var enableEncrypt = elasticSearch.enableEncrypt ? 'Yes' : 'No';\n        var nodeToNodeEncryption = elasticSearch.nodeToNodeEncryption ? 'Yes' : 'No'; //nodes\n\n        var nodeInstance = {\n          \"id\": \"\",\n          \"instanceType\": \"\"\n        };\n        var nodeMaster = {\n          \"id\": \"\",\n          \"instanceType\": \"\"\n        }; //console.log(\"-------------------\");\n\n        if (elasticSearch.nodes && elasticSearch.nodes.length) {\n          elasticSearch.nodes.map(function (node) {\n            if (node.type === 'instance') {\n              nodeInstance.instanceCount = node.instanceCount;\n              nodeInstance.instanceType = node.instanceType.id;\n            } else if (node.type === 'master') {\n              nodeMaster.instanceCount = node.instanceCount;\n              nodeMaster.instanceType = node.instanceType.id;\n            } //console.log(\"node.id=\" + node.id + \"   \" + elasticSearch.name);\n\n          });\n        }\n\n        var allowExplicitIndex = elasticSearch.allowExplicitIndex ? 'Yes' : 'No';\n        return React.createElement(\"tr\", {\n          key: elasticSearch.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, elasticSearch.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, elasticSearch.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: linkAccount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, elasticSearch.account.numAccount)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, isPrivate), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, elasticSearch.text), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, vpc), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: sg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, sgName)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, elasticSearch.domainName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, elasticSearch.version), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, nodeInstance.instanceCount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, nodeInstance.instanceType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, enableDedicatedMaster), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, nodeMaster.instanceCount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, nodeMaster.instanceType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, enableZoneAwareness), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, elasticSearch.storageType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, elasticSearch.volumeType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, elasticSearch.volumeSize), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, elasticSearch.provisionedIops), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, enableEncrypt), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, elasticSearch.snapshotConfiguration, \" UTC\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, allowExplicitIndex), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, elasticSearch.cacheSize), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, elasticSearch.maxClauseCount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, nodeToNodeEncryption), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, elasticSearch.accessPolicy), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          tag: Link,\n          to: FRT_BASE_URL + \"/elasticSearchs/\" + elasticSearch.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Edit\"), del)));\n      });\n      var add = \"\".concat(FRT_BASE_URL, \"/elasticSearchs/new\"); //const trig = `/trigrammes`;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        tag: Link,\n        to: add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Add ElasticSearch\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"ElasticSearch\"), React.createElement(Table, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Account\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Private Vpc/ Public\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Vpc\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Subnet Group\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Domain Name\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Version\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Instance Count\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Instance Type\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Enable Dedicated Master\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Dedicated Master InstanceType\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Dedicated Master InstanceCount\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Enable Zone Awareness\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"StorageType\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"VolumeType\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"VolumeSize\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Provisioned Iops\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Enable Encrypt\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"SnapshotConfiguration (UTC)\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"rest.action.multi.allow_explicit_index\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"indices.fielddata.cache.size\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"indices.query.bool.max_clause_count\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"NodeToNodeEncryption\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Access Policy\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, elasticSearchList))));\n    }\n  }]);\n\n  return ElasticSearchList;\n}(Component);\n\nexport default ElasticSearchList;","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\ElasticSearchList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","API_BASE_URL","FRT_BASE_URL","ElasticSearchList","props","state","elasticSearchs","isLoading","remove","bind","setState","fetch","then","response","json","data","accId","id","method","headers","updateElasticSearch","filter","i","elasticSearchList","map","elasticSearch","link","vpc","linkAccount","account","sg","subnetgroup","sgName","name","del","remove2","isPrivate","prive","enableDedicatedMaster","enableZoneAwareness","enableEncrypt","nodeToNodeEncryption","nodeInstance","nodeMaster","nodes","length","node","type","instanceCount","instanceType","allowExplicitIndex","whiteSpace","numAccount","text","domainName","version","storageType","volumeType","volumeSize","provisionedIops","snapshotConfiguration","cacheSize","maxClauseCount","accessPolicy","add"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass ElasticSearchList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {elasticSearchs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/elasticSearchs`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({elasticSearchs: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/elasticSearchs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateElasticSearch = [...this.state.elasticSearchs].filter(i => i.id !== id);\r\n      this.setState({elasticSearchs: updateElasticSearch});\r\n    });\r\n  }\r\n\r\n  async remove2(id) {\r\n    await fetch(`${API_BASE_URL}/elasticSearch/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateElasticSearch = [...this.state.elasticSearchs].filter(i => i.id !== id);\r\n      this.setState({elasticSearchs: updateElasticSearch});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {elasticSearchs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const elasticSearchList = elasticSearchs.map(elasticSearch => {\r\n      \r\n      const link = (elasticSearch.vpc) ? FRT_BASE_URL + \"/vpcs/\" + elasticSearch.vpc.id : ''; \r\n      const linkAccount = FRT_BASE_URL + \"/accounts/\" + elasticSearch.account.id; \r\n      \r\n      const sg = (elasticSearch.subnetgroup) ? FRT_BASE_URL + \"/subnetgroups/\" + elasticSearch.subnetgroup.id : '';\r\n      const sgName = (elasticSearch.subnetgroup) ? elasticSearch.subnetgroup.name : '';\r\n\r\n      const vpc = (elasticSearch.vpc) ? <a href={link}>{elasticSearch.vpc.name}</a> : '';\r\n\r\n      const del = (elasticSearch.vpc) ? <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(elasticSearch.vpc.id, elasticSearch.id)}>Delete</Button>:\r\n                                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove2(elasticSearch.id)}>Delete</Button>\r\n      \r\n\r\n      const isPrivate = (elasticSearch.prive)? 'Privtae VPC':'Public';\r\n\r\n      const enableDedicatedMaster = (elasticSearch.enableDedicatedMaster) ? 'Yes': 'No';\r\n      const enableZoneAwareness = (elasticSearch.enableZoneAwareness) ? 'Yes': 'No';\r\n      const enableEncrypt = (elasticSearch.enableEncrypt) ? 'Yes': 'No';\r\n      const nodeToNodeEncryption = (elasticSearch.nodeToNodeEncryption) ? 'Yes': 'No';\r\n      \r\n      //nodes\r\n      let nodeInstance = {\"id\": \"\", \"instanceType\": \"\"};\r\n      let nodeMaster = {\"id\": \"\", \"instanceType\": \"\"};\r\n      //console.log(\"-------------------\");\r\n      if(elasticSearch.nodes && elasticSearch.nodes.length){\r\n        elasticSearch.nodes.map(node => { \r\n           if(node.type === 'instance')  \r\n           {\r\n              nodeInstance.instanceCount = node.instanceCount;\r\n              nodeInstance.instanceType = node.instanceType.id;\r\n           }\r\n           else if(node.type === 'master') \r\n           {\r\n              nodeMaster.instanceCount = node.instanceCount;\r\n              nodeMaster.instanceType = node.instanceType.id;\r\n\r\n            }\r\n           \r\n           //console.log(\"node.id=\" + node.id + \"   \" + elasticSearch.name);\r\n        });\r\n      }\r\n       \r\n      const allowExplicitIndex = (elasticSearch.allowExplicitIndex) ? 'Yes': 'No';\r\n      return <tr key={elasticSearch.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{elasticSearch.id}</td>\r\n\r\n\r\n        <td>{elasticSearch.name}</td>\r\n        <td><a href={linkAccount}>{elasticSearch.account.numAccount}</a></td>\r\n        <td>{isPrivate}</td>\r\n        <td>{elasticSearch.text}</td>\r\n        <td>{vpc}</td>\r\n        <td><a href={sg}>{sgName}</a></td>\r\n        <td>{elasticSearch.domainName}</td>\r\n        <td>{elasticSearch.version}</td>\r\n        <td>{nodeInstance.instanceCount}</td>\r\n        <td>{nodeInstance.instanceType}</td>\r\n        <td>{enableDedicatedMaster}</td>\r\n        <td>{nodeMaster.instanceCount}</td>\r\n        <td>{nodeMaster.instanceType}</td>\r\n        <td>{enableZoneAwareness}</td>\r\n        <td>{elasticSearch.storageType}</td>\r\n        <td>{elasticSearch.volumeType}</td>\r\n        <td>{elasticSearch.volumeSize}</td>\r\n        <td>{elasticSearch.provisionedIops}</td>\r\n        <td>{enableEncrypt}</td>\r\n        <td>{elasticSearch.snapshotConfiguration} UTC</td>\r\n        <td>{allowExplicitIndex}</td>\r\n        <td>{elasticSearch.cacheSize}</td>\r\n        <td>{elasticSearch.maxClauseCount}</td>\r\n        <td>{nodeToNodeEncryption}</td>\r\n        <td>{elasticSearch.accessPolicy}</td>\r\n   \r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={FRT_BASE_URL + \"/elasticSearchs/\" + elasticSearch.id}>Edit</Button>\r\n            {del}\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${FRT_BASE_URL}/elasticSearchs/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add ElasticSearch</Button>\r\n          </div>\r\n          \r\n          <h3>ElasticSearch</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Private Vpc/ Public</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Subnet Group</th>\r\n              <th width=\"5%\">Domain Name</th>\r\n              <th width=\"5%\">Version</th>\r\n              <th width=\"5%\">Instance Count</th>\r\n              <th width=\"5%\">Instance Type</th>\r\n              <th width=\"5%\">Enable Dedicated Master</th>\r\n              <th width=\"5%\">Dedicated Master InstanceType</th>\r\n              <th width=\"5%\">Dedicated Master InstanceCount</th>\r\n              <th width=\"5%\">Enable Zone Awareness</th>\r\n              <th width=\"5%\">StorageType</th>\r\n              <th width=\"5%\">VolumeType</th>\r\n              <th width=\"5%\">VolumeSize</th>\r\n              <th width=\"5%\">Provisioned Iops</th>\r\n              <th width=\"5%\">Enable Encrypt</th>\r\n              <th width=\"5%\">SnapshotConfiguration (UTC)</th>\r\n              <th width=\"5%\">rest.action.multi.allow_explicit_index</th>\r\n              <th width=\"5%\">indices.fielddata.cache.size</th>\r\n              <th width=\"5%\">indices.query.bool.max_clause_count</th>\r\n              <th width=\"5%\">NodeToNodeEncryption</th>\r\n              <th width=\"5%\">Access Policy</th>\r\n\r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {elasticSearchList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ElasticSearchList;"]},"metadata":{},"sourceType":"module"}