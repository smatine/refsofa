{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\SubnetEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL } from './constants';\n\nvar SubnetEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SubnetEdit, _Component);\n\n  function SubnetEdit(props) {\n    var _this;\n\n    _classCallCheck(this, SubnetEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubnetEdit).call(this, props));\n    _this.emptyItem = {\n      text: '',\n      vpc: {},\n      vpcs: {},\n      type: '',\n      sCidr: {},\n      sCidrs: {},\n      vpcId: '',\n      subnetCidrId: '',\n      isSameVpc: true,\n      az: {},\n      azs: {},\n      azId: '',\n      name: '',\n      account: {},\n      accounts: {},\n      accountId: '',\n      subnetgroup: [],\n      touched: {\n        type: false,\n        vpcId: false,\n        subnetCidrId: false,\n        name: false,\n        accountId: false,\n        azId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SubnetEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var subnet, item, _subnet;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 23;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/subnets/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                subnet = _context.sent;\n                subnet.touched = {\n                  type: false,\n                  vpcId: false,\n                  subnetCidrId: false,\n                  name: false,\n                  accountId: false,\n                  azId: false\n                };\n                this.setState({\n                  item: subnet\n                });\n                item = _objectSpread({}, this.state.item);\n                _context.next = 11;\n                return fetch(API_BASE_URL + '/accounts/' + subnet.account.id + '/vpcs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  //let item = {...this.state.item};\n                  item.vpcs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 11:\n                _context.next = 13;\n                return fetch(API_BASE_URL + '/cidrs/' + subnet.vpc.cidr.id + '/subnetcidrs/0').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  item.sCidrs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 13:\n                _context.next = 15;\n                return fetch(API_BASE_URL + '/regions/' + subnet.vpc.cidr.region.id + '/azs') //fetch('/regions/1001/azs',)\n                .then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  item.azs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 15:\n                item.isSameVpc = true;\n                item.subnetCidrId = subnet.sCidr.id;\n                item.vpcId = subnet.vpc.id;\n                item.accountId = subnet.account.id;\n                item.azId = subnet.az.id;\n                this.setState({\n                  item: item\n                });\n                _context.next = 26;\n                break;\n\n              case 23:\n                //const vpc = await (await fetch(`/vpcs/${this.props.match.params.idv}`)).json();\n                _subnet = {\n                  text: '',\n                  type: '',\n                  vpc: {},\n                  vpcs: {},\n                  sCidr: {},\n                  sCidrs: {},\n                  vpcId: '',\n                  name: '',\n                  account: {},\n                  accounts: {},\n                  accountId: '',\n                  subnetCidrId: '',\n                  isSameVpc: true,\n                  az: {},\n                  azs: {},\n                  azId: '',\n                  subnetgroup: [],\n                  touched: {\n                    type: false,\n                    vpcId: false,\n                    subnetCidrId: false,\n                    name: false,\n                    accountId: false,\n                    azId: false\n                  }\n                }; //subnet.vpc = vpc;\n\n                _subnet.touched = {\n                  type: false,\n                  vpcId: false,\n                  subnetCidrId: false,\n                  name: false,\n                  accountId: false,\n                  azId: false\n                };\n                this.setState({\n                  item: _subnet\n                });\n\n              case 26:\n                _context.next = 28;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n\n      if (name === 'accountId') {\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/vpcs').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.vpcs = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        item.vpcId = '';\n        item.subnetCidrId = ''; //item.sCidr = {};\n\n        item.sCidrs = [];\n        item.azId = '';\n        item.az = {};\n        item.azs = [];\n      }\n\n      item.isSameVpc = true;\n\n      if (name === 'vpcId') {\n        //console.log('change' + item.vpcId);\n        var vp = {};\n        fetch(API_BASE_URL + \"/vpcs/\" + item.vpcId).then(function (result) {\n          //console.log('change1');\n          return result.json();\n        }).then(function (jsonResult) {\n          vp = jsonResult; //memevpc\n\n          if (item.id && item.sCidr.subnet && item.sCidr.subnet.vpc.id !== vp.id) item.isSameVpc = false;\n          fetch(API_BASE_URL + '/cidrs/' + vp.cidr.id + '/subnetcidrs/0').then(function (result) {\n            //console.log('change2=' + item.sCidr.id);\n            return result.json();\n          }).then(function (jsonResult) {\n            item.sCidrs = jsonResult;\n\n            _this3.setState({\n              item: item\n            });\n          });\n          fetch(API_BASE_URL + '/regions/' + vp.cidr.region.id + '/azs').then(function (result) {\n            return result.json();\n          }).then(function (jsonResult) {\n            item.azs = jsonResult;\n\n            _this3.setState({\n              item: item\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist, values;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  type: true,\n                  vpcId: true,\n                  subnetCidrId: true,\n                  name: true,\n                  accountId: true,\n                  azId: true\n                };\n                errors = this.validate(item.subnetCidrId, item.vpcId, item.type, item.name, item.azId, item.accountId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/vpc/' + item.vpc.id + '/subnets';\n                item.sCidr = {\n                  id: item.subnetCidrId\n                }; //modif subnetCidr\n\n                item.vpc = {\n                  id: item.vpcId\n                };\n                item.account = {\n                  id: item.accountId\n                };\n                item.az = {\n                  id: item.azId\n                };\n                values = []; //item.subnetgroup=[];\n\n                if (item.subnetgroup && item.subnetgroup.length) {\n                  //console.log('item.subnetgroup.length=' + item.subnetgroup.length);\n                  item.subnetgroup.map(function (s) {\n                    values.push({\n                      \"id\": s.id\n                    });\n                  });\n                  item.subnetgroup = values;\n                }\n\n                values = [];\n\n                if (item.nacls && item.nacls.length) {\n                  item.nacls.map(function (s) {\n                    values.push({\n                      \"id\": s.id\n                    });\n                  });\n                  item.nacls = values;\n                }\n\n                values = [];\n\n                if (item.routetables && item.routetables.length) {\n                  item.routetables.map(function (s) {\n                    values.push({\n                      \"id\": s.id\n                    });\n                  });\n                  item.routetables = values;\n                }\n\n                values = [];\n\n                if (item.lbs && item.lbs.length) {\n                  item.lbs.map(function (s) {\n                    values.push({\n                      \"id\": s.id\n                    });\n                  });\n                  item.lbs = values;\n                }\n\n                values = [];\n\n                if (item.autoScalingGroups && item.autoScalingGroups.length) {\n                  item.autoScalingGroups.map(function (s) {\n                    values.push({\n                      \"id\": s.id\n                    });\n                  });\n                  item.autoScalingGroups = values;\n                } //alert(item.sCidr.id + \"  \" + item.vpc.id + \"  \" + item.az.id);\n\n\n                _context2.next = 25;\n                return fetch(item.id ? API_BASE_URL + '/vpcs/' + item.vpc.id + '/subnets/' + item.id : API_BASE_URL + '/vpcs/' + item.vpc.id + '/subnets', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 25:\n                this.props.history.push(hist);\n\n              case 26:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(subnetCidrId, vpcId, type, name, azId, accountId) {\n      var errors = {\n        type: '',\n        vpcId: '',\n        subnetCidrId: '',\n        name: '',\n        accountId: '',\n        azId: ''\n      };\n\n      if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'accountId should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.subnetCidrId && subnetCidrId.length === 0) {\n        errors.subnetCidrId = 'subnetCidr should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.type && type.length === 0) {\n        errors.type = 'type should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.vpcId && vpcId.length === 0) {\n        errors.vpcId = 'Vpc should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.azId && azId.length === 0) {\n        errors.azId = 'Az should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, item.id ? 'Edit Subnet' : 'Add Subnet');\n      var errors = this.validate(item.subnetCidrId, item.vpcId, item.type, item.name, item.azId, item.accountId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/vpc/\" + item.vpc.id + \"/subnets\";\n      var optas = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          optas.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 370\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount));\n        });\n      }\n\n      var account = item.accountId || '';\n      item.accountId = account;\n      var opts = [];\n\n      if (item.sCidrs && item.sCidrs.length) {\n        item.sCidrs.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379\n            },\n            __self: this\n          }, s.id, \" \", s.subnetCidr));\n        });\n      }\n\n      if (item.id && item.isSameVpc) {\n        opts.push(React.createElement(\"option\", {\n          key: item.sCidr.id,\n          value: item.sCidr.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, item.sCidr.id, \" \", item.sCidr.subnetCidr, \" \"));\n      }\n\n      var cid = item.subnetCidrId || '';\n      item.subnetCidrId = cid;\n      var optsv = [];\n\n      if (item.vpcs && item.vpcs.length) {\n        item.vpcs.map(function (s) {\n          optsv.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 392\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      if (item.id) {//optsv.push(<option value={item.vpc.id} >{item.vpc.id} {item.vpc.name} </option>);\n      }\n\n      var vpc = item.vpcId || '';\n      item.vpcId = vpc;\n      var optsa = [];\n\n      if (item.azs && item.azs.length) {\n        item.azs.map(function (s) {\n          optsa.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 404\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var az = item.azId || '';\n      item.azId = az;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: account,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"Choose\"), optas), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"vpcId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, \"Vpc (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"vpcId\",\n        id: \"vpcId\",\n        value: vpc,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('vpcId'),\n        valid: errors.vpcId === '',\n        invalid: errors.vpcId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"Choose\"), optsv), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, errors.vpcId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"subnetCidrId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, \"CIDR (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"subnetCidrId\",\n        id: \"subnetCidrId\",\n        value: cid,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('subnetCidrId'),\n        valid: errors.subnetCidrId === '',\n        invalid: errors.subnetCidrId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, errors.subnetCidrId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \"Type(*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"type\",\n        id: \"type\",\n        value: item.type || '',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('type'),\n        autoComplete: \"type\",\n        valid: errors.type === '',\n        invalid: errors.type !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, errors.type)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"azId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, \"Az (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"azId\",\n        id: \"azId\",\n        value: az,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('azId'),\n        valid: errors.azId === '',\n        invalid: errors.azId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, \"Choose\"), optsa), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, errors.azId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return SubnetEdit;\n}(Component);\n\nexport default withRouter(SubnetEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\SubnetEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","SubnetEdit","props","emptyItem","text","vpc","vpcs","type","sCidr","sCidrs","vpcId","subnetCidrId","isSameVpc","az","azs","azId","name","account","accounts","accountId","subnetgroup","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","subnet","then","result","jsonResult","cidr","region","event","target","value","vp","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","values","length","map","s","push","nacls","routetables","lbs","autoScalingGroups","method","headers","body","JSON","stringify","history","title","canc","optas","numAccount","opts","subnetCidr","cid","optsv","optsa"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SubnetEdit extends Component {\r\n\r\n  emptyItem = {\r\n    text: '',\r\n\t  vpc: {},\r\n    vpcs:{},\r\n    type:'',\r\n    sCidr: {},\r\n    sCidrs: {},\r\n  \tvpcId : '',\r\n    subnetCidrId: '',\r\n    isSameVpc: true,\r\n    az:{},\r\n    azs:{},\r\n    azId: '',\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    subnetgroup: [],\r\n    touched: {\r\n      type: false,\r\n      vpcId: false,\r\n      subnetCidrId: false,\r\n      name: false,\r\n      accountId: false,\r\n      azId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const subnet = await (await fetch(`${API_BASE_URL}/subnets/${this.props.match.params.id}`)).json();\r\n      subnet.touched = {\r\n        type: false,\r\n        vpcId: false,\r\n        subnetCidrId: false,\r\n        name: false,\r\n        accountId: false,\r\n        azId: false\r\n      };\r\n      this.setState({item: subnet});\r\n      let item = {...this.state.item};\r\n\r\n      await fetch(API_BASE_URL + '/accounts/' + (subnet.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        //let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      //attention\r\n      await (await fetch(API_BASE_URL + '/cidrs/' + (subnet.vpc.cidr.id) + '/subnetcidrs/0',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.sCidrs = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      \r\n      await (await fetch(API_BASE_URL + '/regions/' + (subnet.vpc.cidr.region.id) + '/azs',)\r\n        //fetch('/regions/1001/azs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          \r\n          item.azs = jsonResult;\r\n          this.setState({item: item});\r\n      }));\r\n\r\n      item.isSameVpc = true;\r\n      item.subnetCidrId = subnet.sCidr.id;\r\n      item.vpcId = subnet.vpc.id;\r\n      item.accountId = subnet.account.id;\r\n      item.azId = subnet.az.id;\r\n      this.setState({item: item});\r\n    }\r\n    else {\r\n      //const vpc = await (await fetch(`/vpcs/${this.props.match.params.idv}`)).json();\r\n      const subnet = {\r\n        text: '',\r\n        type: '',\r\n        vpc: {},\r\n        vpcs:{},\r\n        sCidr: {},\r\n        sCidrs: {},\r\n        vpcId : '',\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        subnetCidrId: '',\r\n        isSameVpc: true,\r\n        az:{},\r\n        azs:{},\r\n        azId: '',\r\n        subnetgroup: [],\r\n        touched: {\r\n          type: false,\r\n          vpcId: false,\r\n          subnetCidrId: false,\r\n          name: false,\r\n          accountId: false,\r\n          azId: false\r\n        }\r\n      };\r\n      //subnet.vpc = vpc;\r\n      subnet.touched = {\r\n        type: false,\r\n        vpcId: false,\r\n        subnetCidrId: false,\r\n        name: false,\r\n        accountId: false,\r\n        azId: false\r\n      };\r\n      this.setState({item: subnet});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    //const {item} = this.state;\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => { \r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    }); */ \r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      \r\n      item.subnetCidrId = '';\r\n      //item.sCidr = {};\r\n      item.sCidrs = [];\r\n\r\n      item.azId = '';\r\n      item.az = {};\r\n      item.azs = [];\r\n    }\r\n\r\n    item.isSameVpc = true;\r\n    if(name === 'vpcId')\r\n    {\r\n      //console.log('change' + item.vpcId);\r\n      let vp={};\r\n      fetch(API_BASE_URL + \"/vpcs/\" + item.vpcId,)\r\n      .then((result) => {\r\n        //console.log('change1');\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        vp = jsonResult;\r\n\r\n        //memevpc\r\n        if(item.id && item.sCidr.subnet && item.sCidr.subnet.vpc.id !== vp.id) item.isSameVpc = false;\r\n\r\n        fetch(API_BASE_URL + '/cidrs/' + (vp.cidr.id) + '/subnetcidrs/0',)\r\n        .then((result) => {\r\n          //console.log('change2=' + item.sCidr.id);\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.sCidrs = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/regions/' + (vp.cidr.region.id) + '/azs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.azs = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n        type: true,\r\n        vpcId: true,\r\n        subnetCidrId: true,\r\n        name: true,\r\n        accountId: true,\r\n        azId: true\r\n    };\r\n    const errors = this.validate(item.subnetCidrId, item.vpcId, item.type, item.name, item.azId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/vpc/' + item.vpc.id + '/subnets';\r\n\r\n    item.sCidr={id: item.subnetCidrId};//modif subnetCidr\r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n\r\n    item.az={id: item.azId};\r\n    \r\n    var values = [];\r\n    //item.subnetgroup=[];\r\n    if(item.subnetgroup && item.subnetgroup.length){\r\n      //console.log('item.subnetgroup.length=' + item.subnetgroup.length);\r\n      item.subnetgroup.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.subnetgroup= values;\r\n    }\r\n    \r\n    values=[];\r\n    if(item.nacls && item.nacls.length){\r\n      item.nacls.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.nacls= values;\r\n    }\r\n\r\n    values=[];\r\n    if(item.routetables && item.routetables.length){\r\n      item.routetables.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.routetables= values;\r\n    }\r\n    \r\n    values=[];\r\n    if(item.lbs && item.lbs.length){\r\n      item.lbs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.lbs = values;\r\n    }\r\n\r\n    values=[];\r\n    if(item.autoScalingGroups && item.autoScalingGroups.length){\r\n      item.autoScalingGroups.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.autoScalingGroups = values;\r\n    }\r\n    \r\n    //alert(item.sCidr.id + \"  \" + item.vpc.id + \"  \" + item.az.id);\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/subnets/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/subnets', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(subnetCidrId, vpcId, type, name, azId, accountId) {\r\n\r\n    const errors = {\r\n      type: '',\r\n      vpcId: '',\r\n      subnetCidrId: '',\r\n      name: '',\r\n      accountId: '',\r\n      azId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.subnetCidrId && subnetCidrId.length === 0){\r\n      errors.subnetCidrId = 'subnetCidr should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'type should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.azId && azId.length === 0){\r\n      errors.azId = 'Az should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Subnet' : 'Add Subnet'}</h2>;\r\n    \r\n    const errors = this.validate(item.subnetCidrId, item.vpcId, item.type, item.name, item.azId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/vpc/\" + item.vpc.id + \"/subnets\";\r\n\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.sCidrs && item.sCidrs.length){\r\n          item.sCidrs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.subnetCidr}</option>);\r\n      });\r\n    }\r\n    if(item.id && item.isSameVpc) {\r\n          opts.push(<option key={item.sCidr.id} value={item.sCidr.id} >{item.sCidr.id} {item.sCidr.subnetCidr} </option>);\r\n    }\r\n\r\n    let cid = item.subnetCidrId || '';\r\n    item.subnetCidrId = cid;\r\n\r\n   let optsv = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n          item.vpcs.map(s => {  \r\n          optsv.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    if(item.id) {\r\n          //optsv.push(<option value={item.vpc.id} >{item.vpc.id} {item.vpc.name} </option>);\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n\r\n    let optsa = [];\r\n    if(item.azs && item.azs.length){\r\n          item.azs.map(s => {  \r\n          optsa.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let az = item.azId || '';\r\n    item.azId = az;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          \r\n         \r\n         <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                    valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n            <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpc (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsv}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n      \r\n          <FormGroup>\r\n            <Label for=\"subnetCidrId\">CIDR (*)</Label>\r\n            <Input type=\"select\" name=\"subnetCidrId\" id=\"subnetCidrId\"  value={cid} onChange={this.handleChange} onBlur={this.handleBlur('subnetCidrId')}\r\n                 valid={errors.subnetCidrId === ''}\r\n                 invalid={errors.subnetCidrId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.subnetCidrId}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          \r\n          <FormGroup>\r\n            <Label for=\"type\">Type(*)</Label>\r\n            <Input type=\"text\" name=\"type\" id=\"type\" value={item.type || ''}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                    valid={errors.type === ''}\r\n                   invalid={errors.type !== ''}\r\n            />\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n\t\t  \r\n\t\t     <FormGroup>\r\n            <Label for=\"azId\">Az (*)</Label>\r\n            <Input type=\"select\" name=\"azId\" id=\"azId\"  value={az} onChange={this.handleChange} onBlur={this.handleBlur('azId')}\r\n                 valid={errors.azId === ''}\r\n                 invalid={errors.azId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsa}\r\n            </Input>\r\n            <FormFeedback>{errors.azId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\t\t     <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\t\t  \r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(SubnetEdit);"]},"metadata":{},"sourceType":"module"}