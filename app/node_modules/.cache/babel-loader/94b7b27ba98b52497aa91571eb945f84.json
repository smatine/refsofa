{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\PolicyEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport Select from 'react-select';\nimport { API_BASE_URL } from './constants';\n\nvar PolicyEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PolicyEdit, _Component);\n\n  function PolicyEdit(props) {\n    var _this;\n\n    _classCallCheck(this, PolicyEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PolicyEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      description: '',\n      policyJson: '',\n      account: {},\n      accounts: [],\n      accountId: '',\n      touched: {\n        name: false,\n        accountId: false,\n        policyJson: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PolicyEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var policy, item, _policy;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/policys/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                policy = _context.sent;\n                policy.touched = {\n                  name: false,\n                  accountId: false,\n                  policyJson: false\n                };\n                this.setState({\n                  item: policy\n                });\n                item = _objectSpread({}, this.state.item);\n                item.accountId = policy.account.id;\n                this.setState({\n                  item: item\n                });\n                _context.next = 16;\n                break;\n\n              case 13:\n                _policy = {\n                  name: '',\n                  description: '',\n                  policyJson: '',\n                  account: {},\n                  accounts: [],\n                  accountId: '',\n                  touched: {\n                    name: false,\n                    accountId: false,\n                    policyJson: false\n                  }\n                };\n                _policy.touched = {\n                  name: false,\n                  accountId: false,\n                  policyJson: false\n                };\n                this.setState({\n                  item: _policy\n                });\n\n              case 16:\n                _context.next = 18;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist, values;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  accountId: true,\n                  policyJson: true\n                };\n                errors = this.validate(item.name, item.accountId, item.policyJson);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/policys';\n                item.account = {\n                  id: item.accountId\n                };\n                values = [];\n                item.roles.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.roles = values;\n                values = [];\n                item.groups.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.groups = values;\n                values = [];\n                item.endPoints.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.endPoints = values;\n                _context2.next = 21;\n                return fetch(item.id ? API_BASE_URL + '/accounts/' + item.account.id + '/policys/' + item.id : API_BASE_URL + '/accounts/' + item.account.id + '/policys', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 21:\n                this.props.history.push(hist);\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, accountId, policyJson) {\n      var errors = {\n        name: '',\n        accountId: '',\n        policyJson: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'Vpc should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.policyJson && policyJson.length === 0) {\n        errors.policyJson = 'policyJson should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, item.id ? 'Edit Policy' : 'Add Policy');\n      var errors = this.validate(item.name, item.accountId, item.policyJson);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/policys\";\n      var opts = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var account = item.accountId || '';\n      item.accountId = account;\n      var isUsed = false;\n      if (item.id !== '' && (item.roles && item.roles.length !== 0 || item.groups && item.groups.length !== 0 || item.endPoints && item.endPoints.length !== 0)) isUsed = true;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: account,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        disabled: isUsed,\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"policyJson\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Policy (*)\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"policyJson\",\n        id: \"policyJson\",\n        value: item.policyJson || '',\n        placeholder: \"Enter policyJson\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('policyJson'),\n        autoComplete: \"policyJson\",\n        valid: errors.policyJson === '',\n        invalid: errors.policyJson !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, errors.policyJson)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Description (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        value: item.description || '',\n        placeholder: \"Enter description\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('description'),\n        autoComplete: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return PolicyEdit;\n}(Component);\n\nexport default withRouter(PolicyEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\PolicyEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","Select","API_BASE_URL","PolicyEdit","props","emptyItem","name","description","policyJson","account","accounts","accountId","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","policy","then","result","jsonResult","event","target","value","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","values","roles","map","s","push","groups","endPoints","method","headers","body","JSON","stringify","history","length","title","canc","opts","isUsed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass PolicyEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    description: '', \r\n    policyJson: '',\r\n\t  account: {},\r\n    accounts: [],\r\n  \taccountId : '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      policyJson: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const policy = await (await fetch(`${API_BASE_URL}/policys/${this.props.match.params.id}`)).json();\r\n      policy.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        policyJson: false\r\n      };\r\n      this.setState({item: policy});\r\n      \r\n      let item = {...this.state.item};\r\n      item.accountId = policy.account.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const policy = {\r\n        name: '',\r\n        description: '', \r\n        policyJson: '',\r\n        account: {},\r\n        accounts: [],\r\n        accountId : '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          policyJson: false\r\n        }\r\n      };\r\n      policy.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          policyJson: false\r\n      };\r\n      this.setState({item: policy});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true,\r\n      accountId: true,\r\n      policyJson: true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.policyJson);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/policys'; \r\n\r\n    item.account={id: item.accountId};\r\n    \r\n    var values = [];\r\n      item.roles.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.roles = values;\r\n    \r\n    var values = [];\r\n      item.groups.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.groups = values;\r\n\r\n    var values = [];\r\n      item.endPoints.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.endPoints = values;\r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/policys/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/policys', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId, policyJson) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      policyJson: ''\r\n    };\r\n    \r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.policyJson && policyJson.length === 0){\r\n      errors.policyJson = 'policyJson should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Policy' : 'Add Policy'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.policyJson);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/policys\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let isUsed = false; \r\n    if(item.id !== '' && ((item.roles && item.roles.length !== 0) || (item.groups && item.groups.length !== 0) || (item.endPoints && item.endPoints.length !== 0)) ) isUsed = true; \r\n    \r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n \r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\" disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')} disabled={isUsed}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"policyJson\">Policy (*)</Label>\r\n            <Input type=\"textarea\" name=\"policyJson\" id=\"policyJson\" value={item.policyJson || ''} placeholder=\"Enter policyJson\" disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('policyJson')} autoComplete=\"policyJson\"\r\n                   valid={errors.policyJson === ''}\r\n                   invalid={errors.policyJson !== ''}\r\n            />\r\n           <FormFeedback>{errors.policyJson}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"description\">Description (*)</Label>\r\n            <Input type=\"text\" name=\"description\" id=\"description\" value={item.description || ''} placeholder=\"Enter description\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('description')} autoComplete=\"description\"\r\n                   \r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(PolicyEdit);"]},"metadata":{},"sourceType":"module"}