{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\SsmEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL } from './constants';\n\nvar SsmEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SsmEdit, _Component);\n\n  function SsmEdit(props) {\n    var _this;\n\n    _classCallCheck(this, SsmEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SsmEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      text: '',\n      account: {},\n      accountId: '',\n      type: 'String',\n      keyKmsId: '',\n      value: '',\n      touched: {\n        name: false,\n        accountId: false,\n        type: false,\n        keyKmsId: false,\n        value: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SsmEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var ssm, item, _ssm;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/ssms/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                ssm = _context.sent;\n                ssm.touched = {\n                  name: false,\n                  accountId: false,\n                  type: false,\n                  keyKmsId: false,\n                  value: false\n                };\n                this.setState({\n                  item: ssm\n                });\n                item = _objectSpread({}, this.state.item);\n                item.accountId = ssm.account.id;\n                this.setState({\n                  item: item\n                });\n                _context.next = 16;\n                break;\n\n              case 13:\n                _ssm = {\n                  name: '',\n                  text: '',\n                  account: {},\n                  accountId: '',\n                  type: 'String',\n                  keyKmsId: '',\n                  value: '',\n                  touched: {\n                    name: false,\n                    accountId: false,\n                    type: false,\n                    keyKmsId: false,\n                    value: false\n                  }\n                };\n                _ssm.touched = {\n                  name: false,\n                  accountId: false,\n                  type: false,\n                  keyKmsId: false,\n                  value: false\n                };\n                this.setState({\n                  item: _ssm\n                });\n\n              case 16:\n                _context.next = 18;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.account = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  accountId: true,\n                  type: true,\n                  keyKmsId: true,\n                  value: true\n                };\n                errors = this.validate(item.name, item.accountId, item.type, item.keyKmsId, item.value);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/ssms';\n                item.account = {\n                  id: item.accountId\n                };\n\n                if (this.state.item.type !== 'SecureString') {\n                  item.keyKmsId = '';\n                }\n\n                _context2.next = 13;\n                return fetch(item.id ? API_BASE_URL + '/accounts/' + item.account.id + '/ssms/' + item.id : API_BASE_URL + '/accounts/' + item.account.id + '/ssms', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 13:\n                this.props.history.push(hist);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, accountId, type, keyKmsId, value) {\n      var errors = {\n        name: '',\n        accountId: '',\n        type: '',\n        keyKmsId: '',\n        value: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      } else if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'account should not be null';\n        return errors;\n      } else if (this.state.item.touched.type && type.length === 0) {\n        errors.type = 'type should not be null';\n        return errors;\n      } else if (this.state.item.type === 'SecureString' && this.state.item.touched.keyKmsId && keyKmsId.length === 0) {\n        errors.keyKmsId = 'keyKmsId should not be null';\n        return errors;\n      } else if (this.state.item.touched.value && value.length === 0) {\n        errors.value = 'value should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, item.id ? 'Edit SSM Parameter Store' : 'Add SSM Parameter Store');\n      var errors = this.validate(item.name, item.accountId, item.type, item.keyKmsId, item.value);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/ssms\";\n      var opts = [];\n\n      if (item.account && item.account.length) {\n        item.account.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount));\n        });\n      }\n\n      var tri = item.accountId || '';\n      item.accountId = tri;\n      var type = item.type || '';\n      item.type = type;\n      var keyKms = item.type === 'SecureString' ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"keyKmsId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Key Kms Id (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"keyKmsId\",\n        id: \"keyKmsId\",\n        value: item.keyKmsId || '',\n        placeholder: \"Enter keyKmsId\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('keyKmsId'),\n        autoComplete: \"keyKmsId\",\n        valid: errors.keyKmsId === '',\n        invalid: errors.keyKmsId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, errors.keyKmsId)) : '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"accounts (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: tri,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Type (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"type\",\n        id: \"type\",\n        value: type,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('type'),\n        valid: errors.type === '',\n        invalid: errors.type !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"String\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"String\"), React.createElement(\"option\", {\n        value: \"StringList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"StringList\"), React.createElement(\"option\", {\n        value: \"SecureString\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"SecureString\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, errors.type)), keyKms, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Value (*)\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"value\",\n        id: \"value\",\n        value: item.value || '',\n        placeholder: \"Enter value\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('value'),\n        autoComplete: \"value\",\n        valid: errors.value === '',\n        invalid: errors.value !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, errors.value)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return SsmEdit;\n}(Component);\n\nexport default withRouter(SsmEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\SsmEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","SsmEdit","props","emptyItem","name","text","account","accountId","type","keyKmsId","value","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","ssm","then","result","jsonResult","event","target","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","push","length","title","canc","opts","map","s","numAccount","tri","keyKms"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SsmEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n\t  account: {},\r\n  \taccountId : '',\r\n    type: 'String', \r\n    keyKmsId: '', \r\n    value: '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      type: false,\r\n      keyKmsId: false, \r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const ssm = await (await fetch(`${API_BASE_URL}/ssms/${this.props.match.params.id}`)).json();\r\n      ssm.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        type: false,\r\n        keyKmsId: false, \r\n        value: false\r\n      };\r\n      this.setState({item: ssm});\r\n\r\n      let item = {...this.state.item};\r\n      item.accountId = ssm.account.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const ssm = {\r\n        name: '',\r\n        text: '',\r\n        account: {},\r\n        accountId : '',\r\n        type: 'String', \r\n        keyKmsId: '', \r\n        value: '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          type: false,\r\n          keyKmsId: false, \r\n          value: false\r\n        }\r\n      };\r\n      ssm.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          type: false,\r\n          keyKmsId: false, \r\n          value: false\r\n      };\r\n      this.setState({item: ssm});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.account = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          type: true,\r\n          keyKmsId: true, \r\n          value: true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.type, item.keyKmsId, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/ssms'; \r\n\r\n    item.account={id: item.accountId};\r\n    if(this.state.item.type !== 'SecureString')\r\n    {\r\n      item.keyKmsId = '';\r\n    }\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/ssms/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/ssms', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId, type, keyKmsId, value) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      type: '',\r\n      keyKmsId: '',\r\n      value: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'account should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.type === 'SecureString' && this.state.item.touched.keyKmsId && keyKmsId.length === 0){\r\n      errors.keyKmsId = 'keyKmsId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'value should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit SSM Parameter Store' : 'Add SSM Parameter Store'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.type, item.keyKmsId, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/ssms\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.account && item.account.length){\r\n      item.account.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    \r\n\r\n    let tri = item.accountId || '';\r\n    item.accountId = tri;\r\n\r\n    let type = item.type || '';\r\n    item.type = type;\r\n\r\n    const keyKms = (item.type === 'SecureString') ?  <FormGroup>\r\n            <Label for=\"keyKmsId\">Key Kms Id (*)</Label>\r\n            <Input type=\"text\" name=\"keyKmsId\" id=\"keyKmsId\" value={item.keyKmsId || ''} placeholder=\"Enter keyKmsId\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('keyKmsId')} autoComplete=\"keyKmsId\"\r\n                   valid={errors.keyKmsId === ''}\r\n                   invalid={errors.keyKmsId !== ''}\r\n            />\r\n           <FormFeedback>{errors.keyKmsId}</FormFeedback>\r\n          </FormGroup> : '';\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">accounts (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n          <FormGroup>\r\n            <Label for=\"type\">Type (*)</Label>\r\n            <Input type=\"select\" name=\"type\" id=\"type\"  value={type} onChange={this.handleChange} onBlur={this.handleBlur('type')}\r\n                 valid={errors.type === ''}\r\n                 invalid={errors.type !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"String\">String</option>\r\n              <option value=\"StringList\">StringList</option>\r\n              <option value=\"SecureString\">SecureString</option>\r\n            </Input>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {keyKms}\r\n\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"textarea\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\t\t      \r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(SsmEdit);"]},"metadata":{},"sourceType":"module"}