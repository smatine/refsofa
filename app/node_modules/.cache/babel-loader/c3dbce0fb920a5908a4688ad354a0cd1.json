{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\AmiEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar AmiEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AmiEdit, _Component);\n\n  function AmiEdit(props) {\n    var _this;\n\n    _classCallCheck(this, AmiEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AmiEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      text: '',\n      region: '',\n      regionId: '',\n      amiId: '',\n      touched: {\n        name: false,\n        regionId: false,\n        amiId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AmiEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var ami, region, _ami;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/amis/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                ami = _context.sent;\n                ami.touched = {\n                  name: false,\n                  regionId: false,\n                  amiId: false\n                };\n                this.setState({\n                  item: ami\n                });\n                _context.next = 19;\n                break;\n\n              case 10:\n                _context.next = 12;\n                return fetch(\"\".concat(API_BASE_URL, \"/regions/\").concat(this.props.match.params.idr));\n\n              case 12:\n                _context.next = 14;\n                return _context.sent.json();\n\n              case 14:\n                region = _context.sent;\n                _ami = {\n                  name: '',\n                  text: '',\n                  region: '',\n                  regionId: '',\n                  amiId: '',\n                  touched: {\n                    name: false,\n                    regionId: false,\n                    amiId: false\n                  }\n                };\n                _ami.region = region;\n                _ami.touched = {\n                  name: false,\n                  regionId: false,\n                  amiId: false\n                };\n                this.setState({\n                  item: _ami\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  regionId: true,\n                  amiId: true\n                };\n                errors = this.validate(item.name, item.regionId, item.amiId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = FRT_BASE_URL + '/region/' + item.region.id + '/amis';\n                item.region = {\n                  id: item.region.id\n                };\n                _context2.next = 12;\n                return fetch(item.id ? API_BASE_URL + '/regions/' + item.region.id + '/amis/' + item.id : API_BASE_URL + '/regions/' + item.region.id + '/amis', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 12:\n                this.props.history.push(hist);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, regionId, amiId) {\n      var errors = {\n        name: '',\n        regionId: '',\n        amiId: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      } else if (this.state.item.touched.amiId && amiId.length === 0) {\n        errors.amiId = 'amiId should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, item.id ? 'Edit Ami' : 'Add Ami');\n      var errors = this.validate(item.name, item.regionId, item.amiId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = FRT_BASE_URL + \"/region/\" + item.region.id + \"/amis\";\n      var regs = null;\n      regs = React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"regionId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Region: \", item.region.name), React.createElement(Input, {\n        type: \"text\",\n        name: \"regionId\",\n        id: \"regionId\",\n        value: item.region.id || '',\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }));\n      var isDisabledd = false; //if(item.id && item.subnets.length !== 0) isDisabledd = true\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        disabled: isDisabledd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"amiId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Ami Id\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"amiId\",\n        id: \"amiId\",\n        value: item.amiId || '',\n        placeholder: \"Enter amiId\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('amiId'),\n        autoComplete: \"amiId\",\n        valid: errors.amiId === '',\n        invalid: errors.amiId !== '',\n        disabled: isDisabledd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, errors.amiId)), regs, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return AmiEdit;\n}(Component);\n\nexport default withRouter(AmiEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\AmiEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","FRT_BASE_URL","AmiEdit","props","emptyItem","name","text","region","regionId","amiId","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","ami","idr","event","target","value","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","push","length","title","canc","regs","isDisabledd"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass AmiEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n    region: '',\r\n    regionId : '',\r\n    amiId:'',\r\n    touched: {\r\n      name: false,\r\n      regionId: false,\r\n      amiId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const ami = await (await fetch(`${API_BASE_URL}/amis/${this.props.match.params.id}`)).json();\r\n      ami.touched = {\r\n        name: false,\r\n        regionId: false,\r\n        amiId: false\r\n      };\r\n      this.setState({item: ami});\r\n    }\r\n    else {\r\n      //alert(`/regions/${this.props.match.params.idt}`);      \r\n      const region = await (await fetch(`${API_BASE_URL}/regions/${this.props.match.params.idr}`)).json();\r\n      const ami = {\r\n        name: '',\r\n        text: '',\r\n        region: '',\r\n        regionId : '',\r\n        amiId:'',\r\n        touched: {\r\n          name: false,\r\n          regionId: false,\r\n          amiId: false\r\n        }\r\n      };\r\n      ami.region = region;\r\n      ami.touched = {\r\n          name: false,\r\n          regionId: false,\r\n          amiId: false\r\n      };\r\n      this.setState({item: ami});\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          regionId: true,\r\n          amiId: true\r\n    };\r\n    const errors = this.validate(item.name, item.regionId, item.amiId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= FRT_BASE_URL + '/region/' + item.region.id + '/amis'; \r\n\r\n    item.region = {id: item.region.id};\r\n    \r\n    await fetch((item.id) ? API_BASE_URL + '/regions/' + (item.region.id) + '/amis/'+(item.id) : API_BASE_URL + '/regions/' + item.region.id + '/amis', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, regionId, amiId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      regionId: '',\r\n      amiId:''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.amiId && amiId.length === 0){\r\n      errors.amiId = 'amiId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Ami' : 'Add Ami'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.regionId, item.amiId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = FRT_BASE_URL + \"/region/\" + item.region.id + \"/amis\";\r\n\r\n    let regs = null;\r\n    regs = <FormGroup>\r\n            <Label for=\"regionId\">Region: {item.region.name}</Label>\r\n            <Input type=\"text\" name=\"regionId\" id=\"regionId\" value={item.region.id || ''} disabled={true}/>\r\n          </FormGroup>;\r\n\r\n    let isDisabledd = false;\r\n    //if(item.id && item.subnets.length !== 0) isDisabledd = true\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n                   disabled={isDisabledd}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"amiId\">Ami Id</Label>\r\n            <Input type=\"text\" name=\"amiId\" id=\"amiId\" value={item.amiId || ''} placeholder=\"Enter amiId\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('amiId')} autoComplete=\"amiId\"\r\n                   valid={errors.amiId === ''}\r\n                   invalid={errors.amiId !== ''}\r\n                   disabled={isDisabledd}\r\n            />\r\n           <FormFeedback>{errors.amiId}</FormFeedback>\r\n          </FormGroup>\r\n          {regs}\r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(AmiEdit);"]},"metadata":{},"sourceType":"module"}