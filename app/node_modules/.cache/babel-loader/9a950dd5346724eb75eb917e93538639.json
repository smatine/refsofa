{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\VpcManageList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container } from 'reactstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\nvar order = 'desc';\n\nvar VpcManageList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VpcManageList, _Component);\n\n  function VpcManageList(props) {\n    var _this;\n\n    _classCallCheck(this, VpcManageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VpcManageList).call(this, props));\n    _this.state = {\n      cidrs: [],\n      isLoading: true\n    };\n    _this.remove = _this.remove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(VpcManageList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      fetch(API_BASE_URL + '/cidrs').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          cidrs: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_BASE_URL, \"/cidrs/\").concat(id), {\n                  method: 'DELETE',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function () {\n                  var updateCidr = _toConsumableArray(_this3.state.cidrs).filter(function (i) {\n                    return i.id !== id;\n                  });\n\n                  _this3.setState({\n                    cidrs: updateCidr\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function remove(_x) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          cidrs = _this$state.cidrs,\n          isLoading = _this$state.isLoading;\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var defaultSorted = [{\n        dataField: 'id',\n        order: 'desc'\n      }];\n      var columns = [{\n        dataField: 'id',\n        text: 'ID',\n        filter: textFilter({\n          delay: 1000,\n          // default is 500ms\n          style: {\n            backgroundColor: 'white'\n          },\n          className: 'test-classname',\n          placeholder: 'Id'\n        }),\n\n        /*headerStyle: (column, colIndex) => {\r\n          if (colIndex % 2 === 0) {\r\n            return {\r\n              backgroundColor: '#81c784'\r\n            };\r\n          }\r\n          return {\r\n            backgroundColor: '#c8e6c9'\r\n          };\r\n        },*/\n        sort: true\n        /*sortCaret: (order, column) => {\r\n          if (!order) return (<span>&nbsp;&nbsp;d/a</span>);\r\n          else if (order === 'asc') return (<span>&nbsp;&nbsp;d/<font color=\"blue\">a</font></span>);\r\n          else if (order === 'desc') return (<span>&nbsp;&nbsp;<font color=\"blue\">d</font>/a</span>);\r\n          return null;\r\n        }*/\n\n      }, {\n        dataField: 'cidr',\n        text: 'Cidr',\n        filter: textFilter({\n          delay: 1000,\n          // default is 500ms\n          style: {\n            backgroundColor: 'white'\n          },\n          className: 'test-classname',\n          placeholder: 'Cidr'\n        }),\n        sort: true\n      }, {\n        dataField: 'env',\n        text: 'Env',\n        filter: textFilter({\n          caseSensitive: true,\n          delay: 1000,\n          // default is 500ms\n          style: {\n            backgroundColor: 'white'\n          },\n          className: 'test-classname',\n          placeholder: 'Env'\n        }),\n        sort: true\n      }, {\n        dataField: 'text',\n        text: 'Description',\n        filter: textFilter({\n          caseSensitive: true,\n          delay: 1000,\n          // default is 500ms\n          style: {\n            backgroundColor: 'white'\n          },\n          className: 'test-classname',\n          placeholder: 'Description'\n        }),\n        sort: true\n      }, {\n        dataField: 'region.name',\n        text: 'Region',\n        filter: textFilter({\n          caseSensitive: true,\n          delay: 1000,\n          // default is 500ms\n          style: {\n            backgroundColor: 'white'\n          },\n          className: 'test-classname',\n          placeholder: 'Region'\n        }),\n        sort: true,\n        formatter: function formatter(cellContent, row) {\n          if (row.region && row.region.id) {\n            var reg = '';\n            reg = FRT_BASE_URL + '/regions/' + row.region.id;\n            var regc = '';\n            regc = row.region.name;\n            return React.createElement(\"a\", {\n              href: reg,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151\n              },\n              __self: this\n            }, regc);\n          }\n        }\n      },,\n      /*, \r\n      {\r\n        dataField: 'vpc',\r\n        text: 'Vpc',\r\n        isDummyField: true,\r\n          formatter: (cellContent, row) => {\r\n            if (row.vpc && row.vpc.id) {\r\n              let vpc = '';\r\n              vpc='/account/' + row.vpc.account.id + '/vpcs/' + row.vpc.id; \r\n        \r\n              let vpcc = '';\r\n              vpcc = \"[Vpc:\" + row.vpc.id + \" Acc:\" + row.vpc.account.numAccount + \" Prd:\" + row.vpc.account.product.name  + \" Tri:\" + row.vpc.account.product.trigramme.name +\"]\";\r\n                return (\r\n                <a href={vpc}>{vpcc}</a>\r\n              );\r\n            }\r\n          }\r\n      }*/\n      {\n        dataField: 'vpc.name',\n        text: 'Vpc',\n        //isDummyField: true,\n        filter: textFilter({\n          caseSensitive: true,\n          delay: 1000,\n          // default is 500ms\n          style: {\n            backgroundColor: 'white'\n          },\n          className: 'test-classname',\n          placeholder: 'Vpc'\n        }),\n        sort: true,\n        formatter: function formatter(cellContent, row) {\n          if (row.vpc && row.vpc.id) {\n            var vpc = '';\n            vpc = FRT_BASE_URL + '/account/' + row.vpc.account.id + '/vpcs/' + row.vpc.id;\n            var vpcc = '';\n            vpcc = row.vpc.name;\n            return React.createElement(\"a\", {\n              href: vpc,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 200\n              },\n              __self: this\n            }, vpcc);\n          }\n        }\n      }, {\n        dataField: 'vpc.account.numAccount',\n        text: 'Account',\n        filter: textFilter({\n          caseSensitive: true,\n          delay: 1000,\n          // default is 500ms\n          style: {\n            backgroundColor: 'white'\n          },\n          className: 'test-classname',\n          placeholder: 'Account'\n        }),\n        sort: true,\n        isDummyField: true,\n        formatter: function formatter(cellContent, row) {\n          if (row.vpc && row.vpc.id) {\n            var vpc = '';\n            vpc = FRT_BASE_URL + '/product/' + row.vpc.account.product.id + '/accounts/' + row.vpc.account.id;\n            var vpcc = '';\n            vpcc = row.vpc.account.numAccount;\n            return React.createElement(\"a\", {\n              href: vpc,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 228\n              },\n              __self: this\n            }, vpcc);\n          }\n        }\n      }, {\n        dataField: 'vpc.account.product.name',\n        text: 'Product',\n        filter: textFilter({\n          caseSensitive: true,\n          delay: 1000,\n          // default is 500ms\n          style: {\n            backgroundColor: 'white'\n          },\n          className: 'test-classname',\n          placeholder: 'Product'\n        }),\n        sort: true,\n        isDummyField: true,\n        formatter: function formatter(cellContent, row) {\n          if (row.vpc && row.vpc.id) {\n            var vpc = '';\n            vpc = FRT_BASE_URL + '/trigramme/' + row.vpc.account.product.trigramme.id + '/products/' + row.vpc.account.product.id;\n            var vpcc = '';\n            vpcc = row.vpc.account.product.name;\n            return React.createElement(\"a\", {\n              href: vpc,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 256\n              },\n              __self: this\n            }, vpcc);\n          }\n        }\n      }, {\n        dataField: 'vpc.account.product.trigramme.name',\n        text: 'Trigramme',\n        filter: textFilter({\n          caseSensitive: true,\n          delay: 1000,\n          // default is 500ms\n          style: {\n            backgroundColor: 'white'\n          },\n          className: 'test-classname',\n          placeholder: 'Trigramme'\n        }),\n        sort: true,\n        isDummyField: true,\n        formatter: function formatter(cellContent, row) {\n          if (row.vpc && row.vpc.id) {\n            var vpc = '';\n            vpc = FRT_BASE_URL + '/trigrammes/' + row.vpc.account.product.trigramme.id;\n            var vpcc = '';\n            vpcc = row.vpc.account.product.trigramme.name;\n            return React.createElement(\"a\", {\n              href: vpc,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 284\n              },\n              __self: this\n            }, vpcc);\n          }\n        }\n      }, {\n        dataField: 'vpc',\n        text: 'Action',\n        isDummyField: true,\n        formatter: function formatter(cellContent, row) {\n          var isDisabled = false;\n          if (row.vpc) isDisabled = true;\n          return React.createElement(ButtonGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"sm\",\n            color: \"secondary\",\n            tag: Link,\n            to: FRT_BASE_URL + \"/vpcmanages/\" + row.id + \"/subnetmanage\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301\n            },\n            __self: this\n          }, \"Subnets Cidr\"), \"\\xA0\\xA0\", React.createElement(Button, {\n            size: \"sm\",\n            color: \"primary\",\n            tag: Link,\n            to: FRT_BASE_URL + \"/vpcmanage/\" + row.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(Button, {\n            size: \"sm\",\n            color: \"danger\",\n            onClick: function onClick() {\n              return _this4.remove(row.id);\n            },\n            disabled: isDisabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 303\n            },\n            __self: this\n          }, \"Delete\"));\n        }\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        tag: Link,\n        to: FRT_BASE_URL + \"/vpcmanage/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Add Cidr\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Cidr\"), React.createElement(BootstrapTable, {\n        headerClasses: \"header-class\",\n        keyField: \"id\",\n        data: cidrs,\n        columns: columns,\n        bordered: false,\n        defaultSorted: defaultSorted,\n        filter: filterFactory(),\n        pagination: paginationFactory(),\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      })));\n      /*\r\n      const cidrList = cidrs.map(cidr => {\r\n        \r\n        let vpc = '';\r\n        if(cidr.vpc) vpc='/account/' + cidr.vpc.account.id + '/vpcs/' + cidr.vpc.id; \r\n        let vpcc = '';\r\n        if(cidr.vpc) vpcc = \"[Vpc:\" + cidr.vpc.id + \" Acc:\" + cidr.vpc.account.numAccount + \" Prd:\" + cidr.vpc.account.product.name  + \" Tri:\" + cidr.vpc.account.product.trigramme.name +\"]\";\r\n          let isDisabled = false;\r\n        if(cidr.vpc) isDisabled=true;\r\n          /*return <tr key={cidr.id}>\r\n          <td style={{whiteSpace: 'nowrap'}}>{cidr.id}</td>\r\n          <td>{cidr.cidr}</td>\r\n          <td>{cidr.env}</td>\r\n        <td>{cidr.text}</td>\r\n          <td><a href={vpc}>{vpcc}</a></td>\r\n              <td>\r\n            <ButtonGroup>\r\n              <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/vpcmanage/\" + cidr.id}>Edit</Button>\r\n              <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(cidr.id)}  disabled={isDisabled}>Delete</Button>\r\n            </ButtonGroup>\r\n          </td>\r\n        </tr>\r\n        \r\n      });\r\n      \r\n      \r\n        return (\r\n        \r\n        <div>\r\n          <AppNavbar/>\r\n          <Container fluid>\r\n            <div className=\"float-right\">\r\n              <Button color=\"success\" tag={Link} to=\"/vpcmanage/new\">Add Cidr</Button>\r\n            </div>\r\n            <h3>Cidr</h3>\r\n            <Table className=\"mt-4\">\r\n              <thead>\r\n              <tr>\r\n                <th width=\"5%\">Id</th> \r\n                <th width=\"5%\">Cidr</th> \r\n                <th width=\"5%\">Env</th>\r\n             <th width=\"5%\">Description</th>\r\n                <th width=\"5%\">Vpc</th>\r\n             <th width=\"5%\">Actions</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {cidrList}\r\n              </tbody>\r\n            </Table>\r\n          </Container>\r\n        </div>\r\n      );\r\n      */\n    }\n  }]);\n\n  return VpcManageList;\n}(Component);\n\nexport default VpcManageList;","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\VpcManageList.js"],"names":["React","Component","Button","ButtonGroup","Container","BootstrapTable","AppNavbar","Link","filterFactory","textFilter","paginationFactory","API_BASE_URL","FRT_BASE_URL","order","VpcManageList","props","state","cidrs","isLoading","remove","bind","setState","fetch","then","response","json","data","id","method","headers","updateCidr","filter","i","defaultSorted","dataField","columns","text","delay","style","backgroundColor","className","placeholder","sort","caseSensitive","formatter","cellContent","row","region","reg","regc","name","vpc","account","vpcc","isDummyField","product","numAccount","trigramme","isDisabled"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,QAA+C,YAA/C;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,IAAwBC,UAAxB,QAA0C,+BAA1C;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,aAA3C;AAEA,IAAIC,KAAK,GAAG,MAAZ;;IACMC,a;;;;;AAEJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,SAAS,EAAE;AAAvB,KAAb;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,uDAAd;AAHiB;AAIlB;;;;wCAEmB;AAAA;;AAClB,WAAKC,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAE;AAAZ,OAAd;AAEAI,MAAAA,KAAK,CAACX,YAAY,GAAG,QAAhB,CAAL,CACGY,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,eAAI,MAAI,CAACL,QAAL,CAAc;AAACJ,UAAAA,KAAK,EAAES,IAAR;AAAcR,UAAAA,SAAS,EAAE;AAAzB,SAAd,CAAJ;AAAA,OAFZ;AAID;;;;;;gDAEYS,E;;;;;;;;uBACLL,KAAK,WAAIX,YAAJ,oBAA0BgB,EAA1B,GAAgC;AACzCC,kBAAAA,MAAM,EAAE,QADiC;AAEzCC,kBAAAA,OAAO,EAAE;AACP,8BAAU,kBADH;AAEP,oCAAgB;AAFT;AAFgC,iBAAhC,CAAL,CAMHN,IANG,CAME,YAAM;AACZ,sBAAIO,UAAU,GAAG,mBAAI,MAAI,CAACd,KAAL,CAAWC,KAAf,EAAsBc,MAAtB,CAA6B,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAACL,EAAF,KAASA,EAAb;AAAA,mBAA9B,CAAjB;;AACA,kBAAA,MAAI,CAACN,QAAL,CAAc;AAACJ,oBAAAA,KAAK,EAAEa;AAAR,mBAAd;AACD,iBATK,C;;;;;;;;;;;;;;;;6BAaC;AAAA;;AAAA,wBAEmB,KAAKd,KAFxB;AAAA,UAEDC,KAFC,eAEDA,KAFC;AAAA,UAEMC,SAFN,eAEMA,SAFN;;AAIP,UAAIA,SAAJ,EAAe;AACb,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AAED,UAAMe,aAAa,GAAG,CAAC;AACrBC,QAAAA,SAAS,EAAE,IADU;AAErBrB,QAAAA,KAAK,EAAE;AAFc,OAAD,CAAtB;AAKA,UAAMsB,OAAO,GAAG,CAChB;AACED,QAAAA,SAAS,EAAE,IADb;AAEEE,QAAAA,IAAI,EAAE,IAFR;AAGEL,QAAAA,MAAM,EAAEtB,UAAU,CAAC;AACjB4B,UAAAA,KAAK,EAAE,IADU;AACJ;AACbC,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE;AADZ,WAFU;AAKjBC,UAAAA,SAAS,EAAE,gBALM;AAMjBC,UAAAA,WAAW,EAAE;AANI,SAAD,CAHpB;;AAWE;;;;;;;;;;AAUAC,QAAAA,IAAI,EAAE;AACN;;;;;;;AAtBF,OADgB,EA8BhB;AACER,QAAAA,SAAS,EAAE,MADb;AAEEE,QAAAA,IAAI,EAAE,MAFR;AAGEL,QAAAA,MAAM,EAAEtB,UAAU,CAAC;AACjB4B,UAAAA,KAAK,EAAE,IADU;AACJ;AACbC,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE;AADZ,WAFU;AAKjBC,UAAAA,SAAS,EAAE,gBALM;AAMjBC,UAAAA,WAAW,EAAE;AANI,SAAD,CAHpB;AAWEC,QAAAA,IAAI,EAAE;AAXR,OA9BgB,EA4ChB;AACER,QAAAA,SAAS,EAAE,KADb;AAEEE,QAAAA,IAAI,EAAE,KAFR;AAGEL,QAAAA,MAAM,EAAEtB,UAAU,CAAC;AACjBkC,UAAAA,aAAa,EAAE,IADE;AAEjBN,UAAAA,KAAK,EAAE,IAFU;AAEJ;AACbC,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE;AADZ,WAHU;AAMjBC,UAAAA,SAAS,EAAE,gBANM;AAOjBC,UAAAA,WAAW,EAAE;AAPI,SAAD,CAHpB;AAYEC,QAAAA,IAAI,EAAE;AAZR,OA5CgB,EA0DhB;AACER,QAAAA,SAAS,EAAE,MADb;AAEEE,QAAAA,IAAI,EAAE,aAFR;AAGEL,QAAAA,MAAM,EAAEtB,UAAU,CAAC;AACjBkC,UAAAA,aAAa,EAAE,IADE;AAEjBN,UAAAA,KAAK,EAAE,IAFU;AAEJ;AACbC,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE;AADZ,WAHU;AAMjBC,UAAAA,SAAS,EAAE,gBANM;AAOjBC,UAAAA,WAAW,EAAE;AAPI,SAAD,CAHpB;AAYEC,QAAAA,IAAI,EAAE;AAZR,OA1DgB,EAyEhB;AACER,QAAAA,SAAS,EAAE,aADb;AAEEE,QAAAA,IAAI,EAAE,QAFR;AAGEL,QAAAA,MAAM,EAAEtB,UAAU,CAAC;AACjBkC,UAAAA,aAAa,EAAE,IADE;AAEjBN,UAAAA,KAAK,EAAE,IAFU;AAEJ;AACbC,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE;AADZ,WAHU;AAMjBC,UAAAA,SAAS,EAAE,gBANM;AAOjBC,UAAAA,WAAW,EAAE;AAPI,SAAD,CAHpB;AAYEC,QAAAA,IAAI,EAAE,IAZR;AAcEE,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAcC,GAAd,EAAsB;AAC7B,cAAIA,GAAG,CAACC,MAAJ,IAAcD,GAAG,CAACC,MAAJ,CAAWpB,EAA7B,EAAiC;AAC/B,gBAAIqB,GAAG,GAAG,EAAV;AACAA,YAAAA,GAAG,GAACpC,YAAY,GAAG,WAAf,GAA6BkC,GAAG,CAACC,MAAJ,CAAWpB,EAA5C;AAEA,gBAAIsB,IAAI,GAAG,EAAX;AACAA,YAAAA,IAAI,GAAGH,GAAG,CAACC,MAAJ,CAAWG,IAAlB;AAEA,mBACE;AAAG,cAAA,IAAI,EAAEF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAeC,IAAf,CADF;AAGD;AACF;AA1BL,OAzEgB;AAsGhB;;;;;;;;;;;;;;;;;;AAmBA;AACEf,QAAAA,SAAS,EAAE,UADb;AAEEE,QAAAA,IAAI,EAAE,KAFR;AAGE;AACAL,QAAAA,MAAM,EAAEtB,UAAU,CAAC;AACjBkC,UAAAA,aAAa,EAAE,IADE;AAEjBN,UAAAA,KAAK,EAAE,IAFU;AAEJ;AACbC,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE;AADZ,WAHU;AAMjBC,UAAAA,SAAS,EAAE,gBANM;AAOjBC,UAAAA,WAAW,EAAE;AAPI,SAAD,CAJpB;AAaEC,QAAAA,IAAI,EAAE,IAbR;AAeIE,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAcC,GAAd,EAAsB;AAC/B,cAAIA,GAAG,CAACK,GAAJ,IAAWL,GAAG,CAACK,GAAJ,CAAQxB,EAAvB,EAA2B;AACzB,gBAAIwB,GAAG,GAAG,EAAV;AACAA,YAAAA,GAAG,GAACvC,YAAY,GAAG,WAAf,GAA6BkC,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBzB,EAA7C,GAAkD,QAAlD,GAA6DmB,GAAG,CAACK,GAAJ,CAAQxB,EAAzE;AAEA,gBAAI0B,IAAI,GAAG,EAAX;AACAA,YAAAA,IAAI,GAAGP,GAAG,CAACK,GAAJ,CAAQD,IAAf;AAEA,mBACE;AAAG,cAAA,IAAI,EAAEC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAeE,IAAf,CADF;AAGD;AACF;AA3BL,OAzHgB,EAsJhB;AACEnB,QAAAA,SAAS,EAAE,wBADb;AAEEE,QAAAA,IAAI,EAAE,SAFR;AAGEL,QAAAA,MAAM,EAAEtB,UAAU,CAAC;AACjBkC,UAAAA,aAAa,EAAE,IADE;AAEjBN,UAAAA,KAAK,EAAE,IAFU;AAEJ;AACbC,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE;AADZ,WAHU;AAMjBC,UAAAA,SAAS,EAAE,gBANM;AAOjBC,UAAAA,WAAW,EAAE;AAPI,SAAD,CAHpB;AAYEC,QAAAA,IAAI,EAAE,IAZR;AAaEY,QAAAA,YAAY,EAAE,IAbhB;AAcIV,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAcC,GAAd,EAAsB;AAC/B,cAAIA,GAAG,CAACK,GAAJ,IAAWL,GAAG,CAACK,GAAJ,CAAQxB,EAAvB,EAA2B;AACzB,gBAAIwB,GAAG,GAAG,EAAV;AACAA,YAAAA,GAAG,GAACvC,YAAY,GAAG,WAAf,GAA6BkC,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBG,OAAhB,CAAwB5B,EAArD,GAA0D,YAA1D,GAAyEmB,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBzB,EAA7F;AAEA,gBAAI0B,IAAI,GAAG,EAAX;AACAA,YAAAA,IAAI,GAAGP,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBI,UAAvB;AAEA,mBACE;AAAG,cAAA,IAAI,EAAEL,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAeE,IAAf,CADF;AAGD;AACF;AA1BL,OAtJgB,EAkLhB;AACEnB,QAAAA,SAAS,EAAE,0BADb;AAEEE,QAAAA,IAAI,EAAE,SAFR;AAGEL,QAAAA,MAAM,EAAEtB,UAAU,CAAC;AACjBkC,UAAAA,aAAa,EAAE,IADE;AAEjBN,UAAAA,KAAK,EAAE,IAFU;AAEJ;AACbC,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE;AADZ,WAHU;AAMjBC,UAAAA,SAAS,EAAE,gBANM;AAOjBC,UAAAA,WAAW,EAAE;AAPI,SAAD,CAHpB;AAYEC,QAAAA,IAAI,EAAE,IAZR;AAaEY,QAAAA,YAAY,EAAE,IAbhB;AAcIV,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAcC,GAAd,EAAsB;AAC/B,cAAIA,GAAG,CAACK,GAAJ,IAAWL,GAAG,CAACK,GAAJ,CAAQxB,EAAvB,EAA2B;AACzB,gBAAIwB,GAAG,GAAG,EAAV;AACAA,YAAAA,GAAG,GAACvC,YAAY,GAAG,aAAf,GAA+BkC,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBG,OAAhB,CAAwBE,SAAxB,CAAkC9B,EAAjE,GAAsE,YAAtE,GAAqFmB,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBG,OAAhB,CAAwB5B,EAAjH;AAEA,gBAAI0B,IAAI,GAAG,EAAX;AACAA,YAAAA,IAAI,GAAGP,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBG,OAAhB,CAAwBL,IAA/B;AAEA,mBACE;AAAG,cAAA,IAAI,EAAEC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAeE,IAAf,CADF;AAGD;AACF;AA1BL,OAlLgB,EA8MhB;AACEnB,QAAAA,SAAS,EAAE,oCADb;AAEEE,QAAAA,IAAI,EAAE,WAFR;AAGEL,QAAAA,MAAM,EAAEtB,UAAU,CAAC;AACjBkC,UAAAA,aAAa,EAAE,IADE;AAEjBN,UAAAA,KAAK,EAAE,IAFU;AAEJ;AACbC,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE;AADZ,WAHU;AAMjBC,UAAAA,SAAS,EAAE,gBANM;AAOjBC,UAAAA,WAAW,EAAE;AAPI,SAAD,CAHpB;AAYEC,QAAAA,IAAI,EAAE,IAZR;AAaEY,QAAAA,YAAY,EAAE,IAbhB;AAcIV,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAcC,GAAd,EAAsB;AAC/B,cAAIA,GAAG,CAACK,GAAJ,IAAWL,GAAG,CAACK,GAAJ,CAAQxB,EAAvB,EAA2B;AACzB,gBAAIwB,GAAG,GAAG,EAAV;AACAA,YAAAA,GAAG,GAACvC,YAAY,GAAG,cAAf,GAAgCkC,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBG,OAAhB,CAAwBE,SAAxB,CAAkC9B,EAAtE;AAEA,gBAAI0B,IAAI,GAAG,EAAX;AACAA,YAAAA,IAAI,GAAGP,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBG,OAAhB,CAAwBE,SAAxB,CAAkCP,IAAzC;AAEA,mBACE;AAAG,cAAA,IAAI,EAAEC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAeE,IAAf,CADF;AAGD;AACF;AA1BL,OA9MgB,EA0OhB;AACInB,QAAAA,SAAS,EAAE,KADf;AAEIE,QAAAA,IAAI,EAAE,QAFV;AAIIkB,QAAAA,YAAY,EAAE,IAJlB;AAKMV,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAcC,GAAd,EAAsB;AAE/B,cAAIY,UAAU,GAAG,KAAjB;AACA,cAAGZ,GAAG,CAACK,GAAP,EAAYO,UAAU,GAAC,IAAX;AAEZ,iBACO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC,oBAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,IAAb;AAAkB,YAAA,KAAK,EAAC,WAAxB;AAAoC,YAAA,GAAG,EAAEnD,IAAzC;AAA+C,YAAA,EAAE,EAAEK,YAAY,GAAG,cAAf,GAAgCkC,GAAG,CAACnB,EAApC,GAAyC,eAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,cAEC,oBAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,IAAb;AAAkB,YAAA,KAAK,EAAC,SAAxB;AAAkC,YAAA,GAAG,EAAEpB,IAAvC;AAA6C,YAAA,EAAE,EAAEK,YAAY,GAAG,aAAf,GAA+BkC,GAAG,CAACnB,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,EAGC,oBAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,IAAb;AAAkB,YAAA,KAAK,EAAC,QAAxB;AAAiC,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACR,MAAL,CAAY2B,GAAG,CAACnB,EAAhB,CAAN;AAAA,aAA1C;AAAsE,YAAA,QAAQ,EAAE+B,UAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHD,CADP;AAQD;AAlBP,OA1OgB,CAAhB;AAgQA,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,GAAG,EAAEnD,IAA7B;AAAmC,QAAA,EAAE,EAAEK,YAAY,GAAG,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE,oBAAC,cAAD;AACE,QAAA,aAAa,EAAC,cADhB;AAEE,QAAA,QAAQ,EAAC,IAFX;AAGE,QAAA,IAAI,EAAGK,KAHT;AAIE,QAAA,OAAO,EAAGkB,OAJZ;AAKE,QAAA,QAAQ,EAAG,KALb;AAME,QAAA,aAAa,EAAGF,aANlB;AAOE,QAAA,MAAM,EAAGzB,aAAa,EAPxB;AAQE,QAAA,UAAU,EAAGE,iBAAiB,EARhC;AAUE,QAAA,KAAK,MAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAFF,CAFF;AA4BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DD;;;;EAnYyBT,S;;AAsY5B,eAAea,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nlet order = 'desc';\r\nclass VpcManageList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {cidrs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(API_BASE_URL + '/cidrs')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({cidrs: data, isLoading: false}));\r\n\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`${API_BASE_URL}/cidrs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateCidr = [...this.state.cidrs].filter(i => i.id !== id);\r\n      this.setState({cidrs: updateCidr});\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n   const {cidrs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const defaultSorted = [{\r\n      dataField: 'id',\r\n      order: 'desc'\r\n    }];\r\n\r\n    const columns = [\r\n    {\r\n      dataField: 'id',\r\n      text: 'ID',\r\n      filter: textFilter({\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Id'\r\n      }),\r\n      /*headerStyle: (column, colIndex) => {\r\n        if (colIndex % 2 === 0) {\r\n          return {\r\n            backgroundColor: '#81c784'\r\n          };\r\n        }\r\n        return {\r\n          backgroundColor: '#c8e6c9'\r\n        };\r\n      },*/\r\n      sort: true\r\n      /*sortCaret: (order, column) => {\r\n        if (!order) return (<span>&nbsp;&nbsp;d/a</span>);\r\n        else if (order === 'asc') return (<span>&nbsp;&nbsp;d/<font color=\"blue\">a</font></span>);\r\n        else if (order === 'desc') return (<span>&nbsp;&nbsp;<font color=\"blue\">d</font>/a</span>);\r\n        return null;\r\n      }*/\r\n    }, \r\n    {\r\n      dataField: 'cidr',\r\n      text: 'Cidr',\r\n      filter: textFilter({\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Cidr'\r\n      }),\r\n      sort: true\r\n    }, \r\n    \r\n    {\r\n      dataField: 'env',\r\n      text: 'Env',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Env'\r\n      }),\r\n      sort: true\r\n    }, \r\n    {\r\n      dataField: 'text',\r\n      text: 'Description',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Description'\r\n      }),\r\n      sort: true\r\n    },\r\n\r\n    {\r\n      dataField: 'region.name',\r\n      text: 'Region',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Region'\r\n      }),\r\n      sort: true,\r\n      \r\n      formatter: (cellContent, row) => {\r\n          if (row.region && row.region.id) {\r\n            let reg = '';\r\n            reg=FRT_BASE_URL + '/regions/' + row.region.id ;\r\n      \r\n            let regc = '';\r\n            regc = row.region.name;\r\n\r\n            return (\r\n              <a href={reg}>{regc}</a>\r\n            );\r\n          }\r\n        }\r\n    }, \r\n    \r\n    /*, \r\n    {\r\n      dataField: 'vpc',\r\n      text: 'Vpc',\r\n      isDummyField: true,\r\n        formatter: (cellContent, row) => {\r\n          if (row.vpc && row.vpc.id) {\r\n            let vpc = '';\r\n            vpc='/account/' + row.vpc.account.id + '/vpcs/' + row.vpc.id; \r\n      \r\n            let vpcc = '';\r\n            vpcc = \"[Vpc:\" + row.vpc.id + \" Acc:\" + row.vpc.account.numAccount + \" Prd:\" + row.vpc.account.product.name  + \" Tri:\" + row.vpc.account.product.trigramme.name +\"]\";\r\n\r\n            return (\r\n              <a href={vpc}>{vpcc}</a>\r\n            );\r\n          }\r\n        }\r\n    }*/, \r\n    {\r\n      dataField: 'vpc.name',\r\n      text: 'Vpc',\r\n      //isDummyField: true,\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Vpc'\r\n      }),\r\n      sort: true,\r\n\r\n        formatter: (cellContent, row) => {\r\n          if (row.vpc && row.vpc.id) {\r\n            let vpc = '';\r\n            vpc=FRT_BASE_URL + '/account/' + row.vpc.account.id + '/vpcs/' + row.vpc.id; \r\n      \r\n            let vpcc = '';\r\n            vpcc = row.vpc.name;\r\n\r\n            return (\r\n              <a href={vpc}>{vpcc}</a>\r\n            );\r\n          }\r\n        }\r\n    }, \r\n    {\r\n      dataField: 'vpc.account.numAccount',\r\n      text: 'Account',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Account'\r\n      }),\r\n      sort: true,\r\n      isDummyField: true,\r\n        formatter: (cellContent, row) => {\r\n          if (row.vpc && row.vpc.id) {\r\n            let vpc = '';\r\n            vpc=FRT_BASE_URL + '/product/' + row.vpc.account.product.id + '/accounts/' + row.vpc.account.id; \r\n      \r\n            let vpcc = '';\r\n            vpcc = row.vpc.account.numAccount;\r\n\r\n            return (\r\n              <a href={vpc}>{vpcc}</a>\r\n            );\r\n          }\r\n        }\r\n    },\r\n    {\r\n      dataField: 'vpc.account.product.name',\r\n      text: 'Product',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Product'\r\n      }),\r\n      sort: true,\r\n      isDummyField: true,\r\n        formatter: (cellContent, row) => {\r\n          if (row.vpc && row.vpc.id) {\r\n            let vpc = '';\r\n            vpc=FRT_BASE_URL + '/trigramme/' + row.vpc.account.product.trigramme.id + '/products/' + row.vpc.account.product.id; \r\n      \r\n            let vpcc = '';\r\n            vpcc = row.vpc.account.product.name ;\r\n\r\n            return (\r\n              <a href={vpc}>{vpcc}</a>\r\n            );\r\n          }\r\n        }\r\n    }, \r\n    {\r\n      dataField: 'vpc.account.product.trigramme.name',\r\n      text: 'Trigramme',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Trigramme'\r\n      }),\r\n      sort: true,\r\n      isDummyField: true,\r\n        formatter: (cellContent, row) => {\r\n          if (row.vpc && row.vpc.id) {\r\n            let vpc = '';\r\n            vpc=FRT_BASE_URL + '/trigrammes/' + row.vpc.account.product.trigramme.id; \r\n      \r\n            let vpcc = '';\r\n            vpcc = row.vpc.account.product.trigramme.name ;\r\n\r\n            return (\r\n              <a href={vpc}>{vpcc}</a>\r\n            );\r\n          }\r\n        }\r\n    }, \r\n    {\r\n        dataField: 'vpc',\r\n        text: 'Action',\r\n        \r\n        isDummyField: true,\r\n          formatter: (cellContent, row) => {\r\n          \r\n            let isDisabled = false;\r\n            if(row.vpc) isDisabled=true;\r\n\r\n            return (\r\n                   <ButtonGroup>\r\n                    <Button size=\"sm\" color=\"secondary\" tag={Link} to={FRT_BASE_URL + \"/vpcmanages/\" + row.id + \"/subnetmanage\" }>Subnets Cidr</Button>&nbsp;&nbsp;\r\n                    <Button size=\"sm\" color=\"primary\" tag={Link} to={FRT_BASE_URL + \"/vpcmanage/\" + row.id}>Edit</Button>\r\n                    <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(row.id)}  disabled={isDisabled}>Delete</Button>\r\n                  </ButtonGroup>\r\n\r\n            );\r\n          }    \r\n    }\r\n    ];\r\n    \r\n    return (\r\n      \r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={FRT_BASE_URL + \"/vpcmanage/new\"}>Add Cidr</Button>\r\n          </div>\r\n          <h3>Cidr</h3>\r\n          <BootstrapTable  \r\n            headerClasses=\"header-class\" \r\n            keyField='id' \r\n            data={ cidrs } \r\n            columns={ columns }  \r\n            bordered={ false } \r\n            defaultSorted={ defaultSorted } \r\n            filter={ filterFactory() } \r\n            pagination={ paginationFactory() }\r\n            \r\n            hover\r\n\r\n          />\r\n        </Container>\r\n\r\n      </div>\r\n      \r\n    );\r\n    \r\n    /*\r\n    const cidrList = cidrs.map(cidr => {\r\n      \r\n      let vpc = '';\r\n      if(cidr.vpc) vpc='/account/' + cidr.vpc.account.id + '/vpcs/' + cidr.vpc.id; \r\n      let vpcc = '';\r\n      if(cidr.vpc) vpcc = \"[Vpc:\" + cidr.vpc.id + \" Acc:\" + cidr.vpc.account.numAccount + \" Prd:\" + cidr.vpc.account.product.name  + \" Tri:\" + cidr.vpc.account.product.trigramme.name +\"]\";\r\n\r\n      let isDisabled = false;\r\n      if(cidr.vpc) isDisabled=true;\r\n\r\n      /*return <tr key={cidr.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{cidr.id}</td>\r\n\r\n\t\t    <td>{cidr.cidr}</td>\r\n        <td>{cidr.env}</td>\r\n\t\t    <td>{cidr.text}</td>\r\n        <td><a href={vpc}>{vpcc}</a></td>\r\n\t\t\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/vpcmanage/\" + cidr.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(cidr.id)}  disabled={isDisabled}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n      \r\n    });\r\n    \r\n    \r\n\r\n    return (\r\n      \r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to=\"/vpcmanage/new\">Add Cidr</Button>\r\n          </div>\r\n          <h3>Cidr</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"5%\">Id</th> \r\n              <th width=\"5%\">Cidr</th> \r\n              <th width=\"5%\">Env</th>\r\n\t\t\t        <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Vpc</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {cidrList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n    */\r\n  }\r\n}\r\n\r\nexport default VpcManageList;"]},"metadata":{},"sourceType":"module"}