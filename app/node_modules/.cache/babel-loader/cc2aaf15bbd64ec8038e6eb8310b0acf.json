{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\StorageAclEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar StorageAclEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StorageAclEdit, _Component);\n\n  function StorageAclEdit(props) {\n    var _this;\n\n    _classCallCheck(this, StorageAclEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StorageAclEdit).call(this, props));\n    _this.emptyItem = {\n      externalAccount: '',\n      accountId: '',\n      storage: {},\n      type: 'Internal',\n      read: false,\n      write: false,\n      listObject: false,\n      writeObject: false,\n      groupe: '',\n      store: '',\n      touched: {\n        externalAccount: false,\n        accountId: false,\n        type: false,\n        groupe: false,\n        store: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(StorageAclEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var storageAcl, item, storage, _storageAcl;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/storageAcls/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                storageAcl = _context.sent;\n                storageAcl.touched = {\n                  externalAccount: false,\n                  accountId: false,\n                  type: false,\n                  groupe: false,\n                  store: false\n                };\n                this.setState({\n                  item: storageAcl\n                });\n                item = _objectSpread({}, this.state.item);\n                item.accountId = item.storage.account.id;\n                item.groupe = 'Everyone';\n                item.store = 'Log Delivery';\n                this.setState({\n                  item: item\n                });\n                _context.next = 27;\n                break;\n\n              case 15:\n                _context.next = 17;\n                return fetch(\"\".concat(API_BASE_URL, \"/storages/\").concat(this.props.match.params.ids));\n\n              case 17:\n                _context.next = 19;\n                return _context.sent.json();\n\n              case 19:\n                storage = _context.sent;\n                _storageAcl = {\n                  externalAccount: '',\n                  accountId: '',\n                  storage: {},\n                  type: 'Internal',\n                  read: false,\n                  write: false,\n                  listObject: false,\n                  writeObject: false,\n                  groupe: '',\n                  store: '',\n                  touched: {\n                    externalAccount: false,\n                    accountId: false,\n                    type: false,\n                    groupe: false,\n                    store: false\n                  }\n                };\n                _storageAcl.storage = storage;\n                _storageAcl.accountId = storage.account.id;\n                _storageAcl.touched = {\n                  externalAccount: false,\n                  accountId: false,\n                  type: false,\n                  groupe: false,\n                  store: false\n                };\n                _storageAcl.groupe = 'Everyone';\n                _storageAcl.store = 'Log Delivery';\n                this.setState({\n                  item: _storageAcl\n                });\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n      /*if(name === 'type')\r\n      {\r\n        item.type = (target.checked) ? true: false;\r\n      }*/\n\n      if (name === 'read') {\n        item.read = target.checked ? true : false;\n      }\n\n      if (name === 'write') {\n        item.write = target.checked ? true : false;\n      }\n\n      if (name === 'listObject') {\n        item.listObject = target.checked ? true : false;\n      }\n\n      if (name === 'writeObject') {\n        item.writeObject = target.checked ? true : false;\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  externalAccount: true,\n                  accountId: true,\n                  type: true,\n                  groupe: true,\n                  store: true\n                };\n                errors = this.validate(item.externalAccount, item.accountId, item.type, item.groupe, item.store);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = FRT_BASE_URL + '/storage/' + item.storage.id + '/storageacls';\n                item.storage = {\n                  id: item.storage.id\n                };\n\n                if (item.type === 'Internal') {\n                  item.externalAccount = '';\n                  item.account = {\n                    id: item.accountId\n                  };\n                  item.groupe = '';\n                  item.store = '';\n                } else if (item.type === 'External') {\n                  item.accountId = null;\n                  item.groupe = '';\n                  item.store = '';\n                } else if (item.type === 'Group') {\n                  item.accountId = null;\n                  item.externalAccount = '';\n                  item.store = '';\n                } else if (item.type === 'S3') {\n                  item.accountId = null;\n                  item.externalAccount = '';\n                  item.groupe = '';\n                }\n\n                _context2.next = 13;\n                return fetch(item.id ? API_BASE_URL + '/storages/' + item.storage.id + '/storageAcls/' + item.id : API_BASE_URL + '/storages/' + item.storage.id + '/storageAcls', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 13:\n                this.props.history.push(hist);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(externalAccount, accountId, type, groupe, store) {\n      var errors = {\n        externalAccount: '',\n        accountId: '',\n        type: '',\n        groupe: '',\n        store: ''\n      };\n\n      if (this.state.item.type === 'External' && this.state.item.touched.externalAccount && externalAccount.length === 0) {\n        errors.externalAccount = 'External Account should not be null';\n        return errors;\n      } else if (this.state.item.type === 'Internal' && this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'Account should not be null';\n        return errors;\n      } else if (this.state.item.type === 'Group' && this.state.item.touched.groupe && groupe.length === 0) {\n        errors.groupe = 'Group should not be null';\n        return errors;\n      } else if (this.state.item.type === 'S3' && this.state.item.touched.store && store.length === 0) {\n        errors.store = 'S3 delivery should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, item.id ? 'Edit S3 Acl' : 'Add S3 Acl');\n      var errors = this.validate(item.externalAccount, item.accountId, item.type, item.groupe, item.store);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = FRT_BASE_URL + \"/storage/\" + item.storage.id + \"/storageacls\";\n      var storage = null;\n      storage = React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"storageId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Storage: \", item.storage.name), React.createElement(Input, {\n        type: \"text\",\n        name: \"storageId\",\n        id: \"storageId\",\n        value: item.storage.id || '',\n        disabled: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }));\n      var account = item.type === 'Internal' ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Access for your AWS account (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: item.accountId || '',\n        placeholder: \"Enter accountId\",\n        disabled: \"true\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        autoComplete: \"accountId\",\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, errors.accountId)) : '';\n      var externalAccount = item.type === 'External' ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"externalAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Access for other AWS accounts (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"externalAccount\",\n        id: \"externalAccount\",\n        value: item.externalAccount || '',\n        placeholder: \"Enter externalAccount\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('externalAccount'),\n        autoComplete: \"externalAccount\",\n        valid: errors.externalAccount === '',\n        invalid: errors.externalAccount !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, errors.externalAccount)) : '';\n      var groupe = item.type === 'Group' ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"groupe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Public access (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"groupe\",\n        id: \"groupe\",\n        value: item.groupe || '',\n        placeholder: \"Enter groupe\",\n        disabled: \"true\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('groupe'),\n        autoComplete: \"groupe\",\n        valid: errors.groupe === '',\n        invalid: errors.groupe !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, errors.groupe)) : '';\n      var store = item.type === 'S3' ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"store\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"S3 log delivery groupe (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"store\",\n        id: \"store\",\n        value: item.store || '',\n        placeholder: \"Enter store\",\n        disabled: \"true\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('store'),\n        autoComplete: \"store\",\n        valid: errors.store === '',\n        invalid: errors.store !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, errors.store)) : '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, storage, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"type(*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"type\",\n        id: \"type\",\n        value: item.type,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('type'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Internal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Internal Account\"), React.createElement(\"option\", {\n        value: \"External\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"External Account\"), React.createElement(\"option\", {\n        value: \"Group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Public access\"), React.createElement(\"option\", {\n        value: \"S3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"S3 log delivery group\"))), externalAccount, account, groupe, store, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"listObject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"List Object:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"listObject\",\n        id: \"listObject\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('listObject'),\n        checked: item.listObject === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"writeObject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Write Object:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"writeObject\",\n        id: \"writeObject\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('writeObject'),\n        checked: item.writeObject === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Read bucket permissions:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"read\",\n        id: \"read\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('read'),\n        checked: item.read === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"write\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Write bucket permissions:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"write\",\n        id: \"write\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('write'),\n        checked: item.write === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return StorageAclEdit;\n}(Component);\n\nexport default withRouter(StorageAclEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\StorageAclEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","FRT_BASE_URL","StorageAclEdit","props","emptyItem","externalAccount","accountId","storage","type","read","write","listObject","writeObject","groupe","store","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","storageAcl","account","ids","event","target","value","name","checked","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","push","length","title","canc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass StorageAclEdit extends Component {\r\n\r\n  emptyItem = {\r\n    externalAccount: '',\r\n    accountId: '',\r\n    storage: {},\r\n    type: 'Internal',\r\n    read: false,\r\n    write: false,\r\n    listObject: false,\r\n    writeObject: false,\r\n    groupe:'',\r\n    store:'',\r\n    touched: {\r\n      externalAccount: false,\r\n      accountId: false,\r\n      type: false,\r\n      groupe: false,\r\n      store:false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const storageAcl = await (await fetch(`${API_BASE_URL}/storageAcls/${this.props.match.params.id}`)).json();\r\n      storageAcl.touched = {\r\n        externalAccount: false,\r\n        accountId: false,\r\n        type: false,\r\n        groupe: false,\r\n        store:false\r\n      };\r\n      this.setState({item: storageAcl});\r\n      let item = {...this.state.item};\r\n      item.accountId = item.storage.account.id;\r\n      item.groupe = 'Everyone';\r\n      item.store  = 'Log Delivery';\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const storage = await (await fetch(`${API_BASE_URL}/storages/${this.props.match.params.ids}`)).json();\r\n      const storageAcl = {\r\n        externalAccount: '',\r\n        accountId: '',\r\n        storage: {},\r\n        type: 'Internal',\r\n        read: false,\r\n        write: false,\r\n        listObject: false,\r\n        writeObject: false,\r\n        groupe:'',\r\n        store:'',\r\n        touched: {\r\n          externalAccount: false,\r\n          accountId: false,\r\n          type: false,\r\n          groupe: false,\r\n          store:false\r\n        }\r\n      };\r\n      storageAcl.storage = storage;\r\n      storageAcl.accountId = storage.account.id;\r\n      storageAcl.touched = {\r\n          externalAccount: false,\r\n          accountId: false,\r\n          type: false,\r\n          groupe: false,\r\n          store:false\r\n      };\r\n      storageAcl.groupe = 'Everyone';\r\n      storageAcl.store  = 'Log Delivery';\r\n      this.setState({item: storageAcl});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    /*if(name === 'type')\r\n    {\r\n      item.type = (target.checked) ? true: false;\r\n    }*/\r\n    if(name === 'read')\r\n    {\r\n      item.read = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'write')\r\n    {\r\n      item.write = (target.checked) ? true: false;\r\n    }\r\n\r\n    if(name === 'listObject')\r\n    {\r\n      item.listObject = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'writeObject')\r\n    {\r\n      item.writeObject = (target.checked) ? true: false;\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          externalAccount: true,\r\n          accountId: true,\r\n          type: true,\r\n          groupe: true,\r\n          store:true\r\n    };\r\n    const errors = this.validate(item.externalAccount, item.accountId, item.type, item.groupe, item.store);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= FRT_BASE_URL + '/storage/' + item.storage.id +'/storageacls'; \r\n\r\n    item.storage={id: item.storage.id};\r\n    \r\n    if(item.type === 'Internal')\r\n    {\r\n      item.externalAccount = '';\r\n      item.account = {id: item.accountId};\r\n      item.groupe = '';\r\n      item.store = '';\r\n    }\r\n    else if(item.type === 'External')\r\n    {\r\n      item.accountId = null;\r\n      item.groupe = '';\r\n      item.store = '';\r\n    }\r\n    else if(item.type === 'Group')\r\n    {\r\n      item.accountId = null;\r\n      item.externalAccount = '';\r\n      item.store = '';\r\n    }\r\n    else if(item.type === 'S3')\r\n    {\r\n      item.accountId = null;\r\n      item.externalAccount = '';\r\n      item.groupe = '';\r\n    }\r\n    \r\n\r\n        \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/storages/' + (item.storage.id) + '/storageAcls/'+(item.id) : API_BASE_URL + '/storages/' + item.storage.id + '/storageAcls', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(externalAccount, accountId, type, groupe, store) {\r\n\r\n    const errors = {\r\n      externalAccount: '',\r\n      accountId: '',\r\n      type: '',\r\n      groupe: '',\r\n      store: ''\r\n    };\r\n    \r\n    if(this.state.item.type === 'External' && this.state.item.touched.externalAccount && externalAccount.length === 0){\r\n      errors.externalAccount = 'External Account should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.type === 'Internal' && this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Account should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.type === 'Group' && this.state.item.touched.groupe && groupe.length === 0){\r\n      errors.groupe = 'Group should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.type === 'S3' && this.state.item.touched.store && store.length === 0){\r\n      errors.store = 'S3 delivery should not be null';\r\n      return errors;\r\n    } \r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit S3 Acl' : 'Add S3 Acl'}</h2>;\r\n\r\n    const errors = this.validate(item.externalAccount, item.accountId, item.type, item.groupe, item.store);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = FRT_BASE_URL + \"/storage/\" + item.storage.id + \"/storageacls\";\r\n\r\n    let storage = null;\r\n    storage = <FormGroup>\r\n            <Label for=\"storageId\">Storage: {item.storage.name}</Label>\r\n            <Input type=\"text\" name=\"storageId\" id=\"storageId\" value={item.storage.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n    let account = (item.type === 'Internal') ? <FormGroup>\r\n            <Label for=\"accountId\">Access for your AWS account (*)</Label>\r\n            <Input type=\"text\" name=\"accountId\" id=\"accountId\" value={item.accountId || ''} placeholder=\"Enter accountId\" disabled='true'\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('accountId')} autoComplete=\"accountId\"\r\n                   valid={errors.accountId === ''}\r\n                   invalid={errors.accountId !== ''}\r\n            />\r\n           <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup> : '' ;\r\n\r\n    let externalAccount = (item.type  === 'External') ? <FormGroup>\r\n            <Label for=\"externalAccount\">Access for other AWS accounts (*)</Label>\r\n            <Input type=\"text\" name=\"externalAccount\" id=\"externalAccount\" value={item.externalAccount || ''} placeholder=\"Enter externalAccount\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('externalAccount')} autoComplete=\"externalAccount\"\r\n                   valid={errors.externalAccount === ''}\r\n                   invalid={errors.externalAccount !== ''}\r\n            />\r\n           <FormFeedback>{errors.externalAccount}</FormFeedback>\r\n          </FormGroup> : '' ;\r\n\r\n    let groupe = (item.type  === 'Group') ? <FormGroup>\r\n            <Label for=\"groupe\">Public access (*)</Label>\r\n            <Input type=\"text\" name=\"groupe\" id=\"groupe\" value={item.groupe || ''} placeholder=\"Enter groupe\" disabled='true'\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('groupe')} autoComplete=\"groupe\"\r\n                   valid={errors.groupe === ''}\r\n                   invalid={errors.groupe !== ''}\r\n            />\r\n           <FormFeedback>{errors.groupe}</FormFeedback>\r\n          </FormGroup> : '' ;\r\n    let store = (item.type  === 'S3') ? <FormGroup>\r\n            <Label for=\"store\">S3 log delivery groupe (*)</Label>\r\n            <Input type=\"text\" name=\"store\" id=\"store\" value={item.store || ''} placeholder=\"Enter store\" disabled='true'\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('store')} autoComplete=\"store\"\r\n                   valid={errors.store === ''}\r\n                   invalid={errors.store !== ''}\r\n            />\r\n           <FormFeedback>{errors.store}</FormFeedback>\r\n          </FormGroup> : '' ;\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n        {storage}\r\n\r\n          <FormGroup>\r\n            <Label for=\"type\">type(*)</Label>\r\n            <Input type=\"select\" name=\"type\" id=\"type\"  value={item.type} onChange={this.handleChange} onBlur={this.handleBlur('type')}\r\n            >\r\n              <option value=\"Internal\">Internal Account</option>\r\n              <option value=\"External\">External Account</option>\r\n              <option value=\"Group\">Public access</option>\r\n              <option value=\"S3\">S3 log delivery group</option>\r\n            </Input>\r\n             \r\n          </FormGroup>\r\n\r\n          \r\n          {externalAccount}\r\n          {account}\r\n          {groupe}\r\n          {store}\r\n\r\n\r\n\r\n          <FormGroup > \r\n            <Label for=\"listObject\">List Object:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"listObject\" id=\"listObject\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('listObject')} \r\n                    checked={item.listObject === true}/>\r\n          </FormGroup>\r\n          <FormGroup > \r\n            <Label for=\"writeObject\">Write Object:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"writeObject\" id=\"writeObject\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('writeObject')} \r\n                    checked={item.writeObject === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"read\">Read bucket permissions:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"read\" id=\"read\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('read')} \r\n                    checked={item.read === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"write\">Write bucket permissions:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"write\" id=\"write\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('write')} \r\n                    checked={item.write === true}/>\r\n          </FormGroup>\r\n\r\n          \r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(StorageAclEdit);"]},"metadata":{},"sourceType":"module"}