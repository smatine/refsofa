{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\LaunchConfigurationStorageEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL } from './constants';\n\nvar LaunchConfigurationStorageEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LaunchConfigurationStorageEdit, _Component);\n\n  function LaunchConfigurationStorageEdit(props) {\n    var _this;\n\n    _classCallCheck(this, LaunchConfigurationStorageEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LaunchConfigurationStorageEdit).call(this, props));\n    _this.emptyItem = {\n      volumeType: '',\n      device: '',\n      snapshot: '',\n      size: '',\n      volume: '',\n      iops: '',\n      throughput: '',\n      deleteOnTermination: true,\n      encrypted: '',\n      launchConfiguration: {},\n      touched: {\n        volumeType: false,\n        device: false,\n        snapshot: false,\n        volume: false,\n        iops: false,\n        throughput: false,\n        encrypted: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LaunchConfigurationStorageEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var launchConfigurationStorage, launchConfiguration, _launchConfigurationStorage;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/launchConfigurationStorages/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                launchConfigurationStorage = _context.sent;\n                launchConfigurationStorage.touched = {\n                  volumeType: false,\n                  device: false,\n                  snapshot: false,\n                  volume: false,\n                  iops: false,\n                  throughput: false,\n                  encrypted: false\n                };\n                this.setState({\n                  item: launchConfigurationStorage\n                });\n                _context.next = 19;\n                break;\n\n              case 10:\n                _context.next = 12;\n                return fetch(\"\".concat(API_BASE_URL, \"/launchConfigurations/\").concat(this.props.match.params.idl));\n\n              case 12:\n                _context.next = 14;\n                return _context.sent.json();\n\n              case 14:\n                launchConfiguration = _context.sent;\n                _launchConfigurationStorage = {\n                  volumeType: '',\n                  device: '',\n                  snapshot: '',\n                  size: '',\n                  volume: '',\n                  iops: '',\n                  throughput: '',\n                  deleteOnTermination: true,\n                  encrypted: '',\n                  launchConfiguration: {},\n                  touched: {\n                    volumeType: false,\n                    device: false,\n                    snapshot: false,\n                    volume: false,\n                    iops: false,\n                    throughput: false,\n                    encrypted: false\n                  }\n                };\n                _launchConfigurationStorage.launchConfiguration = launchConfiguration;\n                _launchConfigurationStorage.touched = {\n                  volumeType: false,\n                  device: false,\n                  snapshot: false,\n                  volume: false,\n                  iops: false,\n                  throughput: false,\n                  encrypted: false\n                };\n                this.setState({\n                  item: _launchConfigurationStorage\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  volumeType: true,\n                  device: true,\n                  snapshot: true,\n                  volume: true,\n                  iops: true,\n                  throughput: true,\n                  encrypted: true\n                };\n                errors = this.validate(item.volumeType, item.device, item.snapshot, item.volume, item.iops, item.throughput, item.encrypted);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/launchConfiguration/' + item.launchConfiguration.id + '/launchConfigurationStorages';\n                item.launchConfiguration = {\n                  id: item.launchConfiguration.id\n                }; //return;\n\n                _context2.next = 12;\n                return fetch(item.id ? API_BASE_URL + '/launchConfigurations/' + item.launchConfiguration.id + '/launchConfigurationStorages/' + item.id : API_BASE_URL + '/launchConfigurations/' + item.launchConfiguration.id + '/launchConfigurationStorages', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 12:\n                this.props.history.push(hist);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(volumeType, device, snapshot, volume, iops, throughput, encrypted) {\n      var errors = {\n        volumeType: '',\n        device: '',\n        snapshot: '',\n        volume: '',\n        iops: '',\n        throughput: '',\n        encrypted: ''\n      };\n\n      if (this.state.item.touched.volumeType && volumeType.length === 0) {\n        errors.volumeType = 'volumeType should not be null';\n        return errors;\n      } else if (this.state.item.touched.device && device.length === 0) {\n        errors.device = 'device should not be null';\n        return errors;\n      } else if (this.state.item.touched.snapshot && snapshot.length === 0) {\n        errors.snapshot = 'snapshot should not be null';\n        return errors;\n      } else if (this.state.item.touched.volume && volume.length === 0) {\n        errors.volume = 'volume should not be null';\n        return errors;\n      } else if (this.state.item.touched.iops && iops.length === 0) {\n        errors.iops = 'iops should not be null';\n        return errors;\n      } else if (this.state.item.touched.throughput && throughput.length === 0) {\n        errors.throughput = 'throughput should not be null';\n        return errors;\n      } else if (this.state.item.touched.encrypted && encrypted.length === 0) {\n        errors.encrypted = 'encrypted should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, item.id ? 'Edit Ec2 Storage' : 'Add Ec2 Storage');\n      var errors = this.validate(item.volumeType, item.device, item.snapshot, item.volume, item.iops, item.throughput, item.encrypted);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/launchconfiguration/\" + item.launchConfiguration.id + \"/launchConfigurationStorages\";\n      var launchConfiguration = null;\n      launchConfiguration = React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"launchConfigurationId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Ec2: \", item.launchConfiguration.id), React.createElement(Input, {\n        type: \"text\",\n        name: \"launchConfigurationId\",\n        id: \"launchConfigurationId\",\n        value: item.launchConfiguration.id || '',\n        disabled: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }));\n      var device = null;\n      device = item.volumeType === 'Root' ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"device\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Device (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"device\",\n        id: \"device\",\n        value: item.device || '',\n        placeholder: \"Enter device\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('device'),\n        valid: errors.device === '',\n        invalid: errors.device !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"/dev/xvda\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"/dev/xvda\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, errors.device)) : React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \" \", React.createElement(Label, {\n        for: \"device\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Device (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"device\",\n        id: \"device\",\n        value: item.device || '',\n        placeholder: \"Enter device\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('device'),\n        valid: errors.device === '',\n        invalid: errors.device !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"/dev/sdb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"/dev/sdb\"), React.createElement(\"option\", {\n        value: \"/dev/sdc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"/dev/sdc\"), React.createElement(\"option\", {\n        value: \"/dev/sdd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"/dev/sdd\"), React.createElement(\"option\", {\n        value: \"/dev/sde\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"/dev/sde\"), React.createElement(\"option\", {\n        value: \"/dev/sdf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"/dev/sdf\"), React.createElement(\"option\", {\n        value: \"/dev/sdg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"/dev/sdg\"), React.createElement(\"option\", {\n        value: \"/dev/sdh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"/dev/sdh\"), React.createElement(\"option\", {\n        value: \"/dev/sdi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"/dev/sdi\"), React.createElement(\"option\", {\n        value: \"/dev/sdj\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"/dev/sdj\"), React.createElement(\"option\", {\n        value: \"/dev/sdk\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"/dev/sdk\"), React.createElement(\"option\", {\n        value: \"/dev/sdl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"/dev/sdl\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, errors.device));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, launchConfiguration, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"volumeType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Volume Type (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"volumeType\",\n        id: \"volumeType\",\n        value: item.volumeType || '',\n        placeholder: \"Enter volumeType\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('volumeType'),\n        valid: errors.volumeType === '',\n        invalid: errors.volumeType !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"Root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Root\"), React.createElement(\"option\", {\n        value: \"EBS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"EBS\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, errors.volumeType)), device, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"snapshot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Snapshot (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"snapshot\",\n        id: \"snapshot\",\n        value: item.snapshot || '',\n        placeholder: \"Enter snapshot\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('snapshot'),\n        autoComplete: \"snapshot\",\n        valid: errors.snapshot === '',\n        invalid: errors.snapshot !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, errors.snapshot)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Size (*)\"), React.createElement(Input, {\n        type: \"number\",\n        name: \"size\",\n        id: \"size\",\n        value: item.size || '',\n        placeholder: \"Enter size\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('size'),\n        autoComplete: \"size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"volume\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Volume Type(*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"volume\",\n        id: \"volume\",\n        value: item.volume || '',\n        placeholder: \"Enter volume\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('volume'),\n        autoComplete: \"volume\",\n        valid: errors.volume === '',\n        invalid: errors.volume !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"gp2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"General Purpose SSD (gp2)\"), React.createElement(\"option\", {\n        value: \"io1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Provisioned IOPS SSD (io1)\"), React.createElement(\"option\", {\n        value: \"standard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Magnetic (standard)\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, errors.volume)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"iops\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"Iops (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"iops\",\n        id: \"iops\",\n        value: item.iops || '',\n        placeholder: \"Enter iops\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('iops'),\n        autoComplete: \"iops\",\n        valid: errors.iops === '',\n        invalid: errors.iops !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, errors.iops)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"throughput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Throughput (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"throughput\",\n        id: \"throughput\",\n        value: item.throughput || '',\n        placeholder: \"Enter throughput\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('throughput'),\n        autoComplete: \"throughput\",\n        valid: errors.throughput === '',\n        invalid: errors.throughput !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, errors.throughput)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"encrypted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Encrypted (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"encrypted\",\n        id: \"encrypted\",\n        value: item.encrypted || '',\n        placeholder: \"Enter encrypted\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('encrypted'),\n        autoComplete: \"encrypted\",\n        valid: errors.encrypted === '',\n        invalid: errors.encrypted !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, errors.encrypted)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return LaunchConfigurationStorageEdit;\n}(Component);\n\nexport default withRouter(LaunchConfigurationStorageEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\LaunchConfigurationStorageEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","LaunchConfigurationStorageEdit","props","emptyItem","volumeType","device","snapshot","size","volume","iops","throughput","deleteOnTermination","encrypted","launchConfiguration","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","launchConfigurationStorage","idl","event","target","value","name","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","push","length","title","canc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\n\r\nclass LaunchConfigurationStorageEdit extends Component {\r\n\r\n  emptyItem = {\r\n    volumeType: '',\r\n    device: '',\r\n    snapshot: '',\r\n    size: '',\r\n    volume: '', \r\n    iops: '', \r\n    throughput: '', \r\n    deleteOnTermination: true, \r\n    encrypted: '',\r\n    launchConfiguration: {},\r\n    touched: {\r\n      volumeType:false,\r\n      device: false,\r\n      snapshot: false,\r\n      volume: false, \r\n      iops: false,\r\n      throughput: false,  \r\n      encrypted: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const launchConfigurationStorage = await (await fetch(`${API_BASE_URL}/launchConfigurationStorages/${this.props.match.params.id}`)).json();\r\n      launchConfigurationStorage.touched = {\r\n        volumeType:false,\r\n        device: false,\r\n        snapshot: false,\r\n        volume: false, \r\n        iops: false,\r\n        throughput: false,  \r\n        encrypted: false\r\n      };\r\n      this.setState({item: launchConfigurationStorage});\r\n      \r\n    }\r\n    else {\r\n      const launchConfiguration = await (await fetch(`${API_BASE_URL}/launchConfigurations/${this.props.match.params.idl}`)).json();\r\n      const launchConfigurationStorage = {\r\n        volumeType: '',\r\n        device: '',\r\n        snapshot: '',\r\n        size: '',\r\n        volume: '', \r\n        iops: '', \r\n        throughput: '', \r\n        deleteOnTermination: true, \r\n        encrypted: '',\r\n        launchConfiguration: {},\r\n        touched: {\r\n          volumeType:false,\r\n          device: false,\r\n          snapshot: false,\r\n          volume: false, \r\n          iops: false,\r\n          throughput: false,  \r\n          encrypted: false\r\n        }\r\n      };\r\n      launchConfigurationStorage.launchConfiguration = launchConfiguration;\r\n      launchConfigurationStorage.touched = {\r\n          volumeType:false,\r\n          device: false,\r\n          snapshot: false,\r\n          volume: false,  \r\n          iops: false,\r\n          throughput: false,  \r\n          encrypted: false\r\n      };\r\n      this.setState({item: launchConfigurationStorage});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      volumeType:true, \r\n      device: true,\r\n      snapshot: true,\r\n      volume: true, \r\n      iops: true,\r\n      throughput: true,  \r\n      encrypted: true\r\n    };\r\n    const errors = this.validate(item.volumeType, item.device, item.snapshot, item.volume,  item.iops, item.throughput, item.encrypted);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/launchConfiguration/' + item.launchConfiguration.id +'/launchConfigurationStorages'; \r\n\r\n    item.launchConfiguration={id: item.launchConfiguration.id};\r\n    \r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/launchConfigurations/' + (item.launchConfiguration.id) + '/launchConfigurationStorages/'+(item.id) : API_BASE_URL + '/launchConfigurations/' + item.launchConfiguration.id + '/launchConfigurationStorages', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(volumeType, device, snapshot,  volume,  iops, throughput, encrypted) {\r\n\r\n    const errors = {\r\n      volumeType:'', \r\n      device: '',\r\n      snapshot: '',\r\n      volume: '', \r\n      iops: '',\r\n      throughput: '',  \r\n      encrypted: ''\r\n    };\r\n\r\n    \r\n    if(this.state.item.touched.volumeType && volumeType.length === 0){\r\n      errors.volumeType = 'volumeType should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.device && device.length === 0){\r\n      errors.device = 'device should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.snapshot && snapshot.length === 0){\r\n      errors.snapshot = 'snapshot should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.volume && volume.length === 0){\r\n      errors.volume = 'volume should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.iops && iops.length === 0){\r\n      errors.iops = 'iops should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.throughput && throughput.length === 0){\r\n      errors.throughput = 'throughput should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.encrypted && encrypted.length === 0){\r\n      errors.encrypted = 'encrypted should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Ec2 Storage' : 'Add Ec2 Storage'}</h2>;\r\n\r\n    const errors = this.validate(item.volumeType, item.device, item.snapshot, item.volume, item.iops, item.throughput, item.encrypted);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/launchconfiguration/\" + item.launchConfiguration.id + \"/launchConfigurationStorages\";\r\n\r\n    let launchConfiguration = null;\r\n    launchConfiguration = <FormGroup>\r\n            <Label for=\"launchConfigurationId\">Ec2: {item.launchConfiguration.id}</Label>\r\n            <Input type=\"text\" name=\"launchConfigurationId\" id=\"launchConfigurationId\" value={item.launchConfiguration.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n    let device = null;\r\n    device = (item.volumeType === 'Root') ?  <FormGroup>\r\n            <Label for=\"device\">Device (*)</Label>            \r\n            <Input type=\"select\" name=\"device\" id=\"device\" value={item.device || ''} placeholder=\"Enter device\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('device')} \r\n                   valid={errors.device === ''}\r\n                   invalid={errors.device !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"/dev/xvda\">/dev/xvda</option>\r\n            </Input>\r\n           <FormFeedback>{errors.device}</FormFeedback>\r\n          </FormGroup> : <FormGroup> <Label for=\"device\">Device (*)</Label>            \r\n            <Input type=\"select\" name=\"device\" id=\"device\" value={item.device || ''} placeholder=\"Enter device\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('device')} \r\n                   valid={errors.device === ''}\r\n                   invalid={errors.device !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"/dev/sdb\">/dev/sdb</option>\r\n              <option value=\"/dev/sdc\">/dev/sdc</option>\r\n              <option value=\"/dev/sdd\">/dev/sdd</option>\r\n              <option value=\"/dev/sde\">/dev/sde</option>\r\n              <option value=\"/dev/sdf\">/dev/sdf</option>\r\n              <option value=\"/dev/sdg\">/dev/sdg</option>\r\n              <option value=\"/dev/sdh\">/dev/sdh</option>\r\n              <option value=\"/dev/sdi\">/dev/sdi</option>\r\n              <option value=\"/dev/sdj\">/dev/sdj</option>\r\n              <option value=\"/dev/sdk\">/dev/sdk</option>\r\n              <option value=\"/dev/sdl\">/dev/sdl</option>\r\n            </Input>\r\n           <FormFeedback>{errors.device}</FormFeedback>\r\n          </FormGroup>;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          \r\n          {launchConfiguration}\r\n\r\n\r\n           <FormGroup>\r\n            <Label for=\"volumeType\">Volume Type (*)</Label>  \r\n            <Input type=\"select\" name=\"volumeType\" id=\"volumeType\" value={item.volumeType || ''} placeholder=\"Enter volumeType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('volumeType')} \r\n                   valid={errors.volumeType === ''}\r\n                   invalid={errors.volumeType !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"Root\">Root</option>\r\n              <option value=\"EBS\">EBS</option>\r\n            </Input>\r\n           <FormFeedback>{errors.volumeType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {device}\r\n\r\n          <FormGroup>\r\n            <Label for=\"snapshot\">Snapshot (*)</Label>\r\n            <Input type=\"text\" name=\"snapshot\" id=\"snapshot\" value={item.snapshot || ''} placeholder=\"Enter snapshot\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('snapshot')} autoComplete=\"snapshot\"\r\n                   valid={errors.snapshot === ''}\r\n                   invalid={errors.snapshot !== ''}\r\n            />\r\n           <FormFeedback>{errors.snapshot}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"size\">Size (*)</Label>\r\n            <Input type=\"number\" name=\"size\" id=\"size\" value={item.size || ''} placeholder=\"Enter size\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('size')} autoComplete=\"size\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"volume\">Volume Type(*)</Label>           \r\n            <Input type=\"select\" name=\"volume\" id=\"volume\" value={item.volume || ''} placeholder=\"Enter volume\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('volume')} autoComplete=\"volume\"\r\n                   valid={errors.volume === ''}\r\n                   invalid={errors.volume !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"gp2\">General Purpose SSD (gp2)</option>\r\n              <option value=\"io1\">Provisioned IOPS SSD (io1)</option>\r\n              <option value=\"standard\">Magnetic (standard)</option>\r\n            </Input>\r\n           <FormFeedback>{errors.volume}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"iops\">Iops (*)</Label>\r\n            <Input type=\"text\" name=\"iops\" id=\"iops\" value={item.iops || ''} placeholder=\"Enter iops\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('iops')} autoComplete=\"iops\"\r\n                    valid={errors.iops === ''}\r\n                   invalid={errors.iops !== ''}\r\n            />\r\n           <FormFeedback>{errors.iops}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"throughput\">Throughput (*)</Label>\r\n            <Input type=\"text\" name=\"throughput\" id=\"throughput\" value={item.throughput || ''} placeholder=\"Enter throughput\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('throughput')} autoComplete=\"throughput\"\r\n                   valid={errors.throughput === ''}\r\n                   invalid={errors.throughput !== ''}\r\n            />\r\n           <FormFeedback>{errors.throughput}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"encrypted\">Encrypted (*)</Label>\r\n            <Input type=\"text\" name=\"encrypted\" id=\"encrypted\" value={item.encrypted || ''} placeholder=\"Enter encrypted\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('encrypted')} autoComplete=\"encrypted\"\r\n                   valid={errors.encrypted === ''}\r\n                   invalid={errors.encrypted !== ''}\r\n            />\r\n           <FormFeedback>{errors.encrypted}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(LaunchConfigurationStorageEdit);"]},"metadata":{},"sourceType":"module"}