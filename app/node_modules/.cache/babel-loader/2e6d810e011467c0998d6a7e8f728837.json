{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\EndPointEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport Select from 'react-select';\nimport { API_BASE_URL } from './constants';\n\nvar EndPointEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EndPointEdit, _Component);\n\n  function EndPointEdit(props) {\n    var _this;\n\n    _classCallCheck(this, EndPointEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EndPointEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      account: {},\n      accounts: {},\n      accountId: '',\n      serviceName: '',\n      fullAccess: true,\n      vpc: {},\n      vpcs: [],\n      vpcId: '',\n      routeTable: {},\n      routeTables: [],\n      routeTableId: '',\n      policy: {},\n      policys: [],\n      policyId: '',\n      touched: {\n        name: false,\n        accountId: false,\n        vpcId: false,\n        serviceName: false,\n        routeTableId: false,\n        policyId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EndPointEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var endPoint, item, _endPoint;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 22;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/endPoints/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                endPoint = _context.sent;\n                endPoint.touched = {\n                  name: false,\n                  accountId: false,\n                  vpcId: false,\n                  serviceName: false,\n                  routeTableId: false,\n                  policyId: false\n                };\n                this.setState({\n                  item: endPoint\n                });\n                item = _objectSpread({}, this.state.item);\n                item.vpcId = endPoint.vpc.id;\n                item.accountId = endPoint.account.id;\n                item.routeTableId = endPoint.routeTable.id;\n                item.policyId = endPoint.policy ? endPoint.policy.id : '';\n                _context.next = 15;\n                return fetch(API_BASE_URL + '/accounts/' + endPoint.account.id + '/vpcs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  //let item = {...this.state.item};\n                  item.vpcs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 15:\n                _context.next = 17;\n                return fetch(API_BASE_URL + '/vpcs/' + endPoint.vpc.id + '/routeTables').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  //let item = {...this.state.item};\n                  item.routeTables = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 17:\n                _context.next = 19;\n                return fetch(API_BASE_URL + '/accounts/' + endPoint.account.id + '/policys').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  //let item = {...this.state.item};\n                  item.policys = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 19:\n                this.setState({\n                  item: item\n                });\n                _context.next = 25;\n                break;\n\n              case 22:\n                _endPoint = {\n                  name: '',\n                  account: {},\n                  accounts: {},\n                  accountId: '',\n                  serviceName: '',\n                  fullAccess: true,\n                  vpc: {},\n                  vpcs: [],\n                  vpcId: '',\n                  routeTable: {},\n                  routeTables: [],\n                  routeTableId: '',\n                  policy: {},\n                  policys: [],\n                  policyId: '',\n                  touched: {\n                    name: false,\n                    accountId: false,\n                    vpcId: false,\n                    serviceName: false,\n                    routeTableId: false,\n                    policyId: false\n                  }\n                };\n                _endPoint.touched = {\n                  name: false,\n                  accountId: false,\n                  vpcId: false,\n                  serviceName: false,\n                  routeTableId: false,\n                  policyId: false\n                };\n                this.setState({\n                  item: _endPoint\n                });\n\n              case 25:\n                _context.next = 27;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n\n      if (name === 'fAccess') {\n        if (value === 'Yes') {\n          item.fullAccess = true;\n        } else {\n          item.fullAccess = false;\n        }\n      }\n\n      if (name === 'accountId') {\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/vpcs').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.vpcs = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        item.vpcId = '';\n        item.policyId = '';\n        item.policys = [];\n        item.routeTableId = '';\n        item.routeTables = [];\n      }\n\n      if (name === 'vpcId') {\n        fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/routeTables').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.routeTables = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/policys').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.policys = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  accountId: true,\n                  vpcId: true,\n                  serviceName: true,\n                  routeTableId: true,\n                  policyId: true\n                };\n                errors = this.validate(item.name, item.vpcId, item.serviceName, item.routeTableId, item.policyId, item.accountId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/endpoints';\n                item.vpc = {\n                  id: item.vpcId\n                };\n                item.account = {\n                  id: item.accountId\n                };\n                item.routeTable = {\n                  id: item.routeTableId\n                };\n\n                if (item.fullAccess) {\n                  item.policy = null;\n                } else {\n                  item.policy = {\n                    id: item.policyId\n                  };\n                } //return;\n\n\n                _context2.next = 15;\n                return fetch(item.id ? API_BASE_URL + '/vpcs/' + item.vpc.id + '/endPoints/' + item.id : API_BASE_URL + '/vpcs/' + item.vpc.id + '/endPoints', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 15:\n                this.props.history.push(hist);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, vpcId, serviceName, routeTableId, policyId, accountId) {\n      var errors = {\n        name: '',\n        accountId: '',\n        vpcId: '',\n        serviceName: '',\n        routeTableId: '',\n        policyId: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'accountId should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.vpcId && vpcId.length === 0) {\n        errors.vpcId = 'Vpc should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.serviceName && serviceName.length === 0) {\n        errors.serviceName = 'serviceName should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.routeTableId && routeTableId.length === 0) {\n        errors.routeTableId = 'routeTableId should not be null';\n        return errors;\n      }\n\n      if (!this.state.item.fullAccess && this.state.item.touched.policyId && policyId.length === 0) {\n        errors.policyId = 'policyId should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, item.id ? 'Edit EndPoint' : 'Add EndPoint');\n      var errors = this.validate(item.name, item.vpcId, item.serviceName, item.routeTableId, item.policyId, item.accountId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/endpoints\";\n      var optas = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          optas.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount));\n        });\n      }\n\n      var account = item.accountId || '';\n      item.accountId = account;\n      var opts = [];\n\n      if (item.vpcs && item.vpcs.length) {\n        item.vpcs.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var vpc = item.vpcId || '';\n      item.vpcId = vpc;\n      var optsp = [];\n\n      if (item.policys && item.policys.length) {\n        item.policys.map(function (s) {\n          optsp.push(React.createElement(\"option\", {\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var policy = item.policyId || '';\n      item.policyId = policy;\n      var optsr = [];\n\n      if (item.routeTables && item.routeTables.length) {\n        item.routeTables.map(function (s) {\n          optsr.push(React.createElement(\"option\", {\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var routeTable = item.routeTableId || '';\n      item.routeTableId = routeTable;\n      var serviceName = item.serviceName || '';\n      item.serviceName = serviceName;\n      var fullAccess = item.fullAccess;\n      var policys = !item.fullAccess ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"policyId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Policy (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"policyId\",\n        id: \"policyId\",\n        value: policy,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('policyId'),\n        valid: errors.policyId === '',\n        invalid: errors.policyId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \"Choose\"), optsp), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, errors.policyId)) : '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: account,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \"Choose\"), optas), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"vpcId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \"Vpc (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"vpcId\",\n        id: \"vpcId\",\n        value: vpc,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('vpcId'),\n        valid: errors.vpcId === '',\n        invalid: errors.vpcId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, errors.vpcId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"serviceName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"Service Name (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"serviceName\",\n        id: \"serviceName\",\n        value: serviceName,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('serviceName'),\n        valid: errors.serviceName === '',\n        invalid: errors.serviceName !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"com.amazonaws.eu-west-1.s3:Gateway\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, \"com.amazonaws.eu-west-1.s3: Gateway\"), React.createElement(\"option\", {\n        value: \"com.amazonaws.eu-west-1.dynamodb:Gateway\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, \"com.amazonaws.eu-west-1.dynamodb: Gateway\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, errors.serviceName)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"routeTableId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, \"Route Table (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"routeTableId\",\n        id: \"routeTableId\",\n        value: routeTable,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('routeTableId'),\n        valid: errors.routeTableId === '',\n        invalid: errors.routeTableId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, \"Choose\"), optsr), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, errors.routeTableId)), React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"fAccess\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, \"Access (*)\"), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"fAccess\",\n        id: \"fAccess\",\n        value: \"Yes\",\n        checked: fullAccess === true,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('fAccess'),\n        autoComplete: \"fAccess\",\n        valid: errors.fAccess === '',\n        invalid: errors.fAccess !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }), ' ', \"Yes\")), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"fAccess\",\n        id: \"fAccess\",\n        value: \"No\",\n        checked: fullAccess === false,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('fAccess'),\n        autoComplete: \"fAccess\",\n        valid: errors.fAccess === '',\n        invalid: errors.fAccess !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }), ' ', \"No\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, errors.fAccess)), policys, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return EndPointEdit;\n}(Component);\n\nexport default withRouter(EndPointEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\EndPointEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","Select","API_BASE_URL","EndPointEdit","props","emptyItem","name","account","accounts","accountId","serviceName","fullAccess","vpc","vpcs","vpcId","routeTable","routeTables","routeTableId","policy","policys","policyId","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","endPoint","then","result","jsonResult","event","target","value","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","push","length","title","canc","optas","map","s","numAccount","opts","optsp","optsr","fAccess"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass EndPointEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    serviceName: '', \r\n    fullAccess: true,\r\n\t  vpc: {},\r\n    vpcs: [],\r\n  \tvpcId : '',\r\n    routeTable: {},\r\n    routeTables: [],\r\n    routeTableId : '',\r\n    policy: {},\r\n    policys: [],\r\n    policyId : '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      serviceName: false,\r\n      routeTableId: false,\r\n      policyId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const endPoint = await (await fetch(`${API_BASE_URL}/endPoints/${this.props.match.params.id}`)).json();\r\n      endPoint.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        serviceName: false,\r\n        routeTableId: false,\r\n        policyId: false\r\n      };\r\n      this.setState({item: endPoint});\r\n      \r\n      let item = {...this.state.item};\r\n      item.vpcId = endPoint.vpc.id;\r\n      item.accountId = endPoint.account.id;\r\n      item.routeTableId = endPoint.routeTable.id;\r\n      item.policyId = (endPoint.policy) ? endPoint.policy.id : '';\r\n\r\n      \r\n      \r\n      await fetch(API_BASE_URL + '/accounts/' + (endPoint.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        //let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await (await fetch(API_BASE_URL + '/vpcs/' + (endPoint.vpc.id) + '/routeTables',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.routeTables = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n\r\n      await (await fetch(API_BASE_URL + '/accounts/' + (endPoint.account.id) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.policys = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      \r\n      \r\n\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const endPoint = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        serviceName: '', \r\n        fullAccess: true,\r\n        vpc: {},\r\n        vpcs: [],\r\n        vpcId : '',\r\n        routeTable: {},\r\n        routeTables: [],\r\n        routeTableId : '',\r\n        policy: {},\r\n        policys: [],\r\n        policyId : '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          serviceName: false,\r\n          routeTableId: false,\r\n          policyId: false\r\n        }\r\n      };\r\n      endPoint.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          serviceName: false,\r\n          routeTableId: false,\r\n          policyId: false\r\n      };\r\n      this.setState({item: endPoint});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*\r\n    await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    \r\n    if(name === 'fAccess')\r\n    {\r\n      if(value === 'Yes'){\r\n        item.fullAccess = true;\r\n      }\r\n      else\r\n      {\r\n        item.fullAccess = false;\r\n      }\r\n    }\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      item.policyId = '';\r\n      item.policys = [];\r\n      item.routeTableId = '';\r\n      item.routeTables = [];\r\n    }\r\n    if(name === 'vpcId')\r\n    {\r\n    \r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/routeTables',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.routeTables = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.policys = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      \r\n     \r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true,\r\n      accountId: true,\r\n      vpcId: true,\r\n      serviceName: true,\r\n      routeTableId: true,\r\n      policyId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.serviceName, item.routeTableId, item.policyId, item.accountId);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/endpoints'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    item.routeTable={id: item.routeTableId};\r\n    \r\n    if(item.fullAccess)\r\n    {\r\n      item.policy = null;\r\n    }\r\n    else\r\n    {\r\n      item.policy={id: item.policyId};\r\n    }\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/endPoints/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/endPoints', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, serviceName, routeTableId, policyId, accountId) {\r\n\r\n    const errors = {\r\n      name: '',\r\n      accountId: '',\r\n      vpcId: '',\r\n      serviceName: '',\r\n      routeTableId: '',\r\n      policyId: ''\r\n    };\r\n    \r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.serviceName && serviceName.length === 0){\r\n      errors.serviceName = 'serviceName should not be null';\r\n      return errors;\r\n    } \r\n\r\n    if(this.state.item.touched.routeTableId && routeTableId.length === 0){\r\n      errors.routeTableId = 'routeTableId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(!this.state.item.fullAccess && this.state.item.touched.policyId && policyId.length === 0){\r\n      errors.policyId = 'policyId should not be null';\r\n      return errors;\r\n    }\r\n   \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit EndPoint' : 'Add EndPoint'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.serviceName, item.routeTableId, item.policyId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/endpoints\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n    \r\n    let optsp = [];\r\n    if(item.policys && item.policys.length){\r\n      item.policys.map(s => {  \r\n          optsp.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let policy = item.policyId || '';\r\n    item.policyId = policy;\r\n\r\n    let optsr = [];\r\n    if(item.routeTables && item.routeTables.length){\r\n      item.routeTables.map(s => {  \r\n          optsr.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let routeTable = item.routeTableId || '';\r\n    item.routeTableId = routeTable;\r\n\r\n    let serviceName = item.serviceName || '';\r\n    item.serviceName = serviceName;\r\n    \r\n    const fullAccess = item.fullAccess;\r\n\r\n    const policys = (!item.fullAccess) ? <FormGroup>\r\n            <Label for=\"policyId\">Policy (*)</Label>\r\n            <Input type=\"select\" name=\"policyId\" id=\"policyId\"  value={policy} onChange={this.handleChange} onBlur={this.handleBlur('policyId')}\r\n                 valid={errors.policyId === ''}\r\n                 invalid={errors.policyId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsp}\r\n            </Input>\r\n            <FormFeedback>{errors.policyId}</FormFeedback>\r\n          </FormGroup> : ''\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n \r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpc (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>  \r\n            <Label for=\"serviceName\">Service Name (*)</Label>\r\n            <Input type=\"select\" name=\"serviceName\" id=\"serviceName\" value={serviceName} \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('serviceName')} \r\n                   valid={errors.serviceName === ''}\r\n                   invalid={errors.serviceName !== ''}\r\n                  >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  <option value=\"com.amazonaws.eu-west-1.s3:Gateway\">com.amazonaws.eu-west-1.s3: Gateway</option>\r\n                  <option value=\"com.amazonaws.eu-west-1.dynamodb:Gateway\">com.amazonaws.eu-west-1.dynamodb: Gateway</option>\r\n            </Input>\r\n           <FormFeedback>{errors.serviceName}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"routeTableId\">Route Table (*)</Label>\r\n            <Input type=\"select\" name=\"routeTableId\" id=\"routeTableId\"  value={routeTable} onChange={this.handleChange} onBlur={this.handleBlur('routeTableId')}\r\n                 valid={errors.routeTableId === ''}\r\n                 invalid={errors.routeTableId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsr}\r\n            </Input>\r\n            <FormFeedback>{errors.routeTableId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup tag=\"fieldset\">\r\n            <Label for=\"fAccess\">Access (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"fAccess\" id=\"fAccess\" value=\"Yes\" checked={fullAccess === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('fAccess')} autoComplete=\"fAccess\"\r\n                       valid={errors.fAccess === ''}\r\n                       invalid={errors.fAccess !== ''}\r\n                />{' '}\r\n                Yes\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"fAccess\" id=\"fAccess\" value=\"No\" checked={fullAccess === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('fAccess')} autoComplete=\"fAccess\"\r\n                       valid={errors.fAccess === ''}\r\n                       invalid={errors.fAccess !== ''}\r\n                />{' '}\r\n                No\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.fAccess}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {policys}\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(EndPointEdit);"]},"metadata":{},"sourceType":"module"}