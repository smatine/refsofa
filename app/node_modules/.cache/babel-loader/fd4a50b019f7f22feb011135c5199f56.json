{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _comparison = require('../comparison');\n\nvar _const = require('../const');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint react/require-default-props: 0 */\n\n/* eslint no-return-assign: 0 */\n\n/* eslint react/no-unused-prop-types: 0 */\n\n\nfunction optionsEquals(currOpts, prevOpts) {\n  var keys = Object.keys(currOpts);\n\n  for (var i = 0; i < keys.length; i += 1) {\n    if (currOpts[keys[i]] !== prevOpts[keys[i]]) {\n      return false;\n    }\n  }\n\n  return Object.keys(currOpts).length === Object.keys(prevOpts).length;\n}\n\nvar SelectFilter = function (_Component) {\n  _inherits(SelectFilter, _Component);\n\n  function SelectFilter(props) {\n    _classCallCheck(this, SelectFilter);\n\n    var _this = _possibleConstructorReturn(this, (SelectFilter.__proto__ || Object.getPrototypeOf(SelectFilter)).call(this, props));\n\n    _this.filter = _this.filter.bind(_this);\n    var isSelected = props.options[props.defaultValue] !== undefined;\n    _this.state = {\n      isSelected: isSelected\n    };\n    return _this;\n  }\n\n  _createClass(SelectFilter, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _props = this.props,\n          column = _props.column,\n          onFilter = _props.onFilter,\n          getFilter = _props.getFilter;\n      var value = this.selectInput.value;\n\n      if (value && value !== '') {\n        onFilter(column, _const.FILTER_TYPE.SELECT, true)(value);\n      } // export onFilter function to allow users to access\n\n\n      if (getFilter) {\n        getFilter(function (filterVal) {\n          _this2.setState(function () {\n            return {\n              isSelected: filterVal !== ''\n            };\n          });\n\n          _this2.selectInput.value = filterVal;\n          onFilter(column, _const.FILTER_TYPE.SELECT)(filterVal);\n        });\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var needFilter = false;\n\n      if (this.props.defaultValue !== prevProps.defaultValue) {\n        needFilter = true;\n      } else if (!optionsEquals(this.props.options, prevProps.options)) {\n        needFilter = true;\n      }\n\n      if (needFilter) {\n        var value = this.selectInput.value;\n\n        if (value) {\n          this.props.onFilter(this.props.column, _const.FILTER_TYPE.SELECT)(value);\n        }\n      }\n    }\n  }, {\n    key: 'getOptions',\n    value: function getOptions() {\n      var optionTags = [];\n      var _props2 = this.props,\n          options = _props2.options,\n          placeholder = _props2.placeholder,\n          column = _props2.column,\n          withoutEmptyOption = _props2.withoutEmptyOption;\n\n      if (!withoutEmptyOption) {\n        optionTags.push(_react2.default.createElement('option', {\n          key: '-1',\n          value: ''\n        }, placeholder || 'Select ' + column.text + '...'));\n      }\n\n      Object.keys(options).forEach(function (key) {\n        return optionTags.push(_react2.default.createElement('option', {\n          key: key,\n          value: key\n        }, options[key]));\n      });\n      return optionTags;\n    }\n  }, {\n    key: 'cleanFiltered',\n    value: function cleanFiltered() {\n      var value = this.props.defaultValue !== undefined ? this.props.defaultValue : '';\n      this.setState(function () {\n        return {\n          isSelected: value !== ''\n        };\n      });\n      this.selectInput.value = value;\n      this.props.onFilter(this.props.column, _const.FILTER_TYPE.SELECT)(value);\n    }\n  }, {\n    key: 'applyFilter',\n    value: function applyFilter(value) {\n      this.selectInput.value = value;\n      this.setState(function () {\n        return {\n          isSelected: value !== ''\n        };\n      });\n      this.props.onFilter(this.props.column, _const.FILTER_TYPE.SELECT)(value);\n    }\n  }, {\n    key: 'filter',\n    value: function filter(e) {\n      var value = e.target.value;\n      this.setState(function () {\n        return {\n          isSelected: value !== ''\n        };\n      });\n      this.props.onFilter(this.props.column, _const.FILTER_TYPE.SELECT)(value);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props3 = this.props,\n          style = _props3.style,\n          className = _props3.className,\n          defaultValue = _props3.defaultValue,\n          onFilter = _props3.onFilter,\n          column = _props3.column,\n          options = _props3.options,\n          comparator = _props3.comparator,\n          withoutEmptyOption = _props3.withoutEmptyOption,\n          caseSensitive = _props3.caseSensitive,\n          getFilter = _props3.getFilter,\n          rest = _objectWithoutProperties(_props3, ['style', 'className', 'defaultValue', 'onFilter', 'column', 'options', 'comparator', 'withoutEmptyOption', 'caseSensitive', 'getFilter']);\n\n      var selectClass = 'filter select-filter form-control ' + className + ' ' + (this.state.isSelected ? '' : 'placeholder-selected');\n      return _react2.default.createElement('select', _extends({}, rest, {\n        ref: function ref(n) {\n          return _this3.selectInput = n;\n        },\n        style: style,\n        className: selectClass,\n        onChange: this.filter,\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        },\n        defaultValue: defaultValue !== undefined ? defaultValue : ''\n      }), this.getOptions());\n    }\n  }]);\n\n  return SelectFilter;\n}(_react.Component);\n\nSelectFilter.propTypes = {\n  onFilter: _propTypes2.default.func.isRequired,\n  column: _propTypes2.default.object.isRequired,\n  options: _propTypes2.default.object.isRequired,\n  comparator: _propTypes2.default.oneOf([_comparison.LIKE, _comparison.EQ]),\n  placeholder: _propTypes2.default.string,\n  style: _propTypes2.default.object,\n  className: _propTypes2.default.string,\n  withoutEmptyOption: _propTypes2.default.bool,\n  defaultValue: _propTypes2.default.any,\n  caseSensitive: _propTypes2.default.bool,\n  getFilter: _propTypes2.default.func\n};\nSelectFilter.defaultProps = {\n  defaultValue: '',\n  className: '',\n  withoutEmptyOption: false,\n  comparator: _comparison.EQ,\n  caseSensitive: true\n};\nexports.default = SelectFilter;","map":null,"metadata":{},"sourceType":"script"}