{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\VpcManageEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL } from './constants';\n\nvar cidrRegex = require('cidr-regex');\n\nvar VpcManageEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VpcManageEdit, _Component);\n\n  function VpcManageEdit(props) {\n    var _this;\n\n    _classCallCheck(this, VpcManageEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VpcManageEdit).call(this, props));\n    _this.emptyItem = {\n      cidr: '',\n      text: '',\n      env: '',\n      vpc: {\n        id: ''\n      },\n      regions: {},\n      region: {},\n      regionId: '',\n      touched: {\n        cidr: false,\n        env: false,\n        regionId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(VpcManageEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var cidr, item, _cidr;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/cidrs/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                cidr = _context.sent;\n                cidr.touched = {\n                  cidr: false,\n                  env: false,\n                  regionId: false\n                };\n                this.setState({\n                  item: cidr\n                });\n                item = _objectSpread({}, this.state.item);\n                item.regionId = cidr.region.id;\n                this.setState({\n                  item: item\n                });\n                _context.next = 15;\n                break;\n\n              case 13:\n                _cidr = {\n                  cidr: '',\n                  text: '',\n                  env: '',\n                  vpc: {\n                    id: ''\n                  },\n                  regions: {},\n                  region: {},\n                  regionId: '',\n                  touched: {\n                    cidr: false,\n                    env: false,\n                    regionId: false\n                  }\n                };\n                this.setState({\n                  item: _cidr\n                });\n\n              case 15:\n                _context.next = 17;\n                return fetch(API_BASE_URL + '/regions').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.regions = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, cidrs, ip, newIp, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  cidr: true,\n                  env: true\n                };\n                errors = this.validate(item.cidr, item.env);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                alert(errors.cidr + \"  \" + errors.env);\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                ip = '';\n                ip = item.cidr;\n                newIp = ip.replace('/', '@');\n                item.region = {\n                  id: item.regionId\n                };\n                _context2.next = 14;\n                return fetch(item.id ? API_BASE_URL + '/cidr/' + newIp + '/env/' + item.env + '/cidrId/' + item.id : API_BASE_URL + '/cidr/' + newIp + '/env/' + item.env + '/cidrId/0').then(function (result) {\n                  // Get the result\n                  // If we want text, call result.text()\n                  return result.json();\n                }).then(function (jsonResult) {\n                  // Do something with the result\n                  cidrs = jsonResult.length;\n                  console.log(jsonResult.length);\n                });\n\n              case 14:\n                if (!(cidrs !== 0)) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                errors.cidr = \"Cidr should be unique by env\";\n                alert(errors.cidr);\n                return _context2.abrupt(\"return\");\n\n              case 18:\n                if (!item.id) item.vpc = null;\n                hist = API_BASE_URL + '/vpcmanage';\n                _context2.next = 22;\n                return fetch(item.id ? API_BASE_URL + '/cidrs/' + item.id : API_BASE_URL + '/cidr', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 22:\n                this.props.history.push(hist);\n\n              case 23:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(cidr, env, regionId) {\n      var errors = {\n        cidr: '',\n        env: '',\n        regionId: ''\n      };\n\n      if (this.state.item.touched.cidr && cidr.length === 0) {\n        errors.cidr = 'cidr should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.cidr && !cidrRegex({\n        exact: true\n      }).test(cidr)) {\n        errors.cidr = 'cidr should  be a cidr format';\n        return errors;\n      }\n\n      if (this.state.item.touched.env && env.length === 0) {\n        errors.env = 'env should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.regionId && regionId.length === 0) {\n        errors.regionId = 'Region should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, item.id ? 'Edit Cidr' : 'Add Cidr');\n      var errors = this.validate(item.cidr, item.env, item.regionId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/vpcmanage\";\n      var isDisabledd = false;\n      if (item.vpc && item.vpc.id) isDisabledd = true;\n      var optsr = [];\n\n      if (item.regions && item.regions.length) {\n        item.regions.map(function (s) {\n          optsr.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var reg = item.regionId || '';\n      item.regionId = reg;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"cidr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"CIDR (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"cidr\",\n        id: \"cidr\",\n        value: item.cidr || '',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('cidr'),\n        autoComplete: \"cidr\",\n        valid: errors.cidr === '',\n        invalid: errors.cidr !== '',\n        disabled: isDisabledd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, errors.cidr)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"regionId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Region (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"regionId\",\n        id: \"regionId\",\n        value: reg,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('regionId'),\n        valid: errors.regionId === '',\n        invalid: errors.regionId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Choose\"), optsr), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, errors.regionId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"env\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Env (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"env\",\n        id: \"env\",\n        value: item.env || '',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('env'),\n        valid: errors.env === '',\n        invalid: errors.env !== '',\n        disabled: isDisabledd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"DEV\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"DEV\"), React.createElement(\"option\", {\n        value: \"HML\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"HML\"), React.createElement(\"option\", {\n        value: \"PRD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"PRD\"), React.createElement(\"option\", {\n        value: \"SDB\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"SDB\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, errors.env)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"env\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return VpcManageEdit;\n}(Component);\n\nexport default withRouter(VpcManageEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\VpcManageEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","cidrRegex","require","VpcManageEdit","props","emptyItem","cidr","text","env","vpc","id","regions","region","regionId","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","fetch","json","then","result","jsonResult","event","target","value","name","preventDefault","errors","validate","isDisabled","Object","keys","some","x","alert","ip","newIp","replace","cidrs","length","console","log","hist","method","headers","body","JSON","stringify","history","push","exact","test","title","canc","isDisabledd","optsr","map","s","reg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass VpcManageEdit extends Component {\r\n\r\n  emptyItem = {\r\n    cidr: '',\r\n    text: '',\r\n    env: '',\r\n    vpc: {id: ''},\r\n    regions: {},\r\n    region: {},\r\n    regionId: '',\r\n    touched: {\r\n      cidr: false,\r\n      env: false,\r\n      regionId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const cidr = await (await fetch(`${API_BASE_URL}/cidrs/${this.props.match.params.id}`)).json();\r\n      \r\n      cidr.touched = {\r\n        cidr: false,\r\n        env: false,\r\n        regionId: false\r\n      };\r\n      \r\n      this.setState({item: cidr});\r\n      let item = {...this.state.item};\r\n      item.regionId = cidr.region.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const cidr = {\r\n        cidr: '',\r\n        text: '',\r\n        env: '',\r\n        vpc: {id: ''},\r\n        regions: {},\r\n        region: {},\r\n        regionId: '',\r\n        touched: {\r\n          cidr: false,\r\n          env: false,\r\n          regionId: false\r\n        }\r\n      };\r\n      this.setState({item: cidr});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/regions',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.regions = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n        cidr: true,\r\n        env: true\r\n    };\r\n    const errors = this.validate(item.cidr, item.env);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n      alert(errors.cidr + \"  \" + errors.env);\r\n      return;\r\n    }\r\n    let cidrs;\r\n\r\n    let ip ='';\r\n    ip = item.cidr;\r\n    let newIp = ip.replace('/', '@');\r\n\r\n    item.region={id: item.regionId};\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/cidr/' + newIp + '/env/' + item.env + '/cidrId/' + item.id : API_BASE_URL + '/cidr/' + newIp + '/env/' + item.env + '/cidrId/0',)\r\n    .then((result) => {\r\n      // Get the result\r\n      // If we want text, call result.text()\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      // Do something with the result\r\n      cidrs = jsonResult.length;\r\n      console.log(jsonResult.length);\r\n    })\r\n    if(cidrs !== 0) {\r\n      errors.cidr=\"Cidr should be unique by env\";\r\n      alert(errors.cidr);\r\n      return ;\r\n    }\r\n    \r\n    \r\n    if(!item.id) item.vpc=null; \r\n    const hist= API_BASE_URL + '/vpcmanage';\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/cidrs/'+(item.id) : API_BASE_URL + '/cidr', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(cidr, env, regionId) {\r\n\r\n    const errors = {\r\n      cidr: '',\r\n      env: '',\r\n      regionId:''\r\n    };\r\n\r\n    if(this.state.item.touched.cidr && cidr.length === 0){\r\n      errors.cidr = 'cidr should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.cidr && !cidrRegex({exact: true}).test(cidr))\r\n    {\r\n      errors.cidr = 'cidr should  be a cidr format';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.env && env.length === 0){\r\n      errors.env = 'env should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.regionId && regionId.length === 0){\r\n      errors.regionId = 'Region should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Cidr' : 'Add Cidr'}</h2>;\r\n\r\n\r\n    const errors = this.validate(item.cidr, item.env, item.regionId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/vpcmanage\";\r\n    \r\n    let isDisabledd = false;\r\n    if(item.vpc && item.vpc.id) isDisabledd = true;\r\n\r\n    \r\n    let optsr = [];\r\n    if(item.regions && item.regions.length){\r\n          item.regions.map(s => {  \r\n          optsr.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n\r\n    let reg = item.regionId || '';\r\n    item.regionId = reg;\r\n    \r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"cidr\">CIDR (*)</Label>\r\n            <Input type=\"text\" name=\"cidr\" id=\"cidr\" value={item.cidr || ''}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('cidr')} autoComplete=\"cidr\"\r\n                   valid={errors.cidr === ''}\r\n                   invalid={errors.cidr !== ''}\r\n                   disabled={isDisabledd}\r\n            />\r\n            <FormFeedback>{errors.cidr}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"regionId\">Region (*)</Label>\r\n            <Input type=\"select\" name=\"regionId\" id=\"regionId\"  value={reg} onChange={this.handleChange} onBlur={this.handleBlur('regionId')}\r\n                 valid={errors.regionId === ''}\r\n                 invalid={errors.regionId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsr}\r\n            </Input>\r\n            <FormFeedback>{errors.regionId}</FormFeedback>\r\n          </FormGroup>\r\n      \r\n          <FormGroup>\r\n            <Label for=\"env\">Env (*)</Label>\r\n            <Input type=\"select\" name=\"env\" id=\"env\" value={item.env || ''} onChange={this.handleChange} onBlur={this.handleBlur('env')}\r\n                 valid={errors.env === ''}\r\n                 invalid={errors.env !== ''}\r\n                 disabled={isDisabledd}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"DEV\">DEV</option>\r\n              <option value=\"HML\">HML</option>\r\n              <option value=\"PRD\">PRD</option>\r\n              <option value=\"SDB\">SDB</option>\r\n            </Input>\r\n            <FormFeedback>{errors.env}</FormFeedback>\r\n          </FormGroup>\r\n\r\n      \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"env\"\r\n            />\r\n          </FormGroup>\r\n      \r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(VpcManageEdit);"]},"metadata":{},"sourceType":"module"}