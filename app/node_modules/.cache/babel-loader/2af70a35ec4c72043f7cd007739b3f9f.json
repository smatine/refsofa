{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\EfsList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar EfsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EfsList, _Component);\n\n  function EfsList(props) {\n    var _this;\n\n    _classCallCheck(this, EfsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EfsList).call(this, props));\n    _this.state = {\n      efss: [],\n      isLoading: true\n    };\n    _this.remove = _this.remove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EfsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      }); //fetch(`/trigrammes/${this.props.match.params.id}/products`)\n\n      fetch(\"\".concat(API_BASE_URL, \"/efss\")).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          efss: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(accId, id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_BASE_URL, \"/vpcs/\").concat(accId, \"/efss/\").concat(id), {\n                  method: 'DELETE',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function () {\n                  var updateEfs = _toConsumableArray(_this3.state.efss).filter(function (i) {\n                    return i.id !== id;\n                  });\n\n                  _this3.setState({\n                    efss: updateEfs\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function remove(_x, _x2) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          efss = _this$state.efss,\n          isLoading = _this$state.isLoading;\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var efsList = efss.map(function (efs) {\n        var link = FRT_BASE_URL + \"/vpcs/\" + efs.vpc.id;\n        var linkAccount = FRT_BASE_URL + \"/accounts/\" + efs.account.id;\n        var sg = FRT_BASE_URL + \"/subnetgroups/\" + efs.subnetgroup.id;\n        var encryption = efs.encryption ? 'Yes' : 'No';\n        var kms = efs.kms ? efs.kms.id : '-';\n        var encryptionType = efs.encryption ? efs.encryptionType : '-';\n        var provisionedIo = efs.throughputMode === 'Provisioned' ? efs.provisionedIo : '-';\n        return React.createElement(\"tr\", {\n          key: efs.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, efs.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, efs.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: linkAccount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, efs.account.numAccount)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, efs.performanceMode), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, efs.throughputMode), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, provisionedIo), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, encryption), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, encryptionType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, kms), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, efs.kmsExterne), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, efs.text), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, efs.vpc.name)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: sg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, efs.subnetgroup.name)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"secondary\",\n          tag: Link,\n          to: FRT_BASE_URL + \"/efs/\" + efs.id + \"/tags\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Tags\"), \"\\xA0\\xA0\", React.createElement(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          tag: Link,\n          to: FRT_BASE_URL + \"/efss/\" + efs.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this4.remove(efs.vpc.id, efs.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n      var add = \"\".concat(FRT_BASE_URL, \"/efss/new\"); //const trig = `/trigrammes`;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        tag: Link,\n        to: add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Add Efs\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Efs\"), React.createElement(Table, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Account\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Performance Mode\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Throughput Mode\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Provisioned IO\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Encryption\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Encryption Type\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Kms\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Kms Externe\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Vpc\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Subnet Group\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, efsList))));\n    }\n  }]);\n\n  return EfsList;\n}(Component);\n\nexport default EfsList;","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\EfsList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","API_BASE_URL","FRT_BASE_URL","EfsList","props","state","efss","isLoading","remove","bind","setState","fetch","then","response","json","data","accId","id","method","headers","updateEfs","filter","i","efsList","map","efs","link","vpc","linkAccount","account","sg","subnetgroup","encryption","kms","encryptionType","provisionedIo","throughputMode","whiteSpace","name","numAccount","performanceMode","kmsExterne","text","add"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass EfsList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {efss: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/efss`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({efss: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/efss/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateEfs = [...this.state.efss].filter(i => i.id !== id);\r\n      this.setState({efss: updateEfs});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {efss, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const efsList = efss.map(efs => {\r\n      \r\n      const link = FRT_BASE_URL + \"/vpcs/\" + efs.vpc.id; \r\n      const linkAccount = FRT_BASE_URL + \"/accounts/\" + efs.account.id; \r\n      \r\n      const sg = FRT_BASE_URL + \"/subnetgroups/\" + efs.subnetgroup.id;\r\n      const encryption = (efs.encryption) ? 'Yes' : 'No';\r\n      const kms = (efs.kms) ? efs.kms.id : '-';\r\n      const encryptionType = (efs.encryption) ? efs.encryptionType : '-';\r\n      const provisionedIo = (efs.throughputMode === 'Provisioned') ? efs.provisionedIo : '-';\r\n\r\n      return <tr key={efs.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{efs.id}</td>\r\n\r\n  \r\n\r\n        <td>{efs.name}</td>\r\n        <td><a href={linkAccount}>{efs.account.numAccount}</a></td>\r\n        <td>{efs.performanceMode}</td>\r\n        <td>{efs.throughputMode}</td>\r\n        <td>{provisionedIo}</td>\r\n        <td>{encryption}</td>\r\n        <td>{encryptionType}</td>\r\n        <td>{kms}</td>\r\n        <td>{efs.kmsExterne}</td>\r\n\r\n\r\n        <td>{efs.text}</td>\r\n        <td><a href={link}>{efs.vpc.name}</a></td>\r\n        <td><a href={sg}>{efs.subnetgroup.name}</a></td>\r\n    \r\n\r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={FRT_BASE_URL + \"/efs/\" + efs.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={FRT_BASE_URL + \"/efss/\" + efs.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(efs.vpc.id, efs.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${FRT_BASE_URL}/efss/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Efs</Button>\r\n          </div>\r\n          \r\n          <h3>Efs</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Performance Mode</th>\r\n              <th width=\"5%\">Throughput Mode</th>\r\n              <th width=\"5%\">Provisioned IO</th>\r\n              <th width=\"5%\">Encryption</th>\r\n              <th width=\"5%\">Encryption Type</th>\r\n              <th width=\"5%\">Kms</th>\r\n              <th width=\"5%\">Kms Externe</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Subnet Group</th>\r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {efsList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EfsList;"]},"metadata":{},"sourceType":"module"}