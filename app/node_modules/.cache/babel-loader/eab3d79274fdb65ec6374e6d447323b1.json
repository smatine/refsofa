{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\AccountEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL } from './constants';\n\nvar AccountEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AccountEdit, _Component);\n\n  function AccountEdit(props) {\n    var _this;\n\n    _classCallCheck(this, AccountEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AccountEdit).call(this, props));\n    _this.emptyItem = {\n      numAccount: '',\n      text: '',\n      env: '',\n      mailList: '',\n      alias: '',\n      products: {},\n      product: {},\n      productId: '',\n      touched: {\n        vpc: false,\n        numAccount: false,\n        env: false,\n        mailList: false,\n        alias: false,\n        productId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AccountEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var account, item, vpcs, _item, _account;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/accounts/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                account = _context.sent;\n                account.touched = {\n                  vpc: false,\n                  numAccount: false,\n                  env: false,\n                  mailList: false,\n                  alias: false,\n                  productId: false\n                };\n                this.setState({\n                  item: account\n                });\n                item = _objectSpread({}, this.state.item);\n                item.productId = account.product.id;\n                this.setState({\n                  item: item\n                });\n                _context.next = 13;\n                return fetch(\"\".concat(API_BASE_URL, \"/accounts/\").concat(this.props.match.params.id, \"/vpcs\")).then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  vpcs = jsonResult.length;\n                  console.log(jsonResult.length);\n                });\n\n              case 13:\n                if (vpcs !== 0) {\n                  _item = _objectSpread({}, this.state.item);\n                  _item.touched.vpc = true;\n                }\n\n                _context.next = 19;\n                break;\n\n              case 16:\n                _account = {\n                  numAccount: '',\n                  text: '',\n                  env: '',\n                  mailList: '',\n                  alias: '',\n                  products: {},\n                  product: {},\n                  productId: '',\n                  touched: {\n                    vpc: false,\n                    numAccount: false,\n                    env: false,\n                    mailList: false,\n                    alias: false,\n                    productId: false\n                  }\n                };\n                _account.touched = {\n                  vpc: false,\n                  numAccount: false,\n                  env: false,\n                  mailList: false,\n                  alias: false,\n                  productId: false\n                };\n                this.setState({\n                  item: _account\n                });\n\n              case 19:\n                _context.next = 21;\n                return fetch(API_BASE_URL + '/products').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.products = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  numAccount: true,\n                  env: true,\n                  mailList: true,\n                  alias: true,\n                  productId: true\n                };\n                errors = this.validate(item.numAccount, item.env, item.mailList, item.productId, item.alias);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/accounts';\n                item.product = {\n                  id: item.productId\n                };\n                _context2.next = 12;\n                return fetch(item.id ? API_BASE_URL + '/products/' + item.product.id + '/accounts/' + item.id : API_BASE_URL + '/products/' + item.product.id + '/accounts', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 12:\n                this.props.history.push(hist);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(numAccount, env, mailList, productId, alias) {\n      var errors = {\n        numAccount: '',\n        env: '',\n        mailList: '',\n        alias: '',\n        productId: ''\n      };\n\n      if (this.state.item.touched.numAccount && numAccount.length !== 12) {\n        errors.numAccount = 'Account should not be null';\n        return errors;\n      } else if (this.state.item.touched.productId && productId.length <= 0) {\n        errors.productId = 'Product should not be null';\n        return errors;\n      } else if (this.state.item.touched.env && env.length !== 3) {\n        errors.env = 'Env should be = 3 characters!';\n        return errors;\n      } else if (this.state.item.touched.alias && alias.length <= 0) {\n        errors.alias = 'alias should not be null';\n        return errors;\n      }\n\n      var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (this.state.item.touched.mailList && !emailRex.test(mailList)) {\n        errors.mailList = 'Mailling List should have correct format ';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, item.id ? 'Edit Account' : 'Add Account');\n      var errors = this.validate(item.numAccount, item.env, item.mailList, item.productId, item.alias);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/accounts\";\n      /*let trig = null;\r\n      trig = <FormGroup>\r\n              <Label for=\"tri\">Product: {item.product.name}</Label>\r\n              <Input type=\"text\" name=\"productId\" id=\"productId\" value={item.product.id || ''} disabled=\"true\"/>\r\n            </FormGroup>;*/\n\n      /*let vpcs = null;\r\n      if(item.id) vpcs = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/account/\" + item.id + \"/vpcs\"}>Vpcs</Button>;*/\n\n      var isDisabledd = item.touched.vpc;\n      var opts = [];\n\n      if (item.products && item.products.length) {\n        item.products.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      if (item.id) {//opts.push(<option value={item.product.id} >{item.product.id} {item.product.name} </option>);\n      }\n\n      var prd = item.productId || '';\n      item.productId = prd;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"numAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"numAccount\",\n        id: \"numAccount\",\n        value: item.numAccount || '',\n        placeholder: \"Enter account\",\n        maxLength: \"12\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('numAccount'),\n        autoComplete: \"numAccount\",\n        valid: errors.numAccount === '',\n        invalid: errors.numAccount !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, errors.numAccount)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"productId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Product (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"productId\",\n        id: \"productId\",\n        value: prd,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('productId'),\n        valid: errors.productId === '',\n        invalid: errors.productId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, errors.productId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"env\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Env (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"env\",\n        id: \"env\",\n        value: item.env || '',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('env'),\n        valid: errors.env === '',\n        invalid: errors.env !== '',\n        disabled: isDisabledd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"DEV\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"DEV\"), React.createElement(\"option\", {\n        value: \"HML\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"HML\"), React.createElement(\"option\", {\n        value: \"PRD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"PRD\"), React.createElement(\"option\", {\n        value: \"SDB\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"SDB\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, errors.env)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"mailList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Mail (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"mailList\",\n        id: \"mailList\",\n        value: item.mailList || '',\n        placeholder: \"Enter email\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('mailList'),\n        autoComplete: \"mailList\",\n        valid: errors.mailList === '',\n        invalid: errors.mailList !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, errors.mailList)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"alias\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Alias (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"alias\",\n        id: \"alias\",\n        value: item.alias || '',\n        placeholder: \"Enter alias\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('alias'),\n        autoComplete: \"alias\",\n        valid: errors.alias === '',\n        invalid: errors.alias !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, errors.alias)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return AccountEdit;\n}(Component);\n\nexport default withRouter(AccountEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\AccountEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","AccountEdit","props","emptyItem","numAccount","text","env","mailList","alias","products","product","productId","touched","vpc","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","account","then","result","jsonResult","vpcs","length","console","log","event","target","value","name","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","push","emailRex","test","title","canc","isDisabledd","opts","map","s","prd"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label,FormFeedback  } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass AccountEdit extends Component {\r\n\r\n  emptyItem = {\r\n    numAccount: '',\r\n    text: '',\r\n\t  env: '',\r\n    mailList: '',\r\n    alias: '',\r\n    products: {},\r\n\t  product: {},\r\n\t  productId : '',\r\n    touched: {\r\n      vpc:false,\r\n      numAccount: false,\r\n      env: false,\r\n      mailList: false,\r\n      alias: false,\r\n      productId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const account = await (await fetch(`${API_BASE_URL}/accounts/${this.props.match.params.id}`)).json();\r\n      account.touched = {\r\n        vpc: false,\r\n        numAccount: false,\r\n        env: false,\r\n        mailList: false,\r\n        alias: false,\r\n        productId: false\r\n      };\r\n      this.setState({item: account});\r\n\r\n      let item = {...this.state.item};\r\n      item.productId = account.product.id;\r\n      this.setState({item: item});\r\n\r\n      let vpcs;                              \r\n      await fetch(`${API_BASE_URL}/accounts/${this.props.match.params.id}/vpcs`)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        vpcs = jsonResult.length;\r\n        console.log(jsonResult.length);\r\n      })\r\n      if(vpcs !== 0) {\r\n        let item = {...this.state.item};\r\n        item.touched.vpc = true;\r\n      }\r\n\r\n    }\r\n    else {\r\n      const account = {\r\n        numAccount: '',\r\n        text: '',\r\n        env: '',\r\n        mailList: '',\r\n        alias: '',\r\n        products: {},\r\n        product: {},\r\n        productId : '',\r\n        touched: {\r\n          vpc: false,\r\n          numAccount: false,\r\n          env: false,\r\n          mailList: false,\r\n          alias: false,\r\n          productId: false\r\n        }\r\n      };\r\n      account.touched = {\r\n        vpc: false,\r\n        numAccount: false,\r\n        env: false,\r\n        mailList: false,\r\n        alias: false,\r\n        productId: false\r\n      };\r\n      this.setState({item: account});\r\n    }\r\n\r\n    //const {item} = this.state;\r\n    await fetch(API_BASE_URL + '/products',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.products = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n    \r\n    item.touched = {\r\n        numAccount: true,\r\n        env: true,\r\n        mailList: true,\r\n        alias: true,\r\n        productId: true\r\n    };\r\n    const errors = this.validate(item.numAccount, item.env, item.mailList, item.productId, item.alias);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/accounts'; \r\n\r\n    item.product={id: item.productId};\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/products/' + (item.product.id) + '/accounts/'+(item.id) : API_BASE_URL + '/products/' + item.product.id + '/accounts', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n  \r\n\r\n  validate(numAccount, env, mailList, productId, alias) {\r\n\r\n    const errors = {\r\n      numAccount: '',\r\n      env: '',\r\n      mailList: '',\r\n      alias: '',\r\n      productId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.numAccount && numAccount.length !== 12){\r\n      errors.numAccount = 'Account should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.productId && productId.length <= 0){\r\n      errors.productId = 'Product should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.env && env.length !== 3){\r\n      errors.env = 'Env should be = 3 characters!';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.alias && alias.length <= 0){\r\n      errors.alias = 'alias should not be null';\r\n      return errors;\r\n    }\r\n\r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    \r\n    if(this.state.item.touched.mailList && !emailRex.test(mailList)){\r\n      errors.mailList = 'Mailling List should have correct format ';\r\n      return errors;\r\n    }\r\n   \r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Account' : 'Add Account'}</h2>;\r\n    \r\n    const errors = this.validate(item.numAccount, item.env, item.mailList, item.productId, item.alias);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/accounts\";\r\n\r\n    /*let trig = null;\r\n    trig = <FormGroup>\r\n            <Label for=\"tri\">Product: {item.product.name}</Label>\r\n            <Input type=\"text\" name=\"productId\" id=\"productId\" value={item.product.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;*/\r\n    \r\n\r\n    /*let vpcs = null;\r\n    if(item.id) vpcs = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/account/\" + item.id + \"/vpcs\"}>Vpcs</Button>;*/\r\n\r\n    const isDisabledd = item.touched.vpc;\r\n\r\n    \r\n    let opts = [];\r\n    if(item.products && item.products.length){\r\n          item.products.map(s => {  \r\n          opts.push(<option key={s.id}  value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    if(item.id) {\r\n          //opts.push(<option value={item.product.id} >{item.product.id} {item.product.name} </option>);\r\n    }\r\n\r\n    let prd = item.productId || '';\r\n    item.productId = prd;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"numAccount\">Account (*)</Label>\r\n            <Input type=\"text\" name=\"numAccount\" id=\"numAccount\" value={item.numAccount || ''} placeholder=\"Enter account\"  maxLength=\"12\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('numAccount')} autoComplete=\"numAccount\"\r\n                   valid={errors.numAccount === ''}\r\n                   invalid={errors.numAccount !== ''}\r\n            />\r\n            <FormFeedback>{errors.numAccount}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"productId\">Product (*)</Label>\r\n            <Input type=\"select\" name=\"productId\" id=\"productId\"  value={prd} onChange={this.handleChange} onBlur={this.handleBlur('productId')}\r\n                 valid={errors.productId === ''}\r\n                 invalid={errors.productId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.productId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"env\">Env (*)</Label>\r\n            <Input type=\"select\" name=\"env\" id=\"env\" value={item.env || ''} onChange={this.handleChange} onBlur={this.handleBlur('env')} \r\n                 valid={errors.env === ''}\r\n                 invalid={errors.env !== ''}\r\n                 disabled={isDisabledd}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"DEV\">DEV</option>\r\n              <option value=\"HML\">HML</option>\r\n              <option value=\"PRD\">PRD</option>\r\n              <option value=\"SDB\">SDB</option>\r\n            </Input>\r\n            <FormFeedback>{errors.env}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"mailList\">Mail (*)</Label>\r\n            <Input  type=\"text\" name=\"mailList\" id=\"mailList\" value={item.mailList || ''} placeholder=\"Enter email\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('mailList')} autoComplete=\"mailList\"\r\n                   valid={errors.mailList === ''}\r\n                   invalid={errors.mailList !== ''}\r\n                   />\r\n            <FormFeedback>{errors.mailList}</FormFeedback>\r\n          </FormGroup>\r\n\t\t  \r\n          <FormGroup>\r\n            <Label for=\"alias\">Alias (*)</Label>\r\n            <Input  type=\"text\" name=\"alias\" id=\"alias\" value={item.alias || ''} placeholder=\"Enter alias\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('alias')} autoComplete=\"alias\"\r\n                   valid={errors.alias === ''}\r\n                   invalid={errors.alias !== ''}\r\n                   />\r\n            <FormFeedback>{errors.alias}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n\t\t     \r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\t\t  \r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(AccountEdit);"]},"metadata":{},"sourceType":"module"}