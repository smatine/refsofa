{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\EccEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport Select from 'react-select';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar EccEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EccEdit, _Component);\n\n  function EccEdit(props) {\n    var _this;\n\n    _classCallCheck(this, EccEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EccEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      account: {},\n      accounts: {},\n      accountId: '',\n      autoAssignPublicIp: '',\n      shutdownBehaviour: '',\n      enableTerminationProtection: false,\n      encoded64: false,\n      instanceType: '',\n      amiId: '',\n      amis: [],\n      monitoring: false,\n      userData: false,\n      userDataText: '',\n      instanceTypes: [],\n      instanceTypeId: '',\n      vpcs: [],\n      vpcId: '',\n      subnets: [],\n      subnetId: '',\n      sgss: {},\n      sgs: [],\n      sgId: [],\n      roles: [],\n      roleId: '',\n      touched: {\n        autoAssignPublicIp: false,\n        shutdownBehaviour: false,\n        instanceTypeId: false,\n        amiId: false,\n        userDataText: false,\n        vpcId: false,\n        subnetId: false,\n        sgId: false,\n        name: false,\n        accountId: false,\n        roleId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.onOptionChange = function (selectName, selectedOption) {\n      var item = _this.state.item;\n      var options = selectedOption;\n      var values = [];\n\n      if (selectName === 'sgId') {\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (item.sgss && item.sgss.length) {\n            item.sgss.map(function (s) {\n              if (s.id == options[i].value) {\n                values.push({\n                  \"id\": s.id\n                });\n              }\n            });\n          }\n        }\n\n        item.sgs = values;\n      }\n\n      _this.setState({\n        item: item\n      });\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EccEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var ecc, item, values, _ecc2, _ecc;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 31;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/eccs/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                ecc = _context.sent;\n                ecc.touched = {\n                  autoAssignPublicIp: false,\n                  shutdownBehaviour: false,\n                  instanceTypeId: false,\n                  amiId: false,\n                  userDataText: false,\n                  vpcId: false,\n                  subnetId: false,\n                  sgId: false,\n                  name: false,\n                  accountId: false,\n                  roleId: false\n                };\n                this.setState({\n                  item: ecc\n                });\n                item = _objectSpread({}, this.state.item);\n                item.instanceTypeId = ecc.instanceType.id;\n                item.amiId = ecc.ami.id;\n                item.vpcId = ecc.vpc.id;\n                item.accountId = ecc.account.id;\n                item.subnetId = ecc.subnet.id;\n                if (ecc.role) item.roleId = ecc.role.id;else item.roleId = '';\n                _context.next = 17;\n                return fetch(API_BASE_URL + '/accounts/' + ecc.account.id + '/vpcs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  //let item = {...this.state.item};\n                  item.vpcs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 17:\n                _context.next = 19;\n                return fetch(API_BASE_URL + '/regions/' + ecc.vpc.cidr.region.id + '/amis').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  item.amis = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 19:\n                _context.next = 21;\n                return fetch(API_BASE_URL + '/vpcs/' + ecc.vpc.id + '/subnets').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  //let item = {...this.state.item};\n                  item.subnets = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 21:\n                _context.next = 23;\n                return fetch(API_BASE_URL + '/vpcs/' + ecc.vpc.id + '/sgs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  //let item = {...this.state.item};\n                  item.sgss = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 23:\n                _context.next = 25;\n                return fetch(API_BASE_URL + '/accounts/' + ecc.account.id + '/roles').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  //let item = {...this.state.item};\n                  item.roles = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 25:\n                values = [];\n                item.sgs.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.sgs = values;\n                this.setState({\n                  item: item\n                });\n                /*\r\n                */\n\n                _context.next = 34;\n                break;\n\n              case 31:\n                _ecc = (_ecc2 = {\n                  name: '',\n                  account: {},\n                  accounts: {},\n                  accountId: '',\n                  autoAssignPublicIp: '',\n                  shutdownBehaviour: '',\n                  enableTerminationProtection: false,\n                  encoded64: false,\n                  instanceType: ''\n                }, _defineProperty(_ecc2, \"instanceType\", ''), _defineProperty(_ecc2, \"amiId\", ''), _defineProperty(_ecc2, \"amis\", []), _defineProperty(_ecc2, \"monitoring\", false), _defineProperty(_ecc2, \"userData\", false), _defineProperty(_ecc2, \"userDataText\", ''), _defineProperty(_ecc2, \"vpcs\", []), _defineProperty(_ecc2, \"vpcId\", ''), _defineProperty(_ecc2, \"sgss\", {}), _defineProperty(_ecc2, \"sgs\", []), _defineProperty(_ecc2, \"sgId\", []), _defineProperty(_ecc2, \"roles\", []), _defineProperty(_ecc2, \"roleId\", ''), _defineProperty(_ecc2, \"touched\", {\n                  autoAssignPublicIp: false,\n                  shutdownBehaviour: false,\n                  instanceTypeId: false,\n                  amiId: false,\n                  userDataText: false,\n                  vpcId: false,\n                  subnetId: false,\n                  sgId: false,\n                  name: false,\n                  accountId: false,\n                  roleId: false\n                }), _ecc2);\n                _ecc.touched = {\n                  autoAssignPublicIp: false,\n                  shutdownBehaviour: false,\n                  instanceTypeId: false,\n                  amiId: false,\n                  userDataText: false,\n                  vpcId: false,\n                  subnetId: false,\n                  sgId: false,\n                  name: false,\n                  accountId: false,\n                  roleId: false\n                };\n                this.setState({\n                  item: _ecc\n                });\n\n              case 34:\n                _context.next = 36;\n                return fetch(API_BASE_URL + '/instanceTypes').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.instanceTypes = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 36:\n                _context.next = 38;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 38:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      }); //enableTerminationProtection monitoring userData encoded64\n\n      if (name === 'enableTerminationProtection') {\n        item.enableTerminationProtection = target.checked ? true : false;\n      } else if (name === 'monitoring') {\n        item.monitoring = target.checked ? true : false;\n      } else if (name === 'userData') {\n        item.userData = target.checked ? true : false;\n      } else if (name === 'encoded64') {\n        item.encoded64 = target.checked ? true : false;\n      } else if (name === 'accountId') {\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/vpcs').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.vpcs = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        item.vpcId = '';\n        item.amis = [];\n        item.amiId = '';\n        item.ami = {};\n        item.subnetId = '';\n        item.subnets = [];\n        item.subnet = {};\n        item.roleId = '';\n        item.roles = [];\n        item.role = {};\n        item.sgId = '';\n        item.sgs = [];\n        item.sgss = [];\n      } else if (name === 'vpcId') {\n        var vp = {};\n        fetch(API_BASE_URL + \"/vpcs/\" + item.vpcId).then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          vp = jsonResult;\n          fetch(API_BASE_URL + '/regions/' + vp.cidr.region.id + '/amis').then(function (result) {\n            return result.json();\n          }).then(function (jsonResult) {\n            item.amis = jsonResult;\n\n            _this3.setState({\n              item: item\n            });\n          });\n          fetch(API_BASE_URL + '/vpcs/' + vp.id + '/subnets').then(function (result) {\n            return result.json();\n          }).then(function (jsonResult) {\n            var item = _objectSpread({}, _this3.state.item);\n\n            item.subnets = jsonResult;\n\n            _this3.setState({\n              item: item\n            });\n          });\n          fetch(API_BASE_URL + '/vpcs/' + vp.id + '/sgs').then(function (result) {\n            return result.json();\n          }).then(function (jsonResult) {\n            var item = _objectSpread({}, _this3.state.item);\n\n            item.sgss = jsonResult;\n\n            _this3.setState({\n              item: item\n            });\n          });\n          fetch(API_BASE_URL + '/accounts/' + vp.account.id + '/roles').then(function (result) {\n            return result.json();\n          }).then(function (jsonResult) {\n            var item = _objectSpread({}, _this3.state.item);\n\n            item.roles = jsonResult;\n\n            _this3.setState({\n              item: item\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist, values;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  autoAssignPublicIp: true,\n                  shutdownBehaviour: true,\n                  instanceTypeId: true,\n                  amiId: true,\n                  userDataText: true,\n                  vpcId: true,\n                  subnetId: true,\n                  sgId: true,\n                  name: true,\n                  accountId: true,\n                  roleId: true\n                };\n                errors = this.validate(item.name, item.autoAssignPublicIp, item.shutdownBehaviour, item.instanceTypeId, item.amiId, item.userDataText, item.userData, item.vpcId, item.subnetId, item.sgId, item.roleId, item.accountId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = FRT_BASE_URL + '/eccs';\n\n                if (!item.userData) {\n                  item.userDataText = '';\n                  item.encoded64 = false;\n                }\n\n                item.instanceType = {\n                  id: item.instanceTypeId\n                };\n                item.ami = {\n                  id: item.amiId\n                };\n                item.vpc = {\n                  id: item.vpcId\n                };\n                item.account = {\n                  id: item.accountId\n                };\n                item.subnet = {\n                  id: item.subnetId\n                };\n                if (item.roleId !== \"\") item.role = {\n                  id: item.roleId\n                };else {\n                  item.role = null;\n                }\n                values = [];\n\n                if (item.sgs && item.sgs.length) {\n                  item.sgs.map(function (s) {\n                    values.push({\n                      \"id\": s.id\n                    });\n                    console.log('item.sg=' + s.id);\n                  });\n                  item.sg = values;\n                }\n\n                _context2.next = 20;\n                return fetch(item.id ? API_BASE_URL + '/eccs/' + item.id : API_BASE_URL + '/ecc', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 20:\n                this.props.history.push(hist);\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, autoAssignPublicIp, shutdownBehaviour, instanceTypeId, amiId, userDataText, userData, vpcId, subnetId, sgId, roleId, accountId) {\n      var errors = {\n        autoAssignPublicIp: '',\n        shutdownBehaviour: '',\n        instanceTypeId: '',\n        amiId: '',\n        userDataText: '',\n        vpcId: '',\n        subnetId: '',\n        sgId: '',\n        name: '',\n        accountId: '',\n        roleId: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'name type should not be null';\n        return errors;\n      } else if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'accountId type should not be null';\n        return errors;\n      } else if (this.state.item.touched.vpcId && vpcId.length === 0) {\n        errors.vpcId = 'vpc type should not be null';\n        return errors;\n      } else if (this.state.item.touched.subnetId && (!subnetId || subnetId.length === 0)) {\n        errors.subnetId = 'subnet type should not be null';\n        return errors;\n      } else if (this.state.item.touched.amiId && amiId.length === 0) {\n        errors.amiId = 'ami type should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.instanceTypeId && instanceTypeId.length === 0) {\n        errors.instanceTypeId = 'instanceType should not be null';\n        return errors;\n      } else if (this.state.item.touched.autoAssignPublicIp && autoAssignPublicIp.length === 0) {\n        errors.autoAssignPublicIp = 'autoAssignPublicIp should not be null';\n        return errors;\n      } else if (this.state.item.touched.shutdownBehaviour && shutdownBehaviour.length === 0) {\n        errors.shutdownBehaviour = 'shutdownBehaviour should not be null';\n        return errors;\n      } else if (userData && this.state.item.touched.userDataText && userDataText.length === 0) {\n        errors.userDataText = 'userDataText type should not be null';\n        return errors;\n      }\n      /*else if(this.state.item.touched.roleId && roleId.length === 0){\r\n        errors.roleId = 'roleId should not be null';\r\n        return errors;\r\n      }*/\n\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, item.id ? 'Edit Ecc' : 'Add Ecc');\n      var errors = this.validate(item.name, item.autoAssignPublicIp, item.shutdownBehaviour, item.instanceTypeId, item.amiId, item.userDataText, item.userData, item.vpcId, item.subnetId, item.sgId, item.roleId, item.accountId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = FRT_BASE_URL + \"/eccs\";\n      var optas = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          optas.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 483\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount));\n        });\n      }\n\n      var account = item.accountId || '';\n      item.accountId = account;\n      var isUsed = false;\n      if (item.id !== '' && item.targets && item.targets.length !== 0) isUsed = true;\n      var encoded64 = item.userData ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"encoded64\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, \"Encoded64:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"encoded64\",\n        id: \"encoded64\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('encoded64'),\n        checked: item.encoded64 === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      })) : '';\n      var userDataText = item.userData ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"userDataText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, \"User Data Text(*)\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"userDataText\",\n        id: \"userDataText\",\n        value: item.userDataText || '',\n        placeholder: \"Enter userDataText\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('userDataText'),\n        autoComplete: \"userDataText\",\n        valid: errors.userDataText === '',\n        invalid: errors.userDataText !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, errors.userDataText)) : '';\n      var optVpcs = [];\n\n      if (item.vpcs && item.vpcs.length) {\n        item.vpcs.map(function (s) {\n          optVpcs.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 511\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var vpc = item.vpcId || '';\n      item.vpcId = vpc;\n      var optAmis = [];\n\n      if (item.amis && item.amis.length) {\n        item.amis.map(function (s) {\n          optAmis.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 520\n            },\n            __self: this\n          }, s.id, \" \", s.name, \" \", s.amiId));\n        });\n      }\n\n      var ami = item.amiId || '';\n      item.amiId = ami;\n      var optInstanceTypes = [];\n\n      if (item.instanceTypes && item.instanceTypes.length) {\n        item.instanceTypes.map(function (s) {\n          optInstanceTypes.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 529\n            },\n            __self: this\n          }, s.id, \" \", s.type));\n        });\n      }\n\n      var instanceType = item.instanceTypeId || '';\n      item.instanceTypeId = instanceType;\n      var optSubnets = [];\n\n      if (item.subnets && item.subnets.length) {\n        item.subnets.map(function (s) {\n          optSubnets.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 538\n            },\n            __self: this\n          }, s.id, \" \", s.name, \" \"));\n        });\n      }\n\n      var sub = item.subnetId || '';\n      item.subnetId = sub;\n      var optsg = [];\n      var optsgs = [];\n\n      if (item.sgss && item.sgss.length) {\n        item.sgss.map(function (s) {\n          if (item.sgs && item.sgs.length) item.sgs.map(function (ss) {\n            if (s.id == ss.id) {\n              optsgs.push({\n                value: s.id,\n                label: s.name\n              });\n            }\n          });\n          optsg.push({\n            value: s.id,\n            label: s.name\n          });\n        });\n      }\n\n      var securityGroup = React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"sgId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, \"Security Group (*)\"), React.createElement(Select, {\n        name: \"sgId\",\n        id: \"sgId\",\n        placeholder: \"Enter Security group\",\n        isMulti: true,\n        disabled: isUsed,\n        value: optsgs,\n        onChange: function onChange(e) {\n          return _this4.onOptionChange(\"sgId\", e);\n        },\n        onBlur: this.handleBlur('sgId'),\n        options: optsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, errors.sgId));\n      var optRoles = [];\n\n      if (item.roles && item.roles.length) {\n        item.roles.map(function (s) {\n          optRoles.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 571\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var role = item.RoleId || '';\n      item.RoleId = role;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: account,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        disabled: isUsed,\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, \"Choose\"), optas), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"vpcId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }, \"Vpc (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"vpcId\",\n        id: \"vpcId\",\n        value: item.vpcId || '',\n        placeholder: \"Enter vpc\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('vpcId'),\n        autoComplete: \"vpcId\",\n        valid: errors.vpcId === '',\n        invalid: errors.vpcId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, \"Choose\"), optVpcs), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }, errors.vpcId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"subnetId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, \"Subnet (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"subnetId\",\n        id: \"subnetId\",\n        value: item.subnetId || '',\n        placeholder: \"Enter subnet\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('subnetId'),\n        autoComplete: \"subnetId\",\n        valid: errors.subnetId === '',\n        invalid: errors.subnetId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, \"Choose\"), optSubnets), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }, errors.subnetId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"amiId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }, \"Ami(*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"amiId\",\n        id: \"amiId\",\n        value: item.amiId || '',\n        placeholder: \"Enter amiId\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('amiId'),\n        autoComplete: \"amiId\",\n        valid: errors.amiId === '',\n        invalid: errors.amiId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, \"Choose\"), optAmis), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }, errors.amiId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"instanceTypeId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, \"Instance Type (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"instanceTypeId\",\n        id: \"instanceTypeId\",\n        value: item.instanceTypeId || '',\n        placeholder: \"Enter instanceType\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('instanceTypeId'),\n        autoComplete: \"instanceTypeId\",\n        valid: errors.instanceTypeId === '',\n        invalid: errors.instanceTypeId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648\n        },\n        __self: this\n      }, \"Choose\"), optInstanceTypes), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        },\n        __self: this\n      }, errors.instanceTypeId)), securityGroup, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"autoAssignPublicIp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }, \"Auto Assign Public Ip (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"autoAssignPublicIp\",\n        id: \"autoAssignPublicIp\",\n        value: item.autoAssignPublicIp || '',\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('autoAssignPublicIp'),\n        valid: errors.autoAssignPublicIp === '',\n        invalid: errors.autoAssignPublicIp !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"Disable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664\n        },\n        __self: this\n      }, \"Disable\"), React.createElement(\"option\", {\n        value: \"Enable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      }, \"Enable\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, errors.autoAssignPublicIp)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"shutdownBehaviour\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }, \"Shutdown Behaviour (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"shutdownBehaviour\",\n        id: \"shutdownBehaviour\",\n        value: item.shutdownBehaviour || '',\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('shutdownBehaviour'),\n        valid: errors.shutdownBehaviour === '',\n        invalid: errors.shutdownBehaviour !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"Stop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, \"Stop\"), React.createElement(\"option\", {\n        value: \"Terminate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679\n        },\n        __self: this\n      }, \"Terminate\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      }, errors.shutdownBehaviour)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"enableTerminationProtection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }, \"Enable Termination Protection:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"enableTerminationProtection\",\n        id: \"enableTerminationProtection\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('enableTerminationProtection'),\n        checked: item.enableTerminationProtection === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"monitoring\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }, \"Monitoring:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"monitoring\",\n        id: \"monitoring\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('monitoring'),\n        checked: item.monitoring === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"userData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699\n        },\n        __self: this\n      }, \"User Data:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"userData\",\n        id: \"userData\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('userData'),\n        checked: item.userData === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700\n        },\n        __self: this\n      })), encoded64, userDataText, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"roleId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      }, \"Role (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"roleId\",\n        id: \"roleId\",\n        value: item.roleId || '',\n        placeholder: \"Enter roleId\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('roleId'),\n        autoComplete: \"roleId\",\n        valid: errors.roleId === '',\n        invalid: errors.roleId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        },\n        __self: this\n      }, \"Choose\"), optRoles), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, errors.roleId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled || isUsed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return EccEdit;\n}(Component);\n\nexport default withRouter(EccEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\EccEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","Select","API_BASE_URL","FRT_BASE_URL","EccEdit","props","emptyItem","name","account","accounts","accountId","autoAssignPublicIp","shutdownBehaviour","enableTerminationProtection","encoded64","instanceType","amiId","amis","monitoring","userData","userDataText","instanceTypes","instanceTypeId","vpcs","vpcId","subnets","subnetId","sgss","sgs","sgId","roles","roleId","touched","handleBlur","field","evt","item","state","setState","onOptionChange","selectName","selectedOption","options","values","i","l","length","map","s","id","value","push","handleChange","bind","handleSubmit","match","params","fetch","json","ecc","ami","vpc","subnet","role","then","result","jsonResult","cidr","region","event","target","checked","vp","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","console","log","sg","method","headers","body","JSON","stringify","history","title","canc","optas","numAccount","isUsed","targets","optVpcs","optAmis","optInstanceTypes","type","optSubnets","sub","optsg","optsgs","ss","label","securityGroup","e","optRoles","RoleId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\nclass EccEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    autoAssignPublicIp: '', \r\n    shutdownBehaviour: '', \r\n    enableTerminationProtection: false, \r\n    encoded64: false, \r\n    instanceType: '', \r\n    amiId: '',\r\n    amis: [],\r\n    monitoring: false, \r\n    userData: false, \r\n    userDataText: '',\r\n    instanceTypes: [],\r\n    instanceTypeId: '',\r\n    vpcs: [],\r\n    vpcId : '',\r\n    subnets: [],\r\n    subnetId : '',\r\n    sgss: {},\r\n    sgs: [],\r\n    sgId: [],\r\n    roles: [],\r\n    roleId : '',\r\n    touched: {\r\n      autoAssignPublicIp: false, \r\n      shutdownBehaviour: false, \r\n      instanceTypeId: false, \r\n      amiId: false, \r\n      userDataText: false,\r\n      vpcId: false,\r\n      subnetId: false,\r\n      sgId: false,\r\n      name: false,\r\n      accountId: false,\r\n      roleId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const ecc = await (await fetch(`${API_BASE_URL}/eccs/${this.props.match.params.id}`)).json();\r\n      ecc.touched = {\r\n        autoAssignPublicIp: false, \r\n        shutdownBehaviour: false, \r\n        instanceTypeId: false, \r\n        amiId: false, \r\n        userDataText: false,\r\n        vpcId: false,\r\n        subnetId: false,\r\n        sgId: false,\r\n        name: false,\r\n        accountId: false,\r\n        roleId: false\r\n      };\r\n      this.setState({item: ecc});\r\n\r\n      let item = {...this.state.item};\r\n      item.instanceTypeId = ecc.instanceType.id;\r\n      item.amiId = ecc.ami.id;\r\n      item.vpcId = ecc.vpc.id;\r\n      item.accountId = ecc.account.id;\r\n      item.subnetId = ecc.subnet.id;\r\n      if(ecc.role) item.roleId = ecc.role.id;\r\n      else item.roleId = '';\r\n\r\n      await fetch(API_BASE_URL + '/accounts/' + (ecc.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        //let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await (await  fetch(API_BASE_URL + '/regions/' + (ecc.vpc.cidr.region.id) + '/amis',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.amis = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      await (await  fetch(API_BASE_URL + '/vpcs/' + (ecc.vpc.id) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.subnets = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      await (await  fetch(API_BASE_URL + '/vpcs/' + (ecc.vpc.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      await (await  fetch(API_BASE_URL + '/accounts/' + (ecc.account.id) + '/roles',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.roles = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n    \r\n      \r\n\r\n      var values = [];\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.sgs = values;\r\n      this.setState({item: item});\r\n      /*\r\n      */\r\n    }\r\n    else {\r\n      const ecc = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        autoAssignPublicIp: '', \r\n        shutdownBehaviour: '', \r\n        enableTerminationProtection: false, \r\n        encoded64: false, \r\n        instanceType: '', \r\n        instanceType:'',\r\n        amiId: '',\r\n        amis: [],\r\n        monitoring: false, \r\n        userData: false, \r\n        userDataText: '',\r\n        vpcs: [],\r\n        vpcId : '',\r\n        sgss: {},\r\n        sgs: [],\r\n        sgId: [],\r\n        roles: [],\r\n        roleId : '',\r\n        touched: {\r\n          autoAssignPublicIp: false, \r\n          shutdownBehaviour: false, \r\n          instanceTypeId: false, \r\n          amiId: false, \r\n          userDataText: false,\r\n          vpcId: false,\r\n          subnetId: false,\r\n          sgId: false,\r\n          name: false,\r\n          accountId: false,\r\n          roleId: false\r\n        }\r\n      };\r\n      ecc.touched = {\r\n          autoAssignPublicIp: false, \r\n          shutdownBehaviour: false, \r\n          instanceTypeId: false, \r\n          amiId: false, \r\n          userDataText: false,\r\n          vpcId: false,\r\n          subnetId: false,\r\n          sgId: false,\r\n          name: false,\r\n          accountId: false,\r\n          roleId: false\r\n      };\r\n      this.setState({item: ecc});\r\n    }\r\n    \r\n    await fetch(API_BASE_URL + '/instanceTypes',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.instanceTypes = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    });*/\r\n    \r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const name = target.name; \r\n    const value = target.value;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    //enableTerminationProtection monitoring userData encoded64\r\n    if(name === 'enableTerminationProtection')\r\n    {\r\n      item.enableTerminationProtection = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'monitoring')\r\n    {\r\n      item.monitoring = (target.checked) ? true: false;\r\n    } else if(name === 'userData')\r\n    {\r\n      item.userData = (target.checked) ? true: false;\r\n    }else if(name === 'encoded64')\r\n    {\r\n      item.encoded64 = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      item.vpcId = '';\r\n\r\n      item.amis = [];\r\n      item.amiId = '';\r\n      item.ami = {};\r\n\r\n      item.subnetId = '';\r\n      item.subnets = [];\r\n      item.subnet = {};\r\n      \r\n      item.roleId = '';\r\n      item.roles = [];\r\n      item.role = {};\r\n\r\n      item.sgId = '';\r\n      item.sgs = [];\r\n      item.sgss = [];\r\n    }\r\n    else if(name === 'vpcId')\r\n    {\r\n      let vp={};\r\n      fetch(API_BASE_URL + \"/vpcs/\" + item.vpcId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        vp = jsonResult;\r\n        fetch(API_BASE_URL + '/regions/' + (vp.cidr.region.id) + '/amis',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.amis = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/vpcs/' + (vp.id) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnets = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/vpcs/' + (vp.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/accounts/' + (vp.account.id) + '/roles',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.roles = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      });\r\n     \r\n    }\r\n  }\r\n\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      autoAssignPublicIp: true, \r\n      shutdownBehaviour: true, \r\n      instanceTypeId: true, \r\n      amiId: true, \r\n      userDataText: true,\r\n      vpcId: true,\r\n      subnetId: true,\r\n      sgId: true,\r\n      name: true,\r\n      accountId: true,\r\n      roleId: true\r\n    };\r\n    const errors = this.validate(item.name, item.autoAssignPublicIp, item.shutdownBehaviour, item.instanceTypeId, item.amiId, item.userDataText, \r\n      item.userData, item.vpcId, item.subnetId, item.sgId, item.roleId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= FRT_BASE_URL + '/eccs'; \r\n\r\n    if(!item.userData) {\r\n      item.userDataText = '';\r\n      item.encoded64 = false;\r\n    }\r\n    item.instanceType = {id: item.instanceTypeId};\r\n    item.ami = {id: item.amiId};\r\n    item.vpc = {id: item.vpcId};\r\n    item.account = {id: item.accountId};\r\n    item.subnet = {id: item.subnetId};\r\n\r\n    \r\n    if(item.roleId !== \"\") item.role = {id: item.roleId};\r\n    else {\r\n      item.role = null;\r\n\r\n    }\r\n    var values = [];\r\n    if(item.sgs && item.sgs.length){\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n        console.log('item.sg=' + s.id);\r\n      });\r\n      item.sg= values;\r\n    }\r\n    \r\n    await fetch((item.id) ? API_BASE_URL + '/eccs/'+(item.id) : API_BASE_URL + '/ecc', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, autoAssignPublicIp, shutdownBehaviour, instanceTypeId, amiId, userDataText, userData, vpcId, subnetId, sgId, roleId, accountId) {\r\n\r\n    const errors = {\r\n      autoAssignPublicIp: '', \r\n      shutdownBehaviour: '', \r\n      instanceTypeId: '', \r\n      amiId: '', \r\n      userDataText: '',\r\n      vpcId : '',\r\n      subnetId: '',\r\n      sgId: '', \r\n      name:'',\r\n      accountId: '',\r\n      roleId: ''\r\n    };\r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'name type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'vpc type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.subnetId && (!subnetId || subnetId.length === 0)){\r\n      errors.subnetId = 'subnet type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.amiId && amiId.length === 0){\r\n      errors.amiId = 'ami type should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.instanceTypeId && instanceTypeId.length === 0){\r\n      errors.instanceTypeId = 'instanceType should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.autoAssignPublicIp && autoAssignPublicIp.length === 0){\r\n      errors.autoAssignPublicIp = 'autoAssignPublicIp should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.shutdownBehaviour && shutdownBehaviour.length === 0){\r\n      errors.shutdownBehaviour = 'shutdownBehaviour should not be null';\r\n      return errors;\r\n    }\r\n    else if(userData && this.state.item.touched.userDataText && userDataText.length === 0){\r\n      errors.userDataText = 'userDataText type should not be null';\r\n      return errors;\r\n    }\r\n    /*else if(this.state.item.touched.roleId && roleId.length === 0){\r\n      errors.roleId = 'roleId should not be null';\r\n      return errors;\r\n    }*/\r\n        \r\n    return errors;\r\n  }\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'sgId')\r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.sgss && item.sgss.length){\r\n              item.sgss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.sgs = values;\r\n      }\r\n      this.setState({item});\r\n  };\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Ecc' : 'Add Ecc'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.autoAssignPublicIp, item.shutdownBehaviour, item.instanceTypeId, item.amiId, \r\n      item.userDataText, item.userData, item.vpcId, item.subnetId, item.sgId, item.roleId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = FRT_BASE_URL + \"/eccs\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let isUsed = false;\r\n    if(item.id !== '' && (item.targets && item.targets.length !== 0) ) isUsed = true;\r\n\r\n    const encoded64 = (item.userData) ? <FormGroup >\r\n            <Label for=\"encoded64\" >Encoded64:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"encoded64\" id=\"encoded64\" disabled = {isUsed}\r\n                    onChange={this.handleChange} onBlur={this.handleBlur('encoded64')} \r\n                    checked={item.encoded64 === true}/>\r\n          </FormGroup> : '';\r\n    const userDataText = (item.userData) ? <FormGroup>\r\n            <Label for=\"userDataText\">User Data Text(*)</Label>\r\n            <Input type=\"textarea\" name=\"userDataText\" id=\"userDataText\" value={item.userDataText || ''} placeholder=\"Enter userDataText\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('userDataText')} autoComplete=\"userDataText\"\r\n                   valid={errors.userDataText === ''}\r\n                   invalid={errors.userDataText !== ''}\r\n            />\r\n           <FormFeedback>{errors.userDataText}</FormFeedback>\r\n          </FormGroup> : '';\r\n          \r\n    let optVpcs = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          optVpcs.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n    \r\n    let optAmis = [];\r\n    if(item.amis && item.amis.length){\r\n      item.amis.map(s => {  \r\n          optAmis.push(<option key={s.id} value={s.id}>{s.id} {s.name} {s.amiId}</option>);\r\n      });\r\n    }\r\n    let ami = item.amiId || '';\r\n    item.amiId = ami;\r\n\r\n    let optInstanceTypes = [];\r\n    if(item.instanceTypes && item.instanceTypes.length){\r\n      item.instanceTypes.map(s => {  \r\n          optInstanceTypes.push(<option key={s.id} value={s.id}>{s.id} {s.type}</option>);\r\n      });\r\n    }\r\n    let instanceType = item.instanceTypeId || '';\r\n    item.instanceTypeId = instanceType;\r\n\r\n    let optSubnets = [];\r\n    if(item.subnets && item.subnets.length){\r\n      item.subnets.map(s => {  \r\n          optSubnets.push(<option key={s.id} value={s.id}>{s.id} {s.name} </option>);\r\n      });\r\n    }\r\n    let sub = item.subnetId || '';\r\n    item.subnetId = sub;\r\n\r\n    let optsg = [];  \r\n    let optsgs = [];\r\n    if(item.sgss && item.sgss.length){\r\n      item.sgss.map(s => {  \r\n          if(item.sgs && item.sgs.length) item.sgs.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsgs.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsg.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n    const securityGroup = <FormGroup>\r\n            <Label for=\"sgId\">Security Group (*)</Label>\r\n            <Select name=\"sgId\" id=\"sgId\"  placeholder=\"Enter Security group\" isMulti disabled = {isUsed}\r\n              value={optsgs}\r\n              onChange={e => this.onOptionChange(\"sgId\",e)}\r\n              onBlur={this.handleBlur('sgId')}\r\n              options={optsg}\r\n\r\n            />\r\n            <FormFeedback>{errors.sgId}</FormFeedback>\r\n          </FormGroup>;\r\n\r\n    let optRoles = [];\r\n    if(item.roles && item.roles.length){\r\n      item.roles.map(s => {  \r\n          optRoles.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let role = item.RoleId || '';\r\n    item.RoleId = role;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n         <Form onSubmit={this.handleSubmit}>\r\n      \r\n         <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')} disabled = {isUsed}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpc (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\" value={item.vpcId || ''} placeholder=\"Enter vpc\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('vpcId')} autoComplete=\"vpcId\"\r\n                   valid={errors.vpcId === ''}\r\n                   invalid={errors.vpcId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optVpcs}\r\n            </Input>\r\n           <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"subnetId\">Subnet (*)</Label>\r\n            <Input type=\"select\" name=\"subnetId\" id=\"subnetId\" value={item.subnetId || ''} placeholder=\"Enter subnet\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('subnetId')} autoComplete=\"subnetId\"\r\n                   valid={errors.subnetId === ''}\r\n                   invalid={errors.subnetId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optSubnets}\r\n            </Input>\r\n           <FormFeedback>{errors.subnetId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"amiId\">Ami(*)</Label>\r\n            <Input type=\"select\" name=\"amiId\" id=\"amiId\" value={item.amiId || ''} placeholder=\"Enter amiId\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('amiId')} autoComplete=\"amiId\"\r\n                   valid={errors.amiId === ''}\r\n                   invalid={errors.amiId !== ''}>\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optAmis}\r\n            </Input>\r\n           <FormFeedback>{errors.amiId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"instanceTypeId\">Instance Type (*)</Label>\r\n            <Input type=\"select\" name=\"instanceTypeId\" id=\"instanceTypeId\" value={item.instanceTypeId || ''} placeholder=\"Enter instanceType\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('instanceTypeId')} autoComplete=\"instanceTypeId\"\r\n                   valid={errors.instanceTypeId === ''}\r\n                   invalid={errors.instanceTypeId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optInstanceTypes}\r\n            </Input>\r\n           <FormFeedback>{errors.instanceTypeId}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          {securityGroup}\r\n\r\n          <FormGroup>\r\n            <Label for=\"autoAssignPublicIp\">Auto Assign Public Ip (*)</Label>\r\n            <Input type=\"select\" name=\"autoAssignPublicIp\" id=\"autoAssignPublicIp\" value={item.autoAssignPublicIp || ''} disabled = {isUsed}\r\n                 onChange={this.handleChange} onBlur={this.handleBlur('autoAssignPublicIp')} \r\n                 valid={errors.autoAssignPublicIp === ''}\r\n                 invalid={errors.autoAssignPublicIp !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"Disable\">Disable</option>\r\n              <option value=\"Enable\">Enable</option>\r\n            </Input>\r\n            <FormFeedback>{errors.autoAssignPublicIp}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"shutdownBehaviour\">Shutdown Behaviour (*)</Label>\r\n            <Input type=\"select\" name=\"shutdownBehaviour\" id=\"shutdownBehaviour\" value={item.shutdownBehaviour || ''} disabled = {isUsed}\r\n                 onChange={this.handleChange} onBlur={this.handleBlur('shutdownBehaviour')} \r\n                 valid={errors.shutdownBehaviour === ''}\r\n                 invalid={errors.shutdownBehaviour !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"Stop\">Stop</option>\r\n              <option value=\"Terminate\">Terminate</option>\r\n            </Input>\r\n            <FormFeedback>{errors.shutdownBehaviour}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup >\r\n            <Label for=\"enableTerminationProtection\" >Enable Termination Protection:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"enableTerminationProtection\" id=\"enableTerminationProtection\" disabled = {isUsed}\r\n                    onChange={this.handleChange} onBlur={this.handleBlur('enableTerminationProtection')} \r\n                    checked={item.enableTerminationProtection === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"monitoring\" >Monitoring:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"monitoring\" id=\"monitoring\" disabled = {isUsed}\r\n                    onChange={this.handleChange} onBlur={this.handleBlur('monitoring')} \r\n                    checked={item.monitoring === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup >\r\n            <Label for=\"userData\" >User Data:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"userData\" id=\"userData\" disabled = {isUsed}\r\n                    onChange={this.handleChange} onBlur={this.handleBlur('userData')} \r\n                    checked={item.userData === true}/>\r\n          </FormGroup>\r\n\r\n          {encoded64}\r\n          {userDataText}\r\n\r\n          <FormGroup>\r\n            <Label for=\"roleId\">Role (*)</Label>\r\n            <Input type=\"select\" name=\"roleId\" id=\"roleId\" value={item.roleId || ''} placeholder=\"Enter roleId\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('roleId')} autoComplete=\"roleId\"\r\n                   valid={errors.roleId === ''}\r\n                   invalid={errors.roleId !== ''} >\r\n                   <option value=\"\" >Choose</option>\r\n                   {optRoles}\r\n            </Input>\r\n           <FormFeedback>{errors.roleId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled || isUsed}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(EccEdit);"]},"metadata":{},"sourceType":"module"}