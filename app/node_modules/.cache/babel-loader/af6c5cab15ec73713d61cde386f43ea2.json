{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\SubnetManageList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar SubnetManageList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SubnetManageList, _Component);\n\n  function SubnetManageList(props) {\n    var _this;\n\n    _classCallCheck(this, SubnetManageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubnetManageList).call(this, props));\n    _this.state = {\n      subnetcidrs: [],\n      isLoading: true\n    };\n    _this.remove = _this.remove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SubnetManageList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      fetch(\"\".concat(API_BASE_URL, \"/cidrs/\").concat(this.props.match.params.id, \"/subnetcidrs\")).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          subnetcidrs: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(cidrId, id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_BASE_URL, \"/cidrs/\").concat(cidrId, \"/subnetcidrs/\").concat(id), {\n                  method: 'DELETE',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function () {\n                  var updateSubnetCidr = _toConsumableArray(_this3.state.subnetcidrs).filter(function (i) {\n                    return i.id !== id;\n                  });\n\n                  _this3.setState({\n                    subnetcidrs: updateSubnetCidr\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function remove(_x, _x2) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          subnetcidrs = _this$state.subnetcidrs,\n          isLoading = _this$state.isLoading;\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var subnetCidrList = subnetcidrs.map(function (subnetCidr) {\n        var link = FRT_BASE_URL + \"/vpcmanage/\" + subnetCidr.cidr.id; ///vpcmanages/:idc/subnetmanage/:id   /vpcmanage/:id\n\n        var sub = '';\n        var subsub = '';\n\n        if (subnetCidr.subnet) {\n          sub = subnetCidr.subnet.id + \":\" + subnetCidr.subnet.name; ///vpc/1000/subnets/1000\n\n          subsub = FRT_BASE_URL + \"/vpc/\" + subnetCidr.subnet.vpc.id + \"/subnets/\" + subnetCidr.subnet.id;\n        }\n\n        var isDisabled = false;\n        if (subnetCidr.subnet) isDisabled = true;\n        return React.createElement(\"tr\", {\n          key: subnetCidr.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, subnetCidr.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, subnetCidr.subnetCidr), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, subnetCidr.cidr.cidr)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: subsub,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, sub)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, subnetCidr.text), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          tag: Link,\n          to: FRT_BASE_URL + \"/vpcmanages/\" + subnetCidr.cidr.id + \"/subnetmanage/\" + subnetCidr.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this4.remove(subnetCidr.cidr.id, subnetCidr.id);\n          },\n          disabled: isDisabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n      var add = \"\".concat(FRT_BASE_URL, \"/vpcmanages/\").concat(this.props.match.params.id, \"/subnetmanage/new\");\n      var trig = \"\".concat(FRT_BASE_URL, \"/vpcmanage\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        tag: Link,\n        to: trig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Cidrs\"), \"\\xA0\\xA0\\xA0\", React.createElement(Button, {\n        color: \"success\",\n        tag: Link,\n        to: add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Add Subnet Cidr\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Subnet\"), React.createElement(Table, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"subnet\"), React.createElement(\"th\", {\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Cidr\"), React.createElement(\"th\", {\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Subnet vpc\"), React.createElement(\"th\", {\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        width: \"10%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, subnetCidrList))));\n    }\n  }]);\n\n  return SubnetManageList;\n}(Component);\n\nexport default SubnetManageList;","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\SubnetManageList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","API_BASE_URL","FRT_BASE_URL","SubnetManageList","props","state","subnetcidrs","isLoading","remove","bind","setState","fetch","match","params","id","then","response","json","data","cidrId","method","headers","updateSubnetCidr","filter","i","subnetCidrList","map","subnetCidr","link","cidr","sub","subsub","subnet","name","vpc","isDisabled","whiteSpace","text","add","trig"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass SubnetManageList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {subnetcidrs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/cidrs/${this.props.match.params.id}/subnetcidrs`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({subnetcidrs: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(cidrId, id) {\r\n    await fetch(`${API_BASE_URL}/cidrs/${cidrId}/subnetcidrs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateSubnetCidr = [...this.state.subnetcidrs].filter(i => i.id !== id);\r\n      this.setState({subnetcidrs: updateSubnetCidr});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {subnetcidrs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const subnetCidrList = subnetcidrs.map(subnetCidr => {\r\n      \r\n      const link = FRT_BASE_URL + \"/vpcmanage/\" + subnetCidr.cidr.id; ///vpcmanages/:idc/subnetmanage/:id   /vpcmanage/:id\r\n\r\n      let sub = '';\r\n      let subsub ='';\r\n      if(subnetCidr.subnet) {\r\n        sub = subnetCidr.subnet.id + \":\" + subnetCidr.subnet.name ;///vpc/1000/subnets/1000\r\n        subsub = FRT_BASE_URL + \"/vpc/\" + subnetCidr.subnet.vpc.id + \"/subnets/\" + subnetCidr.subnet.id;\r\n      }\r\n      let isDisabled = false;\r\n      if(subnetCidr.subnet) isDisabled=true;\r\n\r\n      return <tr key={subnetCidr.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{subnetCidr.id}</td>\r\n\r\n\t\t    <td>{subnetCidr.subnetCidr}</td>\r\n         \r\n        <td><a href={link}>{subnetCidr.cidr.cidr}</a></td>\r\n\r\n        <td><a href={subsub}>{sub}</a></td>\r\n\r\n\r\n\t\t    <td>{subnetCidr.text}</td>\r\n\t\t\r\n\t\t\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={FRT_BASE_URL + \"/vpcmanages/\" + subnetCidr.cidr.id + \"/subnetmanage/\" + subnetCidr.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(subnetCidr.cidr.id, subnetCidr.id)}  disabled={isDisabled}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n   const add = `${FRT_BASE_URL}/vpcmanages/${this.props.match.params.id}/subnetmanage/new`;\r\n   const trig = `${FRT_BASE_URL}/vpcmanage`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={trig}>Cidrs</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Subnet Cidr</Button>\r\n          </div>\r\n          <h3>Subnet</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"20%\">Id</th> \r\n              <th width=\"20%\">subnet</th> \r\n              <th width=\"20%\">Cidr</th>\r\n\r\n              <th width=\"20%\">Subnet vpc</th>\r\n\r\n\r\n\t\t\t        <th width=\"20%\">Description</th>\r\n\t\t\t        <th width=\"10%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {subnetCidrList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubnetManageList;"]},"metadata":{},"sourceType":"module"}