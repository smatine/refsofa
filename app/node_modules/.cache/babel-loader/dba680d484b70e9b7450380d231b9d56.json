{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\EccNetworkInterfaceList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar EccNetworkInterfaceList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EccNetworkInterfaceList, _Component);\n\n  function EccNetworkInterfaceList(props) {\n    var _this;\n\n    _classCallCheck(this, EccNetworkInterfaceList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EccNetworkInterfaceList).call(this, props));\n    _this.state = {\n      eccNetworkInterfaces: [],\n      isLoading: true\n    };\n    _this.remove = _this.remove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EccNetworkInterfaceList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      fetch(\"\".concat(API_BASE_URL, \"/eccs/\").concat(this.props.match.params.id, \"/eccNetworkInterfaces\")).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          eccNetworkInterfaces: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(accId, id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_BASE_URL, \"/eccs/\").concat(accId, \"/eccNetworkInterfaces/\").concat(id), {\n                  method: 'DELETE',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function () {\n                  var updateEccNetworkInterface = _toConsumableArray(_this3.state.eccNetworkInterfaces).filter(function (i) {\n                    return i.id !== id;\n                  });\n\n                  _this3.setState({\n                    eccNetworkInterfaces: updateEccNetworkInterface\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function remove(_x, _x2) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          eccNetworkInterfaces = _this$state.eccNetworkInterfaces,\n          isLoading = _this$state.isLoading;\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var eccNetworkInterfaceList = eccNetworkInterfaces.map(function (eccNetworkInterface) {\n        var link = FRT_BASE_URL + \"/eccs/\" + eccNetworkInterface.ecc.id;\n        var deleteOnTermination = eccNetworkInterface.deleteOnTermination ? 'Yes' : 'No';\n        return React.createElement(\"tr\", {\n          key: eccNetworkInterface.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, eccNetworkInterface.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, eccNetworkInterface.device), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, eccNetworkInterface.networkInterface), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, eccNetworkInterface.primaryIp), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, eccNetworkInterface.secondaryIp), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, eccNetworkInterface.ipv6Ips), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, eccNetworkInterface.ecc.id)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          tag: Link,\n          to: FRT_BASE_URL + \"/ecc/\" + eccNetworkInterface.ecc.id + \"/eccNetworkInterfaces/\" + eccNetworkInterface.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this4.remove(eccNetworkInterface.ecc.id, eccNetworkInterface.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n      var add = \"\".concat(FRT_BASE_URL, \"/ecc/\").concat(this.props.match.params.id, \"/eccNetworkInterfaces/new\");\n      var ecc = \"\".concat(FRT_BASE_URL, \"/eccs\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        tag: Link,\n        to: ecc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Ec2\"), \"\\xA0\\xA0\\xA0\", React.createElement(Button, {\n        color: \"success\",\n        tag: Link,\n        to: add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Add Ec2 Network Interface\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Ec2 Network Interface\"), React.createElement(Table, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Device\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"NetworkInterface\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"PrimaryIp\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"SecondaryIp\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Ipv6Ips\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Ecc\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, eccNetworkInterfaceList))));\n    }\n  }]);\n\n  return EccNetworkInterfaceList;\n}(Component);\n\nexport default EccNetworkInterfaceList;","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\EccNetworkInterfaceList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","API_BASE_URL","FRT_BASE_URL","EccNetworkInterfaceList","props","state","eccNetworkInterfaces","isLoading","remove","bind","setState","fetch","match","params","id","then","response","json","data","accId","method","headers","updateEccNetworkInterface","filter","i","eccNetworkInterfaceList","map","eccNetworkInterface","link","ecc","deleteOnTermination","whiteSpace","device","networkInterface","primaryIp","secondaryIp","ipv6Ips","add"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\nclass EccNetworkInterfaceList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {eccNetworkInterfaces: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/eccs/${this.props.match.params.id}/eccNetworkInterfaces`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({eccNetworkInterfaces: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/eccs/${accId}/eccNetworkInterfaces/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateEccNetworkInterface = [...this.state.eccNetworkInterfaces].filter(i => i.id !== id);\r\n      this.setState({eccNetworkInterfaces: updateEccNetworkInterface});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {eccNetworkInterfaces, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const eccNetworkInterfaceList = eccNetworkInterfaces.map(eccNetworkInterface => {\r\n      \r\n      const link = FRT_BASE_URL + \"/eccs/\" + eccNetworkInterface.ecc.id; \r\n      const deleteOnTermination= (eccNetworkInterface.deleteOnTermination)? 'Yes': 'No';\r\n      \r\n\r\n      return <tr key={eccNetworkInterface.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{eccNetworkInterface.id}</td>\r\n\r\n\r\n        <td>{eccNetworkInterface.device}</td>\r\n        <td>{eccNetworkInterface.networkInterface}</td>\r\n        <td>{eccNetworkInterface.primaryIp}</td>\r\n        <td>{eccNetworkInterface.secondaryIp}</td>\r\n        <td>{eccNetworkInterface.ipv6Ips}</td>\r\n        \r\n\r\n        <td><a href={link}>{eccNetworkInterface.ecc.id}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={FRT_BASE_URL + \"/ecc/\" + eccNetworkInterface.ecc.id  + \"/eccNetworkInterfaces/\" + eccNetworkInterface.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(eccNetworkInterface.ecc.id, eccNetworkInterface.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${FRT_BASE_URL}/ecc/${this.props.match.params.id}/eccNetworkInterfaces/new`;\r\n    const ecc = `${FRT_BASE_URL}/eccs`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={ecc}>Ec2</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Ec2 Network Interface</Button>\r\n          </div>\r\n          \r\n          <h3>Ec2 Network Interface</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n                    \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Device</th>\r\n              <th width=\"5%\">NetworkInterface</th>\r\n              <th width=\"5%\">PrimaryIp</th>\r\n              <th width=\"5%\">SecondaryIp</th>\r\n              <th width=\"5%\">Ipv6Ips</th>\r\n              \r\n              <th width=\"5%\">Ecc</th> \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {eccNetworkInterfaceList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EccNetworkInterfaceList;"]},"metadata":{},"sourceType":"module"}