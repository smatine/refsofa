{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\InstanceTypeEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL } from './constants';\n\nvar InstanceTypeEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InstanceTypeEdit, _Component);\n\n  function InstanceTypeEdit(props) {\n    var _this;\n\n    _classCallCheck(this, InstanceTypeEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstanceTypeEdit).call(this, props));\n    _this.emptyItem = {\n      family: '',\n      type: '',\n      vcpus: '',\n      memory: '',\n      instanceStorage: '',\n      ebsOptimized: true,\n      networkPerformance: '',\n      touched: {\n        family: false,\n        type: false,\n        vcpus: false,\n        memory: false,\n        instanceStorage: false,\n        networkPerformance: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(InstanceTypeEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var instanceType;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/instanceTypes/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                instanceType = _context.sent;\n                instanceType.touched = {\n                  family: false,\n                  type: false,\n                  vcpus: false,\n                  memory: false,\n                  instanceStorage: false,\n                  networkPerformance: false\n                };\n                this.setState({\n                  item: instanceType\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n\n      if (name === 'ebsOptimized') {\n        item.ebsOptimized = target.checked ? true : false;\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, values;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  family: true,\n                  type: true,\n                  vcpus: true,\n                  memory: true,\n                  instanceStorage: true,\n                  networkPerformance: true\n                };\n                errors = this.validate(item.family, item.type, item.vcpus, item.memory, item.instanceStorage, item.networkPerformance);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                values = [];\n                item.eccs = [];\n\n                if (item.eccs && item.eccs.length) {\n                  item.eccs.map(function (s) {\n                    values.push({\n                      \"id\": s.id\n                    });\n                  });\n                  item.eccs = values;\n                }\n\n                _context2.next = 13;\n                return fetch(item.id ? API_BASE_URL + '/instanceTypes/' + item.id : API_BASE_URL + '/instanceType', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 13:\n                this.props.history.push(API_BASE_URL + '/instanceTypes');\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(family, type, vcpus, memory, instanceStorage, networkPerformance) {\n      var errors = {\n        family: '',\n        type: '',\n        vcpus: '',\n        memory: '',\n        instanceStorage: '',\n        networkPerformance: ''\n      };\n\n      if (this.state.item.touched.family && family.length === 0) {\n        errors.family = 'family should not be null';\n        return errors;\n      } else if (this.state.item.touched.type && type.length === 0) {\n        errors.type = 'type should not be null';\n        return errors;\n      } else if (this.state.item.touched.vcpus && vcpus.length === 0) {\n        errors.vcpus = 'vcpus should not be null';\n        return errors;\n      } else if (this.state.item.touched.memory && memory.length === 0) {\n        errors.memory = 'memory should not be null';\n        return errors;\n      } else if (this.state.item.touched.instanceStorage && instanceStorage.length === 0) {\n        errors.instanceStorage = 'instanceStorage should not be null';\n        return errors;\n      } else if (this.state.item.touched.networkPerformance && networkPerformance.length === 0) {\n        errors.networkPerformance = 'networkPerformance should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, item.id ? 'Edit Instance Type' : 'Add Instance Type');\n      var errors = this.validate(item.family, item.type, item.vcpus, item.memory, item.instanceStorage, item.networkPerformance);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"family\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Family (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"family\",\n        id: \"family\",\n        value: item.family || '',\n        placeholder: \"Enter family\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('family'),\n        autoComplete: \"family\",\n        valid: errors.family === '',\n        invalid: errors.family !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, errors.family)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Type (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"type\",\n        id: \"type\",\n        value: item.type || '',\n        placeholder: \"Enter type\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('type'),\n        autoComplete: \"type\",\n        valid: errors.type === '',\n        invalid: errors.type !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, errors.type)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"vcpus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"vCPUs (*)\"), React.createElement(Input, {\n        type: \"number\",\n        name: \"vcpus\",\n        id: \"vcpus\",\n        value: item.vcpus || '',\n        placeholder: \"Enter vcpus\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('vcpus'),\n        autoComplete: \"vcpus\",\n        valid: errors.vcpus === '',\n        invalid: errors.vcpus !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, errors.vcpus)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"memory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Memory (GiB) (*)\"), React.createElement(Input, {\n        type: \"number\",\n        name: \"memory\",\n        id: \"memory\",\n        value: item.memory || '',\n        placeholder: \"Enter memory\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('memory'),\n        autoComplete: \"memory\",\n        valid: errors.memory === '',\n        invalid: errors.memory !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, errors.memory)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"instanceStorage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Instance Storage (GB) (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"instanceStorage\",\n        id: \"instanceStorage\",\n        value: item.instanceStorage || '',\n        placeholder: \"Enter instanceStorage\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('instanceStorage'),\n        autoComplete: \"instanceStorage\",\n        valid: errors.instanceStorage === '',\n        invalid: errors.instanceStorage !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, errors.instanceStorage)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"ebsOptimized\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"EBS-Optimized Available:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"ebsOptimized\",\n        id: \"ebsOptimized\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('ebsOptimized'),\n        checked: item.ebsOptimized === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"networkPerformance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Network Performance (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"networkPerformance\",\n        id: \"networkPerformance\",\n        value: item.networkPerformance || '',\n        placeholder: \"Enter networkPerformance\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('networkPerformance'),\n        autoComplete: \"networkPerformance\",\n        valid: errors.networkPerformance === '',\n        invalid: errors.networkPerformance !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, errors.networkPerformance)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: \"/instanceTypes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return InstanceTypeEdit;\n}(Component);\n\nexport default withRouter(InstanceTypeEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\InstanceTypeEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","InstanceTypeEdit","props","emptyItem","family","type","vcpus","memory","instanceStorage","ebsOptimized","networkPerformance","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","instanceType","event","target","value","name","checked","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","values","eccs","length","map","s","push","method","headers","body","JSON","stringify","history","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass InstanceTypeEdit extends Component {\r\n\r\n  emptyItem = {\r\n    family:'', \r\n    type:'', \r\n    vcpus:'', \r\n    memory:'', \r\n    instanceStorage:'', \r\n    ebsOptimized: true, \r\n    networkPerformance:'',\r\n    touched: {\r\n      family: false, \r\n      type: false,\r\n      vcpus: false,\r\n      memory: false,\r\n      instanceStorage: false, \r\n      networkPerformance: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const instanceType = await (await fetch(`${API_BASE_URL}/instanceTypes/${this.props.match.params.id}`)).json();\r\n      instanceType.touched = {\r\n        family: false, \r\n        type: false,\r\n        vcpus: false,\r\n        memory: false,\r\n        instanceStorage: false, \r\n        networkPerformance: false\r\n      };\r\n      this.setState({item: instanceType});\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'ebsOptimized')\r\n    {\r\n      item.ebsOptimized = (target.checked) ? true: false;\r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n    \r\n    item.touched = { \r\n      family: true, \r\n      type: true,\r\n      vcpus: true,\r\n      memory: true,\r\n      instanceStorage: true, \r\n      networkPerformance: true\r\n    };\r\n    const errors = this.validate(item.family, item.type, item.vcpus, item.memory, item.instanceStorage, item.networkPerformance);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    var values = [];\r\n    item.eccs=[];\r\n    if(item.eccs && item.eccs.length){\r\n      item.eccs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.eccs= values;\r\n    }\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/instanceTypes/'+(item.id) : API_BASE_URL + '/instanceType', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n\r\n    \r\n    this.props.history.push(API_BASE_URL + '/instanceTypes');\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n  \r\n  validate(family, type, vcpus, memory, instanceStorage, networkPerformance) {\r\n\r\n    const errors = {\r\n      family: '', \r\n      type: '',\r\n      vcpus: '',\r\n      memory: '',\r\n      instanceStorage: '', \r\n      networkPerformance: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.family && family.length === 0){\r\n      errors.family = 'family should not be null';\r\n      return errors;\r\n    } else if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'type should not be null';\r\n      return errors;\r\n    } else if(this.state.item.touched.vcpus && vcpus.length === 0){\r\n      errors.vcpus = 'vcpus should not be null';\r\n      return errors;\r\n    }else if(this.state.item.touched.memory && memory.length === 0){\r\n      errors.memory = 'memory should not be null';\r\n      return errors;\r\n    } else if(this.state.item.touched.instanceStorage && instanceStorage.length === 0){\r\n      errors.instanceStorage = 'instanceStorage should not be null';\r\n      return errors;\r\n    } else if(this.state.item.touched.networkPerformance && networkPerformance.length === 0){\r\n      errors.networkPerformance = 'networkPerformance should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    \r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Instance Type' : 'Add Instance Type'}</h2>;\r\n    \r\n    const errors = this.validate(item.family, item.type, item.vcpus, item.memory, item.instanceStorage, item.networkPerformance);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"family\">Family (*)</Label>\r\n            <Input type=\"text\" name=\"family\" id=\"family\" value={item.family || ''} placeholder=\"Enter family\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('family')} autoComplete=\"family\" \r\n                   valid={errors.family === ''}\r\n                   invalid={errors.family !== ''}\r\n                   />\r\n            <FormFeedback>{errors.family}</FormFeedback>\r\n         </FormGroup>\r\n         \r\n         <FormGroup>\r\n            <Label for=\"type\">Type (*)</Label>\r\n            <Input type=\"text\" name=\"type\" id=\"type\" value={item.type || ''} placeholder=\"Enter type\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\" \r\n                   valid={errors.type === ''}\r\n                   invalid={errors.type !== ''}\r\n                   />\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n         </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"vcpus\">vCPUs (*)</Label>\r\n            <Input type=\"number\" name=\"vcpus\" id=\"vcpus\" value={item.vcpus || ''} placeholder=\"Enter vcpus\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('vcpus')} autoComplete=\"vcpus\" \r\n                   valid={errors.vcpus === ''}\r\n                   invalid={errors.vcpus !== ''}\r\n                   />\r\n            <FormFeedback>{errors.vcpus}</FormFeedback>\r\n         </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"memory\">Memory (GiB) (*)</Label>\r\n            <Input type=\"number\" name=\"memory\" id=\"memory\" value={item.memory || ''} placeholder=\"Enter memory\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('memory')} autoComplete=\"memory\" \r\n                   valid={errors.memory === ''}\r\n                   invalid={errors.memory !== ''}\r\n                   />\r\n            <FormFeedback>{errors.memory}</FormFeedback>\r\n         </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"instanceStorage\">Instance Storage (GB) (*)</Label>\r\n            <Input type=\"text\" name=\"instanceStorage\" id=\"instanceStorage\" value={item.instanceStorage || ''} placeholder=\"Enter instanceStorage\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('instanceStorage')} autoComplete=\"instanceStorage\" \r\n                   valid={errors.instanceStorage === ''}\r\n                   invalid={errors.instanceStorage !== ''}\r\n                   />\r\n            <FormFeedback>{errors.instanceStorage}</FormFeedback>\r\n         </FormGroup>\r\n\r\n         <FormGroup >\r\n            <Label for=\"ebsOptimized\" >EBS-Optimized Available:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"ebsOptimized\" id=\"ebsOptimized\" onChange={this.handleChange} onBlur={this.handleBlur('ebsOptimized')} \r\n                    checked={item.ebsOptimized === true}/>\r\n          </FormGroup>\r\n\r\n\r\n         <FormGroup>\r\n            <Label for=\"networkPerformance\">Network Performance (*)</Label>\r\n            <Input type=\"text\" name=\"networkPerformance\" id=\"networkPerformance\" value={item.networkPerformance || ''} placeholder=\"Enter networkPerformance\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('networkPerformance')} autoComplete=\"networkPerformance\" \r\n                   valid={errors.networkPerformance === ''}\r\n                   invalid={errors.networkPerformance !== ''}\r\n                   />\r\n            <FormFeedback>{errors.networkPerformance}</FormFeedback>\r\n         </FormGroup>\r\n\r\n          <FormGroup>   \r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to=\"/instanceTypes\">Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(InstanceTypeEdit);"]},"metadata":{},"sourceType":"module"}