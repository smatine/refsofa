{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\PolicyList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL } from './constants';\n\nvar PolicyList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PolicyList, _Component);\n\n  function PolicyList(props) {\n    var _this;\n\n    _classCallCheck(this, PolicyList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PolicyList).call(this, props));\n    _this.state = {\n      policys: [],\n      isLoading: true\n    };\n    _this.remove = _this.remove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PolicyList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      fetch(\"\".concat(API_BASE_URL, \"/policys\")).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          policys: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(accId, id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_BASE_URL, \"/accounts/\").concat(accId, \"/policys/\").concat(id), {\n                  method: 'DELETE',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function () {\n                  var updatePolicy = _toConsumableArray(_this3.state.policys).filter(function (i) {\n                    return i.id !== id;\n                  });\n\n                  _this3.setState({\n                    policys: updatePolicy\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function remove(_x, _x2) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          policys = _this$state.policys,\n          isLoading = _this$state.isLoading;\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var policyList = policys.map(function (policy) {\n        var link = API_BASE_URL + \"/accounts/\" + policy.account.id;\n        /*\r\n            const loadBalancing= (policy.loadBalancing)? 'Yes': 'No'; \r\n            const createPolicy= (policy.createPolicy)? 'Yes': 'No';      \r\n            \r\n            let subs='';\r\n            if(policy.subnets && policy.subnets.length){\r\n                policy.subnets.map(s => {  \r\n                  subs = subs + s.id + \":\" + s.name + \":\" + s.az.name + \"| \";\r\n              });\r\n            }  \r\n        */\n\n        var roles = '';\n\n        if (policy.roles && policy.roles.length) {\n          policy.roles.map(function (t) {\n            roles = roles + t + \"| \";\n          });\n        }\n\n        var groups = '';\n\n        if (policy.groups && policy.groups.length) {\n          policy.groups.map(function (t) {\n            groups = groups + t + \"| \";\n          });\n        }\n\n        var endPoints = '';\n\n        if (policy.endPoints && policy.endPoints.length) {\n          policy.endPoints.map(function (t) {\n            endPoints = endPoints + t + \"| \";\n          });\n        }\n\n        var isUsed = false;\n        if (roles !== '' || groups !== '' || endPoints !== '') isUsed = true;\n        return React.createElement(\"tr\", {\n          key: policy.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, policy.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, policy.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, policy.policyJson), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, policy.account.numAccount)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, policy.description), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, roles), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, groups), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, endPoints), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          tag: Link,\n          to: API_BASE_URL + \"/policys/\" + policy.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this4.remove(policy.account.id, policy.id);\n          },\n          disabled: isUsed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n      var add = \"\".concat(API_BASE_URL, \"/policys/new\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        tag: Link,\n        to: add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Add Policy\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Policy\"), React.createElement(Table, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Policy Json\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Account\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Roles\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Groups\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"EndPoints\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, policyList))));\n    }\n  }]);\n\n  return PolicyList;\n}(Component);\n\nexport default PolicyList;","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\PolicyList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","API_BASE_URL","PolicyList","props","state","policys","isLoading","remove","bind","setState","fetch","then","response","json","data","accId","id","method","headers","updatePolicy","filter","i","policyList","map","policy","link","account","roles","length","t","groups","endPoints","isUsed","whiteSpace","name","policyJson","numAccount","description","add"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass PolicyList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {policys: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/policys`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({policys: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/policys/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updatePolicy = [...this.state.policys].filter(i => i.id !== id);\r\n      this.setState({policys: updatePolicy});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {policys, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const policyList = policys.map(policy => {\r\n      \r\n    const link = API_BASE_URL + \"/accounts/\" + policy.account.id; \r\n/*\r\n    const loadBalancing= (policy.loadBalancing)? 'Yes': 'No'; \r\n    const createPolicy= (policy.createPolicy)? 'Yes': 'No';      \r\n    \r\n    let subs='';\r\n    if(policy.subnets && policy.subnets.length){\r\n        policy.subnets.map(s => {  \r\n          subs = subs + s.id + \":\" + s.name + \":\" + s.az.name + \"| \";\r\n      });\r\n    }  \r\n*/\r\n    let roles='';\r\n    if(policy.roles && policy.roles.length){\r\n        policy.roles.map(t => {  \r\n          roles = roles + t + \"| \";\r\n      });\r\n    }  \r\n    let groups='';\r\n    if(policy.groups && policy.groups.length){\r\n        policy.groups.map(t => {  \r\n          groups = groups + t + \"| \";\r\n      });\r\n    }  \r\n    let endPoints='';    \r\n    if(policy.endPoints && policy.endPoints.length){\r\n        policy.endPoints.map(t => {  \r\n          endPoints = endPoints + t  + \"| \";\r\n      });\r\n    }  \r\n    let isUsed = false;\r\n    if(roles !== '' || groups !== '' || endPoints !== '') isUsed = true;\r\n\r\n      return <tr key={policy.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{policy.id}</td> \r\n        <td>{policy.name}</td>\r\n        <td>{policy.policyJson}</td>\r\n        <td><a href={link}>{policy.account.numAccount}</a></td>\r\n        <td>{policy.description}</td>\r\n        <td>{roles}</td>\r\n        <td>{groups}</td>\r\n        <td>{endPoints}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/policys/\" + policy.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(policy.account.id, policy.id)} disabled={isUsed}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/policys/new`;\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Policy</Button>\r\n          </div>\r\n          \r\n          <h3>Policy</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n      \r\n              <th width=\"5%\">Id</th> \r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Policy Json</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Roles</th>\r\n              <th width=\"5%\">Groups</th>\r\n              <th width=\"5%\">EndPoints</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {policyList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default PolicyList;"]},"metadata":{},"sourceType":"module"}