{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _pageResolver2 = require('./page-resolver');\n\nvar _pageResolver3 = _interopRequireDefault(_pageResolver2);\n\nvar _sizePerPageDropdown = require('./size-per-page-dropdown');\n\nvar _sizePerPageDropdown2 = _interopRequireDefault(_sizePerPageDropdown);\n\nvar _paginationList = require('./pagination-list');\n\nvar _paginationList2 = _interopRequireDefault(_paginationList);\n\nvar _paginationTotal = require('./pagination-total');\n\nvar _paginationTotal2 = _interopRequireDefault(_paginationTotal);\n\nvar _const = require('./const');\n\nvar _const2 = _interopRequireDefault(_const);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint react/require-default-props: 0 */\n\n/* eslint arrow-body-style: 0 */\n\n\nvar Pagination = function (_pageResolver) {\n  _inherits(Pagination, _pageResolver);\n\n  function Pagination(props) {\n    _classCallCheck(this, Pagination);\n\n    var _this = _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).call(this, props));\n\n    _this.defaultTotal = function (from, to, size) {\n      return _react2.default.createElement(_paginationTotal2.default, {\n        from: from,\n        to: to,\n        dataSize: size\n      });\n    };\n\n    _this.setTotal = function (from, to, size, total) {\n      if (total && typeof total === 'function') {\n        return total(from, to, size);\n      }\n\n      return _this.defaultTotal(from, to, size);\n    };\n\n    _this.closeDropDown = _this.closeDropDown.bind(_this);\n    _this.toggleDropDown = _this.toggleDropDown.bind(_this);\n    _this.handleChangePage = _this.handleChangePage.bind(_this);\n    _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);\n    _this.state = _this.initialState();\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var dataSize = nextProps.dataSize,\n          currSizePerPage = nextProps.currSizePerPage;\n\n      if (currSizePerPage !== this.props.currSizePerPage || dataSize !== this.props.dataSize) {\n        var totalPages = this.calculateTotalPage(currSizePerPage, dataSize);\n        var lastPage = this.calculateLastPage(totalPages);\n        this.setState({\n          totalPages: totalPages,\n          lastPage: lastPage\n        });\n      }\n    }\n  }, {\n    key: 'toggleDropDown',\n    value: function toggleDropDown() {\n      var dropdownOpen = !this.state.dropdownOpen;\n      this.setState(function () {\n        return {\n          dropdownOpen: dropdownOpen\n        };\n      });\n    }\n  }, {\n    key: 'closeDropDown',\n    value: function closeDropDown() {\n      this.setState(function () {\n        return {\n          dropdownOpen: false\n        };\n      });\n    }\n  }, {\n    key: 'handleChangeSizePerPage',\n    value: function handleChangeSizePerPage(sizePerPage) {\n      var _props = this.props,\n          currSizePerPage = _props.currSizePerPage,\n          onSizePerPageChange = _props.onSizePerPageChange;\n      var selectedSize = typeof sizePerPage === 'string' ? parseInt(sizePerPage, 10) : sizePerPage;\n      var currPage = this.props.currPage;\n\n      if (selectedSize !== currSizePerPage) {\n        var newTotalPages = this.calculateTotalPage(selectedSize);\n        var newLastPage = this.calculateLastPage(newTotalPages);\n        if (currPage > newLastPage) currPage = newLastPage;\n        onSizePerPageChange(selectedSize, currPage);\n      }\n\n      this.closeDropDown();\n    }\n  }, {\n    key: 'handleChangePage',\n    value: function handleChangePage(newPage) {\n      var page = void 0;\n      var _props2 = this.props,\n          currPage = _props2.currPage,\n          pageStartIndex = _props2.pageStartIndex,\n          prePageText = _props2.prePageText,\n          nextPageText = _props2.nextPageText,\n          lastPageText = _props2.lastPageText,\n          firstPageText = _props2.firstPageText,\n          onPageChange = _props2.onPageChange;\n      var lastPage = this.state.lastPage;\n\n      if (newPage === prePageText) {\n        page = this.backToPrevPage();\n      } else if (newPage === nextPageText) {\n        page = currPage + 1 > lastPage ? lastPage : currPage + 1;\n      } else if (newPage === lastPageText) {\n        page = lastPage;\n      } else if (newPage === firstPageText) {\n        page = pageStartIndex;\n      } else {\n        page = parseInt(newPage, 10);\n      } // if (keepSizePerPageState) { this.closeDropDown(); }\n\n\n      if (page !== currPage) {\n        onPageChange(page);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          totalPages = _state.totalPages,\n          lastPage = _state.lastPage,\n          open = _state.dropdownOpen;\n      var _props3 = this.props,\n          showTotal = _props3.showTotal,\n          dataSize = _props3.dataSize,\n          paginationTotalRenderer = _props3.paginationTotalRenderer,\n          sizePerPageList = _props3.sizePerPageList,\n          currSizePerPage = _props3.currSizePerPage,\n          hideSizePerPage = _props3.hideSizePerPage,\n          hidePageListOnlyOnePage = _props3.hidePageListOnlyOnePage;\n      var pages = this.calculatePageStatus(this.calculatePages(totalPages), lastPage);\n\n      var _calculateFromTo = this.calculateFromTo(),\n          _calculateFromTo2 = _slicedToArray(_calculateFromTo, 2),\n          from = _calculateFromTo2[0],\n          to = _calculateFromTo2[1];\n\n      var pageListClass = (0, _classnames2.default)('react-bootstrap-table-pagination-list', 'col-md-6 col-xs-6 col-sm-6 col-lg-6', {\n        'react-bootstrap-table-pagination-list-hidden': hidePageListOnlyOnePage && totalPages === 1\n      });\n      return _react2.default.createElement('div', {\n        className: 'row react-bootstrap-table-pagination'\n      }, _react2.default.createElement('div', {\n        className: 'col-md-6 col-xs-6 col-sm-6 col-lg-6'\n      }, sizePerPageList.length > 1 && !hideSizePerPage ? _react2.default.createElement(_sizePerPageDropdown2.default, {\n        currSizePerPage: '' + currSizePerPage,\n        options: this.calculateSizePerPageStatus(),\n        onSizePerPageChange: this.handleChangeSizePerPage,\n        onClick: this.toggleDropDown,\n        onBlur: this.closeDropDown,\n        open: open\n      }) : null, showTotal ? this.setTotal(from, to, dataSize, paginationTotalRenderer) : null), _react2.default.createElement('div', {\n        className: pageListClass\n      }, _react2.default.createElement(_paginationList2.default, {\n        pages: pages,\n        onPageChange: this.handleChangePage\n      })));\n    }\n  }]);\n\n  return Pagination;\n}((0, _pageResolver3.default)(_react.Component));\n\nPagination.propTypes = {\n  dataSize: _propTypes2.default.number.isRequired,\n  sizePerPageList: _propTypes2.default.array.isRequired,\n  currPage: _propTypes2.default.number.isRequired,\n  currSizePerPage: _propTypes2.default.number.isRequired,\n  onPageChange: _propTypes2.default.func.isRequired,\n  onSizePerPageChange: _propTypes2.default.func.isRequired,\n  pageStartIndex: _propTypes2.default.number,\n  paginationSize: _propTypes2.default.number,\n  showTotal: _propTypes2.default.bool,\n  paginationTotalRenderer: _propTypes2.default.func,\n  firstPageText: _propTypes2.default.string,\n  prePageText: _propTypes2.default.string,\n  nextPageText: _propTypes2.default.string,\n  lastPageText: _propTypes2.default.string,\n  nextPageTitle: _propTypes2.default.string,\n  prePageTitle: _propTypes2.default.string,\n  firstPageTitle: _propTypes2.default.string,\n  lastPageTitle: _propTypes2.default.string,\n  withFirstAndLast: _propTypes2.default.bool,\n  alwaysShowAllBtns: _propTypes2.default.bool,\n  hideSizePerPage: _propTypes2.default.bool,\n  hidePageListOnlyOnePage: _propTypes2.default.bool\n};\nPagination.defaultProps = {\n  pageStartIndex: _const2.default.PAGE_START_INDEX,\n  paginationSize: _const2.default.PAGINATION_SIZE,\n  withFirstAndLast: _const2.default.With_FIRST_AND_LAST,\n  alwaysShowAllBtns: _const2.default.SHOW_ALL_PAGE_BTNS,\n  showTotal: _const2.default.SHOW_TOTAL,\n  paginationTotalRenderer: _const2.default.PAGINATION_TOTAL,\n  firstPageText: _const2.default.FIRST_PAGE_TEXT,\n  prePageText: _const2.default.PRE_PAGE_TEXT,\n  nextPageText: _const2.default.NEXT_PAGE_TEXT,\n  lastPageText: _const2.default.LAST_PAGE_TEXT,\n  sizePerPageList: _const2.default.SIZE_PER_PAGE_LIST,\n  nextPageTitle: _const2.default.NEXT_PAGE_TITLE,\n  prePageTitle: _const2.default.PRE_PAGE_TITLE,\n  firstPageTitle: _const2.default.FIRST_PAGE_TITLE,\n  lastPageTitle: _const2.default.LAST_PAGE_TITLE,\n  hideSizePerPage: _const2.default.HIDE_SIZE_PER_PAGE,\n  hidePageListOnlyOnePage: _const2.default.HIDE_PAGE_LIST_ONLY_ONE_PAGE\n};\nexports.default = Pagination;","map":null,"metadata":{},"sourceType":"script"}