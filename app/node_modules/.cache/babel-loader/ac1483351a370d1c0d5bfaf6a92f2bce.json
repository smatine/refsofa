{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\SgEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL } from './constants';\n\nvar SgEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SgEdit, _Component);\n\n  function SgEdit(props) {\n    var _this;\n\n    _classCallCheck(this, SgEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SgEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      nameTag: '',\n      account: {},\n      accounts: {},\n      accountId: '',\n      text: '',\n      vpc: {},\n      vpcs: {},\n      vpcId: '',\n      touched: {\n        name: false,\n        accountId: false,\n        vpcId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SgEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var sg, item, _sg2, _sg;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/sgs/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                sg = _context.sent;\n                sg.touched = {\n                  name: false,\n                  accountId: false,\n                  vpcId: false\n                };\n                this.setState({\n                  item: sg\n                });\n                _context.next = 10;\n                return fetch(API_BASE_URL + '/accounts/' + sg.account.id + '/vpcs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.vpcs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 10:\n                item = _objectSpread({}, this.state.item);\n                item.vpcId = sg.vpc.id;\n                item.accountId = sg.account.id;\n                this.setState({\n                  item: item\n                });\n                _context.next = 19;\n                break;\n\n              case 16:\n                _sg = (_sg2 = {\n                  name: '',\n                  accountId: false,\n                  nameTag: '',\n                  account: {},\n                  accounts: {}\n                }, _defineProperty(_sg2, \"accountId\", ''), _defineProperty(_sg2, \"text\", ''), _defineProperty(_sg2, \"vpc\", {}), _defineProperty(_sg2, \"vpcs\", {}), _defineProperty(_sg2, \"vpcId\", ''), _defineProperty(_sg2, \"touched\", {\n                  name: false,\n                  vpcId: false\n                }), _sg2);\n                _sg.touched = {\n                  name: false,\n                  accountId: false,\n                  vpcId: false\n                };\n                this.setState({\n                  item: _sg\n                });\n\n              case 19:\n                _context.next = 21;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n\n      if (name === 'accountId') {\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/vpcs').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.vpcs = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        item.vpcId = '';\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist, lbs, sgLbs, rdss, sgRdss, eccs, sgEccs, elasticaches, sgElasticcachess, launchConfigurations, sglaunchConfigurations;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  accountId: true,\n                  vpcId: true\n                };\n                errors = this.validate(item.name, item.vpcId, item.accountId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/sgs';\n                item.vpc = {\n                  id: item.vpcId\n                };\n                item.account = {\n                  id: item.accountId\n                };\n                lbs = [];\n\n                if (item.lbs && item.lbs.length !== 0) {\n                  sgLbs = item.lbs.map(function (lb) {\n                    lbs.push({\n                      id: lb.id\n                    });\n                  });\n                  item.lbs = lbs;\n                }\n\n                rdss = [];\n\n                if (item.rdss && item.rdss.length !== 0) {\n                  sgRdss = item.rdss.map(function (rds) {\n                    rdss.push({\n                      id: rds.id\n                    });\n                  });\n                  item.rdss = rdss;\n                }\n\n                eccs = [];\n\n                if (item.eccs && item.eccs.length !== 0) {\n                  sgEccs = item.eccs.map(function (ecc) {\n                    eccs.push({\n                      id: ecc.id\n                    });\n                  });\n                  item.eccs = eccs;\n                }\n\n                elasticaches = [];\n\n                if (item.elasticaches && item.elasticaches.length !== 0) {\n                  sgElasticcachess = item.elasticaches.map(function (e) {\n                    elasticaches.push({\n                      id: e.id\n                    });\n                  });\n                  item.elasticaches = elasticaches;\n                }\n\n                launchConfigurations = [];\n\n                if (item.launchConfigurations && item.launchConfigurations.length !== 0) {\n                  sglaunchConfigurations = item.launchConfigurations.map(function (e) {\n                    launchConfigurations.push({\n                      id: e.id\n                    });\n                  });\n                  item.launchConfigurations = launchConfigurations;\n                } //return;\n\n\n                _context2.next = 23;\n                return fetch(item.id ? API_BASE_URL + '/vpcs/' + item.vpc.id + '/sgs/' + item.id : API_BASE_URL + '/vpcs/' + item.vpc.id + '/sgs', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 23:\n                this.props.history.push(hist);\n\n              case 24:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, vpcId, accountId) {\n      var errors = {\n        name: '',\n        accountId: '',\n        vpcId: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      } else if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'accountId should not be null';\n        return errors;\n      } else if (this.state.item.touched.vpcId && vpcId.length === 0) {\n        errors.vpcId = 'Vpc should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, item.id ? 'Edit sg' : 'Add sg');\n      var errors = this.validate(item.name, item.vpcId, item.accountId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/sgs\";\n      var optas = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          optas.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount));\n        });\n      }\n\n      var account = item.accountId || '';\n      item.accountId = account;\n      var opts = [];\n\n      if (item.vpcs && item.vpcs.length) {\n        item.vpcs.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var vpc = item.vpcId || '';\n      item.vpcId = vpc;\n      var isLb = item.lbs && item.lbs.length !== 0 ? true : false;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"nameTag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Name tag (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"nameTag\",\n        id: \"nameTag\",\n        value: item.nameTag || '',\n        placeholder: \"Enter nameTag\",\n        onChange: this.handleChange,\n        autoComplete: \"nameTag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: account,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        disabled: isLb,\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Choose\"), optas), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"vpcId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Vpcs (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"vpcId\",\n        id: \"vpcId\",\n        value: vpc,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('vpcId'),\n        disabled: isLb,\n        valid: errors.vpcId === '',\n        invalid: errors.vpcId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, errors.vpcId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return SgEdit;\n}(Component);\n\nexport default withRouter(SgEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\SgEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","SgEdit","props","emptyItem","name","nameTag","account","accounts","accountId","text","vpc","vpcs","vpcId","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","sg","then","result","jsonResult","event","target","value","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","lbs","length","sgLbs","map","lb","push","rdss","sgRdss","rds","eccs","sgEccs","ecc","elasticaches","sgElasticcachess","e","launchConfigurations","sglaunchConfigurations","method","headers","body","JSON","stringify","history","title","canc","optas","s","numAccount","opts","isLb"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SgEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    nameTag: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    text: '',\r\n\t  vpc: {},\r\n    vpcs: {},\r\n  \tvpcId : '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const sg = await (await fetch(`${API_BASE_URL}/sgs/${this.props.match.params.id}`)).json();\r\n      sg.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false\r\n      };\r\n      this.setState({item: sg});\r\n      \r\n      await fetch(API_BASE_URL + '/accounts/' + (sg.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      }); \r\n\r\n      let item = {...this.state.item};\r\n      item.vpcId = sg.vpc.id;\r\n      item.accountId = sg.account.id;\r\n      \r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const sg = {\r\n        name: '',\r\n        accountId: false,\r\n        nameTag: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        text: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        touched: {\r\n          name: false,\r\n          vpcId: false\r\n        }\r\n      };\r\n      sg.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false\r\n      };\r\n      this.setState({item: sg});\r\n    }\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*\r\n    await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    \r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          vpcId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/sgs'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    \r\n    let lbs = [];\r\n    if(item.lbs && item.lbs.length !== 0)\r\n    {\r\n      const sgLbs = item.lbs.map(lb => {\r\n          lbs.push({id: lb.id});\r\n      });\r\n      item.lbs = lbs;\r\n    }\r\n\r\n    let rdss = [];\r\n    if(item.rdss && item.rdss.length !== 0)\r\n    {\r\n      const sgRdss = item.rdss.map(rds => {\r\n          rdss.push({id: rds.id});\r\n      });\r\n      item.rdss = rdss;\r\n    }\r\n\r\n    let eccs = [];\r\n    if(item.eccs && item.eccs.length !== 0)\r\n    {\r\n      const sgEccs = item.eccs.map(ecc => {\r\n          eccs.push({id: ecc.id});\r\n      });\r\n      item.eccs = eccs;\r\n    }\r\n\r\n    let elasticaches = [];\r\n    if(item.elasticaches && item.elasticaches.length !== 0)\r\n    {\r\n      const sgElasticcachess = item.elasticaches.map(e => {\r\n          elasticaches.push({id: e.id});\r\n      });\r\n      item.elasticaches = elasticaches;\r\n    }\r\n\r\n     let launchConfigurations = [];\r\n    if(item.launchConfigurations && item.launchConfigurations.length !== 0)\r\n    {\r\n      const sglaunchConfigurations = item.launchConfigurations.map(e => {\r\n          launchConfigurations.push({id: e.id});\r\n      });\r\n      item.launchConfigurations = launchConfigurations;\r\n    }\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/sgs/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/sgs', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit sg' : 'Add sg'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/sgs\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n    \r\n    const isLb = (item.lbs && item.lbs.length !== 0) ? true : false;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          <FormGroup>\r\n            <Label for=\"nameTag\">Name tag (*)</Label>\r\n            <Input type=\"text\" name=\"nameTag\" id=\"nameTag\" value={item.nameTag || ''} placeholder=\"Enter nameTag\"\r\n                   onChange={this.handleChange} autoComplete=\"nameTag\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')} disabled={isLb}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')} disabled={isLb}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         \r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(SgEdit);"]},"metadata":{},"sourceType":"module"}