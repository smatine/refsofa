{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\RoleEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport Select from 'react-select';\nimport { API_BASE_URL } from './constants';\n\nvar RoleEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RoleEdit, _Component);\n\n  function RoleEdit(props) {\n    var _this;\n\n    _classCallCheck(this, RoleEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RoleEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      description: '',\n      serviceName: '',\n      account: {},\n      accounts: [],\n      accountId: '',\n      policys: [],\n      policyss: [],\n      policyId: [],\n      touched: {\n        name: false,\n        accountId: false,\n        serviceName: false,\n        policyId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.onOptionChange = function (selectName, selectedOption) {\n      var item = _this.state.item;\n      var options = selectedOption;\n      var values = [];\n\n      if (selectName === 'policyId') {\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (item.policyss && item.policyss.length) {\n            item.policyss.map(function (s) {\n              if (s.id == options[i].value) {\n                values.push({\n                  \"id\": s.id\n                });\n              }\n            });\n          }\n        }\n\n        item.policys = values;\n      }\n\n      _this.setState({\n        item: item\n      });\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RoleEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var role, account, item, values, _role;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/roles/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                role = _context.sent;\n                role.touched = {\n                  name: false,\n                  accountId: false,\n                  serviceName: false,\n                  policyId: false\n                };\n                this.setState({\n                  item: role\n                });\n                account = {};\n                _context.next = 11;\n                return fetch(API_BASE_URL + \"/accounts/\" + role.account.id).then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  account = jsonResult;\n                  fetch(API_BASE_URL + '/accounts/' + account.id + '/policys').then(function (result) {\n                    return result.json();\n                  }).then(function (jsonResult) {\n                    var item = _objectSpread({}, _this2.state.item);\n\n                    item.policyss = jsonResult;\n\n                    _this2.setState({\n                      item: item\n                    });\n                  });\n                });\n\n              case 11:\n                item = _objectSpread({}, this.state.item);\n                item.accountId = role.account.id;\n                values = [];\n                item.policys.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.policys = values;\n                this.setState({\n                  item: item\n                });\n                _context.next = 22;\n                break;\n\n              case 19:\n                _role = {\n                  name: '',\n                  description: '',\n                  serviceName: '',\n                  account: {},\n                  accounts: [],\n                  accountId: '',\n                  policys: [],\n                  policyss: [],\n                  policyId: [],\n                  touched: {\n                    name: false,\n                    accountId: false,\n                    roleJson: false,\n                    policyId: false\n                  }\n                };\n                _role.touched = {\n                  name: false,\n                  accountId: false,\n                  serviceName: false,\n                  policyId: false\n                };\n                this.setState({\n                  item: _role\n                });\n\n              case 22:\n                _context.next = 24;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n\n      if (name === 'accountId') {\n        var account = {};\n        fetch(API_BASE_URL + \"/accounts/\" + item.accountId).then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          account = jsonResult;\n          fetch(API_BASE_URL + '/accounts/' + account.id + '/policys').then(function (result) {\n            return result.json();\n          }).then(function (jsonResult) {\n            var item = _objectSpread({}, _this3.state.item);\n\n            item.policyss = jsonResult;\n\n            _this3.setState({\n              item: item\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  accountId: true,\n                  serviceName: true,\n                  policyId: true\n                };\n                errors = this.validate(item.name, item.accountId, item.serviceName, item.policyId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/roles';\n                item.account = {\n                  id: item.accountId\n                };\n                _context2.next = 12;\n                return fetch(item.id ? API_BASE_URL + '/accounts/' + item.account.id + '/roles/' + item.id : API_BASE_URL + '/accounts/' + item.account.id + '/roles', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 12:\n                this.props.history.push(hist);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, accountId, serviceName, policyId) {\n      var errors = {\n        name: '',\n        accountId: '',\n        serviceName: '',\n        policyId: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'Vpc should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.serviceName && serviceName.length === 0) {\n        errors.serviceName = 'serviceName should not be null';\n        return errors;\n      }\n      /*\r\n          if(this.state.item.touched.policyId  && this.state.item.policys.length === 0){\r\n            errors.policyId = 'Add policyId.';\r\n            return errors;\r\n          }\r\n      */\n\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, item.id ? 'Edit Role' : 'Add Role');\n      var errors = this.validate(item.name, item.accountId, item.serviceName, item.policyId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/roles\";\n      var opts = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var account = item.accountId || '';\n      item.accountId = account;\n      var isUsed = false; //if(item.id !== '' && ((item.roles && item.roles.length !== 0) || (item.groups && item.groups.length !== 0) || (item.endPoints && item.endPoints.length !== 0)) ) isUsed = true; \n\n      var optsp = [];\n      var optsps = [];\n\n      if (item.policyss && item.policyss.length) {\n        item.policyss.map(function (s) {\n          if (item.policys && item.policys.length) item.policys.map(function (ss) {\n            if (s.id == ss.id) {\n              optsp.push({\n                value: s.id,\n                label: s.name\n              });\n            }\n          });\n          optsps.push({\n            value: s.id,\n            label: s.name\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Use alphanumeric and '+=,.@-_' characters. Maximum 64 characters.\"), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: account,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        disabled: isUsed,\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"serviceName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Service Name (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"serviceName\",\n        id: \"serviceName\",\n        value: item.serviceName || '',\n        disabled: isUsed,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('serviceName'),\n        valid: errors.serviceName === '',\n        invalid: errors.serviceName !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"AutoScaling\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Auto Scaling\"), React.createElement(\"option\", {\n        value: \"DynamoDB\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"DynamoDB\"), React.createElement(\"option\", {\n        value: \"EC2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"EC2\"), React.createElement(\"option\", {\n        value: \"ElasticLoadBalancing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"ElasticLoadBalancing\"), React.createElement(\"option\", {\n        value: \"ElasticCache\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"ElasticCache\"), React.createElement(\"option\", {\n        value: \"EKS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"EKS\"), React.createElement(\"option\", {\n        value: \"Lambda\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Lambda\"), React.createElement(\"option\", {\n        value: \"Rds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Rds\"), React.createElement(\"option\", {\n        value: \"S3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"S3\"), React.createElement(\"option\", {\n        value: \"SNS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"SNS\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, errors.serviceName)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"policyId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Policies\"), React.createElement(Select, {\n        name: \"policyId\",\n        id: \"policyId\",\n        placeholder: \"Enter policyId\",\n        isMulti: true,\n        value: optsp,\n        onChange: function onChange(e) {\n          return _this4.onOptionChange(\"policyId\", e);\n        },\n        onBlur: this.handleBlur('policyId'),\n        options: optsps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, errors.policyId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Description (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        value: item.description || '',\n        placeholder: \"Enter description\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('description'),\n        autoComplete: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Maximum 1000 characters. Use alphanumeric and '+=,.@-_' characters\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return RoleEdit;\n}(Component);\n\nexport default withRouter(RoleEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\RoleEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","FormText","AppNavbar","Select","API_BASE_URL","RoleEdit","props","emptyItem","name","description","serviceName","account","accounts","accountId","policys","policyss","policyId","touched","handleBlur","field","evt","item","state","setState","onOptionChange","selectName","selectedOption","options","values","i","l","length","map","s","id","value","push","handleChange","bind","handleSubmit","match","params","fetch","json","role","then","result","jsonResult","roleJson","event","target","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","title","canc","opts","isUsed","optsp","optsps","ss","label","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RoleEdit extends Component {\r\npolicies\r\n  emptyItem = {\r\n    name: '',\r\n    description: '', \r\n    serviceName: '',\r\n\t  account: {},\r\n    accounts: [],\r\n  \taccountId : '',\r\n    policys: [],\r\n    policyss: [],\r\n    policyId: [],\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      serviceName: false,\r\n      policyId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const role = await (await fetch(`${API_BASE_URL}/roles/${this.props.match.params.id}`)).json();\r\n      role.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        serviceName: false,\r\n        policyId: false\r\n      };\r\n      this.setState({item: role});\r\n\r\n      let account={};\r\n      await (await fetch(API_BASE_URL + \"/accounts/\" + role.account.id,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        account = jsonResult;\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.policyss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      }));\r\n      \r\n      let item = {...this.state.item};\r\n      item.accountId = role.account.id;\r\n      var values = [];\r\n      item.policys.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.policys = values;\r\n      \r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const role = {\r\n        name: '',\r\n        description: '', \r\n        serviceName: '',\r\n        account: {},\r\n        accounts: [],\r\n        accountId : '',\r\n        policys: [],\r\n        policyss: [],\r\n        policyId: [],\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          roleJson: false,\r\n          policyId: false\r\n        }\r\n      };\r\n      role.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          serviceName: false,\r\n          policyId: false\r\n      };\r\n      this.setState({item: role});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'accountId')\r\n    {\r\n\r\n      let account={};\r\n      fetch(API_BASE_URL + \"/accounts/\" + item.accountId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        account = jsonResult;\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.policyss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true,\r\n      accountId: true,\r\n      serviceName: true,\r\n      policyId: true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.serviceName, item.policyId);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/roles'; \r\n\r\n    item.account={id: item.accountId};\r\n    \r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/roles/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/roles', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId, serviceName, policyId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      serviceName: '',\r\n      policyId: ''\r\n    };\r\n    \r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.serviceName && serviceName.length === 0){\r\n      errors.serviceName = 'serviceName should not be null';\r\n      return errors;\r\n    }\r\n\r\n/*\r\n    if(this.state.item.touched.policyId  && this.state.item.policys.length === 0){\r\n      errors.policyId = 'Add policyId.';\r\n      return errors;\r\n    }\r\n*/  \r\n    return errors;\r\n  }\r\n\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'policyId') \r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.policyss && item.policyss.length){\r\n              item.policyss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.policys = values;\r\n      }\r\n      \r\n      this.setState({item});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Role' : 'Add Role'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.serviceName, item.policyId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/roles\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let isUsed = false; \r\n    //if(item.id !== '' && ((item.roles && item.roles.length !== 0) || (item.groups && item.groups.length !== 0) || (item.endPoints && item.endPoints.length !== 0)) ) isUsed = true; \r\n    let optsp = [];  \r\n    let optsps = [];\r\n    if(item.policyss && item.policyss.length){\r\n      item.policyss.map(s => {  \r\n          if(item.policys && item.policys.length) item.policys.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsp.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsps.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n        \r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n \r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label> \r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\" disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormText>Use alphanumeric and '+=,.@-_' characters. Maximum 64 characters.</FormText>\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')} disabled={isUsed}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"serviceName\">Service Name (*)</Label>         \r\n            <Input type=\"select\" name=\"serviceName\" id=\"serviceName\" value={item.serviceName || ''} disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('serviceName')} \r\n                   valid={errors.serviceName === ''}\r\n                   invalid={errors.serviceName !== ''}\r\n                   >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  <option value=\"AutoScaling\">Auto Scaling</option>\r\n                  <option value=\"DynamoDB\">DynamoDB</option>\r\n                  <option value=\"EC2\">EC2</option>\r\n                  <option value=\"ElasticLoadBalancing\">ElasticLoadBalancing</option>\r\n                  <option value=\"ElasticCache\">ElasticCache</option>\r\n                  <option value=\"EKS\">EKS</option>\r\n                  <option value=\"Lambda\">Lambda</option>\r\n                  <option value=\"Rds\">Rds</option>\r\n                  <option value=\"S3\">S3</option>\r\n                  <option value=\"SNS\">SNS</option>\r\n            </Input>\r\n           <FormFeedback>{errors.serviceName}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"policyId\">Policies</Label>\r\n            <Select name=\"policyId\" id=\"policyId\"  placeholder=\"Enter policyId\" isMulti \r\n              value={optsp}\r\n              onChange={e => this.onOptionChange(\"policyId\",e)}\r\n              onBlur={this.handleBlur('policyId')}\r\n              options={optsps}\r\n\r\n            />\r\n            <FormFeedback>{errors.policyId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"description\">Description (*)</Label> \r\n            <Input type=\"text\" name=\"description\" id=\"description\" value={item.description || ''} placeholder=\"Enter description\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('description')} autoComplete=\"description\"\r\n                   \r\n            />\r\n            <FormText>Maximum 1000 characters. Use alphanumeric and '+=,.@-_' characters</FormText>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(RoleEdit);"]},"metadata":{},"sourceType":"module"}