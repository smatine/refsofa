{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\StorageList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar StorageList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StorageList, _Component);\n\n  function StorageList(props) {\n    var _this;\n\n    _classCallCheck(this, StorageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StorageList).call(this, props));\n    _this.state = {\n      storages: [],\n      isLoading: true\n    };\n    _this.remove = _this.remove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(StorageList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      }); //fetch(`/trigrammes/${this.props.match.params.id}/products`)\n\n      fetch(\"\".concat(API_BASE_URL, \"/storages\")).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          storages: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(accId, id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_BASE_URL, \"/accounts/\").concat(accId, \"/storages/\").concat(id), {\n                  method: 'DELETE',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function () {\n                  var updateStorage = _toConsumableArray(_this3.state.storages).filter(function (i) {\n                    return i.id !== id;\n                  });\n\n                  _this3.setState({\n                    storages: updateStorage\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function remove(_x, _x2) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          storages = _this$state.storages,\n          isLoading = _this$state.isLoading;\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var storageList = storages.map(function (storage) {\n        var link = FRT_BASE_URL + \"/accounts/\" + storage.account.id;\n        var versionning = storage.versionning ? 'Yes' : 'No';\n        var cloudWatchMetrics = storage.cloudWatchMetrics ? 'Yes' : 'No';\n        var encryption = storage.encryption ? 'Yes' : 'No';\n        var kms = storage.kms ? storage.kms.id : '';\n        var serverAccessLoging = storage.serverAccessLoging ? 'Yes' : 'No';\n        var storageTarget = storage.storageTarget ? storage.storageTarget.id : '';\n        var grantAmazonS3ReadAccess = storage.grantAmazonS3ReadAccess ? 'Yes' : 'No';\n        return React.createElement(\"tr\", {\n          key: storage.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, storage.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, storage.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, storage.region.id, \" \", storage.region.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, versionning), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, cloudWatchMetrics), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, encryption), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, storage.encryptionType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, kms), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, serverAccessLoging), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, storageTarget), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, storage.targetPrefix), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, grantAmazonS3ReadAccess), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, storage.cors), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, storage.text), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, storage.account.numAccount)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"secondary\",\n          tag: Link,\n          to: FRT_BASE_URL + \"/storage/\" + storage.id + \"/tags\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Tags\"), \"\\xA0\\xA0\", React.createElement(Button, {\n          size: \"sm\",\n          color: \"secondary\",\n          tag: Link,\n          to: FRT_BASE_URL + \"/storage/\" + storage.id + \"/storageacls\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Acls\"), \"\\xA0\\xA0\", React.createElement(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          tag: Link,\n          to: FRT_BASE_URL + \"/storages/\" + storage.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this4.remove(storage.account.id, storage.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n      var add = \"\".concat(FRT_BASE_URL, \"/storages/new\"); //const trig = `/trigrammes`;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        tag: Link,\n        to: add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Add S3\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"S3\"), React.createElement(Table, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Region\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Versionning\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Cloud Watch Metrics\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Encryption\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Encryption Type\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Kms key\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Server Access Loging\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Storage Target\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Target Prefix\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"AmazonS3ReadAccess\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Cors Configuration\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Account\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, storageList))));\n    }\n  }]);\n\n  return StorageList;\n}(Component);\n\nexport default StorageList;","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\StorageList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","API_BASE_URL","FRT_BASE_URL","StorageList","props","state","storages","isLoading","remove","bind","setState","fetch","then","response","json","data","accId","id","method","headers","updateStorage","filter","i","storageList","map","storage","link","account","versionning","cloudWatchMetrics","encryption","kms","serverAccessLoging","storageTarget","grantAmazonS3ReadAccess","whiteSpace","name","region","encryptionType","targetPrefix","cors","text","numAccount","add"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass StorageList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {storages: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/storages`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({storages: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/storages/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateStorage = [...this.state.storages].filter(i => i.id !== id);\r\n      this.setState({storages: updateStorage});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {storages, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const storageList = storages.map(storage => {\r\n      \r\n    const link = FRT_BASE_URL + \"/accounts/\" + storage.account.id; \r\n    const versionning = (storage.versionning) ? 'Yes': 'No';\r\n    const cloudWatchMetrics = (storage.cloudWatchMetrics) ? 'Yes': 'No';\r\n    const encryption = (storage.encryption) ? 'Yes': 'No';\r\n    const kms = (storage.kms) ? storage.kms.id : '';\r\n    const serverAccessLoging = (storage.serverAccessLoging) ? 'Yes': 'No';\r\n\r\n    const storageTarget = (storage.storageTarget) ? storage.storageTarget.id : '';\r\n    \r\n    const grantAmazonS3ReadAccess = (storage.grantAmazonS3ReadAccess) ? 'Yes': 'No';\r\n\r\n   \r\n      return <tr key={storage.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{storage.id}</td>\r\n        <td>{storage.name}</td>\r\n\r\n        <td>{storage.region.id} {storage.region.name}</td>\r\n        <td>{versionning}</td>\r\n        <td>{cloudWatchMetrics}</td>\r\n\r\n         <td>{encryption}</td>\r\n         <td>{storage.encryptionType}</td>\r\n         <td>{kms}</td>\r\n\r\n        <td>{serverAccessLoging}</td>\r\n        <td>{storageTarget}</td>\r\n        <td>{storage.targetPrefix}</td>\r\n\r\n        \r\n        <td>{grantAmazonS3ReadAccess}</td>\r\n\r\n        <td>{storage.cors}</td>\r\n        <td>{storage.text}</td>\r\n        <td><a href={link}>{storage.account.numAccount}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={FRT_BASE_URL + \"/storage/\" + storage.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={FRT_BASE_URL + \"/storage/\" + storage.id + \"/storageacls\" }>Acls</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={FRT_BASE_URL + \"/storages/\" + storage.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(storage.account.id, storage.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${FRT_BASE_URL}/storages/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add S3</Button>\r\n          </div>\r\n          \r\n          <h3>S3</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n             \r\n              <th width=\"5%\">Region</th>\r\n              <th width=\"5%\">Versionning</th>\r\n              <th width=\"5%\">Cloud Watch Metrics</th>\r\n              \r\n              <th width=\"5%\">Encryption</th>\r\n              <th width=\"5%\">Encryption Type</th>\r\n              <th width=\"5%\">Kms key</th>\r\n\r\n              <th width=\"5%\">Server Access Loging</th>\r\n              <th width=\"5%\">Storage Target</th>\r\n              <th width=\"5%\">Target Prefix</th>\r\n\r\n              \r\n              <th width=\"5%\">AmazonS3ReadAccess</th>\r\n\r\n              <th width=\"5%\">Cors Configuration</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Account</th> \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {storageList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorageList;"]},"metadata":{},"sourceType":"module"}