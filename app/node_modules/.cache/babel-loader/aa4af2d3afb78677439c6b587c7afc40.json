{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\NaclEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL } from './constants';\n\nvar NaclEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NaclEdit, _Component);\n\n  function NaclEdit(props) {\n    var _this;\n\n    _classCallCheck(this, NaclEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NaclEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      account: {},\n      accounts: {},\n      accountId: '',\n      text: '',\n      vpc: {},\n      vpcs: {},\n      vpcId: '',\n      def: false,\n      subnets: [],\n      subnetss: {},\n      subnetId: [],\n      touched: {\n        name: false,\n        accountId: false,\n        vpcId: false,\n        subnetId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NaclEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var nacl, item, values, _nacl;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 21;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/nacls/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                nacl = _context.sent;\n                nacl.touched = {\n                  name: false,\n                  vpcId: false,\n                  accountId: false,\n                  subnetId: false\n                };\n                this.setState({\n                  item: nacl\n                });\n                _context.next = 10;\n                return fetch(API_BASE_URL + '/vpcs/' + nacl.vpc.id + '/subnets').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.subnetss = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 10:\n                _context.next = 12;\n                return fetch(API_BASE_URL + '/accounts/' + nacl.account.id + '/vpcs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.vpcs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 12:\n                item = _objectSpread({}, this.state.item);\n                item.vpcId = nacl.vpc.id;\n                item.accountId = nacl.account.id;\n                values = [];\n                item.subnets.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.subnets = values;\n                this.setState({\n                  item: item\n                });\n                _context.next = 24;\n                break;\n\n              case 21:\n                _nacl = {\n                  name: '',\n                  account: {},\n                  accounts: {},\n                  accountId: '',\n                  text: '',\n                  vpc: {},\n                  vpcs: {},\n                  vpcId: '',\n                  def: false,\n                  subnets: [],\n                  subnetss: {},\n                  subnetId: [],\n                  touched: {\n                    name: false,\n                    accountId: false,\n                    vpcId: false,\n                    subnetId: false\n                  }\n                };\n                _nacl.touched = {\n                  name: false,\n                  accountId: false,\n                  vpcId: false,\n                  subnetId: false\n                };\n                this.setState({\n                  item: _nacl\n                });\n\n              case 24:\n                _context.next = 26;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n\n      if (name === 'accessType') {\n        if (value === 'default') {\n          //hide \n          item.def = true;\n        } else {\n          //show\n          item.def = false;\n        }\n      }\n\n      if (name === 'subnetId') {\n        var options = event.target.options;\n        var values = [];\n\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            if (item.subnetss && item.subnetss.length) {\n              item.subnetss.map(function (s) {\n                if (s.id == options[i].value) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                }\n              });\n            }\n          }\n        }\n\n        item.subnets = values;\n        this.setState({\n          item: item\n        });\n      }\n\n      if (name === 'accountId') {\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/vpcs').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.vpcs = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        item.vpcId = '';\n        item.subnetId = '';\n        item.subnetss = [];\n        item.subnets = [];\n      }\n\n      if (name === 'vpcId') {\n        fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/subnets').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          item.subnetss = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  accountId: true,\n                  vpcId: true,\n                  subnetId: true\n                };\n                errors = this.validate(item.name, item.vpcId, item.subnetId, item.accountId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/nacls';\n                item.vpc = {\n                  id: item.vpcId\n                };\n                item.account = {\n                  id: item.accountId\n                }; //console.log(\"sma\" + item.subnetgroupId);\n                //return;\n\n                if (item.subnets && item.subnets.length) item.subnets.map(function (s) {//alert(\"subnet:\" + s.id + \" \" + item.subnets.length);\n                });\n                _context2.next = 14;\n                return fetch(item.id ? API_BASE_URL + '/vpcs/' + item.vpc.id + '/nacls/' + item.id : API_BASE_URL + '/vpcs/' + item.vpc.id + '/nacls', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 14:\n                this.props.history.push(hist);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, vpcId, subnetId, accountId) {\n      var errors = {\n        name: '',\n        accountId: '',\n        vpcId: '',\n        subnetId: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'accountId should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.vpcId && vpcId.length === 0) {\n        errors.vpcId = 'Vpc should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.subnetId && subnetId && this.state.item.subnets.length === 0) {\n        errors.subnetId = 'Add subnets to cover at least 2 availability zones.';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, item.id ? 'Edit nacl' : 'Add nacl');\n      var errors = this.validate(item.name, item.vpcId, item.subnetId, item.accountId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/nacls\";\n      var optas = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          optas.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount));\n        });\n      }\n\n      var account = item.accountId || '';\n      item.accountId = account;\n      var opts = [];\n\n      if (item.vpcs && item.vpcs.length) {\n        item.vpcs.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var vpc = item.vpcId || '';\n      item.vpcId = vpc;\n      var def = item.def;\n      var optss = [];\n\n      if (item.subnetss && item.subnetss.length) {\n        item.subnetss.map(function (s) {\n          var isSelected = false;\n          if (item.subnets && item.subnets.length) item.subnets.map(function (ss) {\n            if (s.id == ss.id) isSelected = true;\n          });\n          optss.push(React.createElement(\"option\", {\n            value: s.id,\n            selected: isSelected,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317\n            },\n            __self: this\n          }, s.id, \" \", s.name, \" \", s.az.name));\n        });\n      }\n\n      var sub = item.subnetId || {};\n      item.subnetId = sub;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: account,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"Choose\"), optas), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"vpcId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Vpcs (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"vpcId\",\n        id: \"vpcId\",\n        value: vpc,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('vpcId'),\n        valid: errors.vpcId === '',\n        invalid: errors.vpcId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, errors.vpcId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"subnetId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Subnets (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"subnetId\",\n        id: \"subnetId\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('subnetId'),\n        multiple: true,\n        valid: errors.subnetId === '',\n        invalid: errors.subnetId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Choose\"), optss), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, errors.subnetId)), React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accessType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"Default (*)\"), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"accessType\",\n        id: \"accessType\",\n        value: \"default\",\n        checked: def === true,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accessType'),\n        autoComplete: \"accessType\",\n        valid: errors.accessType === '',\n        invalid: errors.accessType !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }), ' ', \"Yes\")), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"accessType\",\n        id: \"accessType\",\n        value: \"nodefault\",\n        checked: def === false,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accessType'),\n        autoComplete: \"accessType\",\n        valid: errors.accessType === '',\n        invalid: errors.accessType !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }), ' ', \"No\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, errors.accessType)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return NaclEdit;\n}(Component);\n\nexport default withRouter(NaclEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\NaclEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","NaclEdit","props","emptyItem","name","account","accounts","accountId","text","vpc","vpcs","vpcId","def","subnets","subnetss","subnetId","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","nacl","then","result","jsonResult","values","map","s","push","event","target","value","options","i","l","length","selected","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","title","canc","optas","numAccount","opts","optss","isSelected","ss","az","sub","accessType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass NaclEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    text: '',\r\n\t  vpc: {},\r\n    vpcs: {},\r\n  \tvpcId : '',\r\n    def: false,\r\n    subnets: [],\r\n    subnetss: {},\r\n    subnetId: [],\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      subnetId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const nacl = await (await fetch(`${API_BASE_URL}/nacls/${this.props.match.params.id}`)).json();\r\n      nacl.touched = {\r\n        name: false,\r\n        vpcId: false,\r\n        accountId: false,\r\n        subnetId: false\r\n      };\r\n      this.setState({item: nacl});\r\n      \r\n      \r\n      await  fetch(API_BASE_URL + '/vpcs/' + (nacl.vpc.id) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      \r\n      await fetch(API_BASE_URL + '/accounts/' + (nacl.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      let item = {...this.state.item};\r\n\r\n      item.vpcId = nacl.vpc.id;\r\n      item.accountId = nacl.account.id;\r\n      var values = [];\r\n      item.subnets.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.subnets = values;\r\n\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const nacl = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        text: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        def: false,\r\n        subnets: [],\r\n        subnetss: {},\r\n        subnetId: [],\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetId: false\r\n        }\r\n      };\r\n      nacl.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetId: false\r\n      };\r\n      this.setState({item: nacl});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    if(name === 'accessType')\r\n    {\r\n      if(value === 'default'){\r\n       //hide \r\n        item.def = true;\r\n      }\r\n      else\r\n      {\r\n        //show\r\n        item.def = false;\r\n      }\r\n    }\r\n    \r\n    if(name === 'subnetId')\r\n    {\r\n      var options = event.target.options;\r\n      var values = [];\r\n      for (var i = 0, l = options.length; i < l; i++) {\r\n        if (options[i].selected) {\r\n            if(item.subnetss && item.subnetss.length){\r\n                item.subnetss.map(s => { \r\n                  if(s.id == options[i].value) {\r\n                      values.push({\"id\": s.id});\r\n                  }\r\n              });\r\n            }\r\n        }\r\n      }\r\n      item.subnets = values;\r\n      this.setState({item});\r\n    }\r\n\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      item.subnetId = '';\r\n      item.subnetss = [];\r\n      item.subnets = [];\r\n    }\r\n\r\n    if(name === 'vpcId')\r\n    {\r\n      \r\n        fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          vpcId: true,\r\n          subnetId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/nacls'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n    if(item.subnets && item.subnets.length) item.subnets.map(s => {  \r\n          //alert(\"subnet:\" + s.id + \" \" + item.subnets.length);\r\n    });\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/nacls/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/nacls', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetId, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      subnetId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.subnetId && subnetId && this.state.item.subnets.length === 0){\r\n      errors.subnetId = 'Add subnets to cover at least 2 availability zones.';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit nacl' : 'Add nacl'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/nacls\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n    const def = item.def;\r\n\r\n    let optss = [];\r\n    if(item.subnetss && item.subnetss.length){\r\n      item.subnetss.map(s => {\r\n      \r\n          let isSelected = false;\r\n          if(item.subnets && item.subnets.length) item.subnets.map(ss => {\r\n             if(s.id == ss.id) isSelected = true;\r\n          });\r\n          optss.push(<option value={s.id} selected={isSelected}>{s.id} {s.name} {s.az.name}</option>);\r\n      });\r\n    }\r\n    let sub = item.subnetId || {};\r\n    item.subnetId = sub;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"subnetId\">Subnets (*)</Label>\r\n            <Input type=\"select\" name=\"subnetId\" id=\"subnetId\"   onChange={this.handleChange} onBlur={this.handleBlur('subnetId')} multiple\r\n                 valid={errors.subnetId === ''}\r\n                 invalid={errors.subnetId !== ''}\r\n            >\r\n            <option value=\"\" disabled>Choose</option>\r\n              {optss}\r\n            </Input>\r\n            <FormFeedback>{errors.subnetId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         <FormGroup tag=\"fieldset\">\r\n            <Label for=\"accessType\">Default (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"default\" checked={def === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                Yes\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"nodefault\" checked={def === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                No\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.accessType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(NaclEdit);"]},"metadata":{},"sourceType":"module"}