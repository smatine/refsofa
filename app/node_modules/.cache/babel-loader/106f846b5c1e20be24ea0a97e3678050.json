{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\LaunchConfigurationEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport Select from 'react-select';\nimport { API_BASE_URL } from './constants';\n\nvar LaunchConfigurationEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LaunchConfigurationEdit, _Component);\n\n  //name, kernalId, ramDiskId, purchasingOption, iamRole, ipAddressType,\n  //monitoring, userData, encoded64, userDataText\n  function LaunchConfigurationEdit(props) {\n    var _this;\n\n    _classCallCheck(this, LaunchConfigurationEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LaunchConfigurationEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      account: {},\n      accounts: {},\n      accountId: '',\n      kernalId: '',\n      ramDiskId: '',\n      purchasingOption: false,\n      iamRole: '',\n      ipAddressType: '',\n      monitoring: false,\n      encoded64: false,\n      instanceType: '',\n      instanceTypes: [],\n      instanceTypeId: '',\n      amiId: '',\n      amis: [],\n      userData: false,\n      userDataText: '',\n      sgss: {},\n      sgs: [],\n      sgId: [],\n      vpcs: [],\n      vpcId: '',\n      touched: {\n        name: false,\n        accountId: false,\n        kernalId: false,\n        ramDiskId: false,\n        iamRole: false,\n        ipAddressType: false,\n        instanceTypeId: false,\n        amiId: false,\n        userDataText: false,\n        sgId: false,\n        vpcId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.onOptionChange = function (selectName, selectedOption) {\n      var item = _this.state.item;\n      var options = selectedOption;\n      var values = [];\n\n      if (selectName === 'sgId') {\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (item.sgss && item.sgss.length) {\n            item.sgss.map(function (s) {\n              if (s.id == options[i].value) {\n                values.push({\n                  \"id\": s.id\n                });\n              }\n            });\n          }\n        }\n\n        item.sgs = values;\n      }\n\n      _this.setState({\n        item: item\n      });\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LaunchConfigurationEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var launchConfiguration, item, values, _launchConfiguration;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 25;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/launchConfigurations/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                launchConfiguration = _context.sent;\n                launchConfiguration.touched = {\n                  name: false,\n                  accountId: false,\n                  kernalId: false,\n                  ramDiskId: false,\n                  iamRole: false,\n                  ipAddressType: false,\n                  instanceTypeId: false,\n                  amiId: false,\n                  userDataText: false,\n                  sgId: false,\n                  vpcId: false\n                };\n                this.setState({\n                  item: launchConfiguration\n                });\n                _context.next = 10;\n                return fetch(API_BASE_URL + '/accounts/' + launchConfiguration.account.id + '/vpcs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.vpcs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 10:\n                _context.next = 12;\n                return fetch(API_BASE_URL + '/regions/' + launchConfiguration.vpc.cidr.region.id + '/amis').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.amis = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 12:\n                _context.next = 14;\n                return fetch(API_BASE_URL + '/vpcs/' + launchConfiguration.vpc.id + '/sgs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.sgss = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 14:\n                item = _objectSpread({}, this.state.item);\n                item.instanceTypeId = launchConfiguration.instanceType.id;\n                item.amiId = launchConfiguration.ami.id;\n                item.vpcId = launchConfiguration.vpc.id;\n                item.accountId = launchConfiguration.account.id;\n                values = [];\n                item.sgs.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.sgs = values;\n                this.setState({\n                  item: item\n                });\n                _context.next = 28;\n                break;\n\n              case 25:\n                _launchConfiguration = {\n                  name: '',\n                  account: {},\n                  accounts: {},\n                  accountId: '',\n                  kernalId: '',\n                  ramDiskId: '',\n                  purchasingOption: false,\n                  iamRole: '',\n                  ipAddressType: '',\n                  monitoring: false,\n                  encoded64: false,\n                  instanceType: '',\n                  instanceTypes: [],\n                  instanceTypeId: '',\n                  amiId: '',\n                  amis: [],\n                  userData: false,\n                  userDataText: '',\n                  sgss: {},\n                  sgs: [],\n                  sgId: [],\n                  vpcs: [],\n                  vpcId: '',\n                  touched: {\n                    name: false,\n                    accountId: false,\n                    kernalId: false,\n                    ramDiskId: false,\n                    iamRole: false,\n                    ipAddressType: false,\n                    instanceTypeId: false,\n                    amiId: false,\n                    userDataText: false,\n                    sgId: false,\n                    vpcId: false\n                  }\n                };\n                _launchConfiguration.touched = {\n                  name: false,\n                  accountId: false,\n                  kernalId: false,\n                  ramDiskId: false,\n                  iamRole: false,\n                  ipAddressType: false,\n                  instanceTypeId: false,\n                  amiId: false,\n                  userDataText: false,\n                  sgId: false,\n                  vpcId: false\n                };\n                this.setState({\n                  item: _launchConfiguration\n                });\n\n              case 28:\n                _context.next = 30;\n                return fetch(API_BASE_URL + '/instanceTypes').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.instanceTypes = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 30:\n                _context.next = 32;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 32:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      }); //enableTerminationProtection monitoring userData encoded64\n\n      if (name === 'purchasingOption') {\n        item.purchasingOption = target.checked ? true : false;\n      } else if (name === 'monitoring') {\n        item.monitoring = target.checked ? true : false;\n      } else if (name === 'userData') {\n        item.userData = target.checked ? true : false;\n      } else if (name === 'encoded64') {\n        item.encoded64 = target.checked ? true : false;\n      } else if (name === 'accountId') {\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/vpcs').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.vpcs = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        item.vpcId = '';\n        item.amiId = '';\n        item.amis = [];\n        item.sgId = '';\n        item.sgs = [];\n        item.sgss = [];\n      } else if (name === 'vpcId') {\n        var vp = {};\n        fetch(API_BASE_URL + \"/vpcs/\" + item.vpcId).then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          vp = jsonResult;\n          fetch(API_BASE_URL + '/regions/' + vp.cidr.region.id + '/amis').then(function (result) {\n            return result.json();\n          }).then(function (jsonResult) {\n            item.amis = jsonResult;\n\n            _this3.setState({\n              item: item\n            });\n          });\n          fetch(API_BASE_URL + '/vpcs/' + vp.id + '/sgs').then(function (result) {\n            return result.json();\n          }).then(function (jsonResult) {\n            var item = _objectSpread({}, _this3.state.item);\n\n            item.sgss = jsonResult;\n\n            _this3.setState({\n              item: item\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist, values;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  accountId: true,\n                  kernalId: true,\n                  ramDiskId: true,\n                  iamRole: true,\n                  ipAddressType: true,\n                  instanceTypeId: true,\n                  amiId: true,\n                  userDataText: true,\n                  sgId: true,\n                  vpcId: true\n                };\n                errors = this.validate(item.vpcId, item.name, item.kernalId, item.ramDiskId, item.iamRole, item.ipAddressType, item.instanceTypeId, item.amiId, item.userDataText, item.sgId, item.userData, item.accountId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/launchconfigurations';\n\n                if (!item.userData) {\n                  item.userDataText = '';\n                  item.encoded64 = false;\n                }\n\n                item.instanceType = {\n                  id: item.instanceTypeId\n                };\n                item.ami = {\n                  id: item.amiId\n                };\n                item.vpc = {\n                  id: item.vpcId\n                };\n                item.account = {\n                  id: item.accountId\n                };\n                values = [];\n\n                if (item.sgs && item.sgs.length) {\n                  item.sgs.map(function (s) {\n                    values.push({\n                      \"id\": s.id\n                    });\n                    console.log('item.sg=' + s.id);\n                  });\n                  item.sg = values;\n                }\n\n                _context2.next = 18;\n                return fetch(item.id ? API_BASE_URL + '/launchConfigurations/' + item.id : API_BASE_URL + '/launchConfiguration', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 18:\n                this.props.history.push(hist);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(vpcId, name, kernalId, ramDiskId, iamRole, ipAddressType, instanceTypeId, amiId, userDataText, sgId, userData, accountId) {\n      var errors = {\n        name: '',\n        accountId: '',\n        kernalId: '',\n        ramDiskId: '',\n        iamRole: '',\n        ipAddressType: '',\n        instanceTypeId: '',\n        amiId: '',\n        userDataText: '',\n        sgId: '',\n        vpcId: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'name type should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'accountId type should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.vpcId && vpcId.length === 0) {\n        errors.vpcId = 'vpcId type should not be null';\n        return errors;\n      } else if (this.state.item.touched.kernalId && kernalId.length === 0) {\n        errors.kernalId = 'kernalId type should not be null';\n        return errors;\n      } else if (this.state.item.touched.ramDiskId && ramDiskId.length === 0) {\n        errors.ramDiskId = 'ramDiskId type should not be null';\n        return errors;\n      } else if (this.state.item.touched.iamRole && iamRole.length === 0) {\n        errors.iamRole = 'iamRole type should not be null';\n        return errors;\n      }\n\n      if (this.state.item.touched.ipAddressType && ipAddressType.length === 0) {\n        errors.ipAddressType = 'ipAddressType should not be null';\n        return errors;\n      } else if (this.state.item.touched.instanceTypeId && instanceTypeId.length === 0) {\n        errors.instanceTypeId = 'instanceTypeId should not be null';\n        return errors;\n      } else if (this.state.item.touched.amiId && amiId.length === 0) {\n        errors.amiId = 'amiId should not be null';\n        return errors;\n      } else if (userData && this.state.item.touched.userDataText && userDataText.length === 0) {\n        errors.userDataText = 'userDataText type should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, item.id ? 'Edit LaunchConfiguration' : 'Add LaunchConfiguration');\n      var errors = this.validate(item.vpcId, item.name, item.kernalId, item.ramDiskId, item.iamRole, item.ipAddressType, item.instanceTypeId, item.amiId, item.userDataText, item.sgId, item.userData, item.accountId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/launchconfigurations\";\n      var optas = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          optas.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 440\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount));\n        });\n      }\n\n      var account = item.accountId || '';\n      item.accountId = account;\n      var optVpcs = [];\n\n      if (item.vpcs && item.vpcs.length) {\n        item.vpcs.map(function (s) {\n          optVpcs.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 449\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var vpc = item.vpcId || '';\n      item.vpcId = vpc;\n      var encoded64 = item.userData ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"encoded64\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, \"Encoded64:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"encoded64\",\n        id: \"encoded64\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('encoded64'),\n        checked: item.encoded64 === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      })) : '';\n      var userDataText = item.userData ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"userDataText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, \"User Data Text(*)\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"userDataText\",\n        id: \"userDataText\",\n        value: item.userDataText || '',\n        placeholder: \"Enter userDataText\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('userDataText'),\n        autoComplete: \"userDataText\",\n        valid: errors.userDataText === '',\n        invalid: errors.userDataText !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, errors.userDataText)) : '';\n      var optAmis = [];\n\n      if (item.amis && item.amis.length) {\n        item.amis.map(function (s) {\n          optAmis.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 475\n            },\n            __self: this\n          }, s.id, \" \", s.name, \" \", s.amiId));\n        });\n      }\n\n      var ami = item.amiId || '';\n      item.amiId = ami;\n      var optInstanceTypes = [];\n\n      if (item.instanceTypes && item.instanceTypes.length) {\n        item.instanceTypes.map(function (s) {\n          optInstanceTypes.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 484\n            },\n            __self: this\n          }, s.id, \" \", s.type));\n        });\n      }\n\n      var instanceType = item.instanceTypeId || '';\n      item.instanceTypeId = instanceType;\n      var optsg = [];\n      var optsgs = [];\n\n      if (item.sgss && item.sgss.length) {\n        item.sgss.map(function (s) {\n          if (item.sgs && item.sgs.length) item.sgs.map(function (ss) {\n            if (s.id == ss.id) {\n              optsgs.push({\n                value: s.id,\n                label: s.name\n              });\n            }\n          });\n          optsg.push({\n            value: s.id,\n            label: s.name\n          });\n        });\n      }\n\n      var securityGroup = React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"sgId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, \"Security Group (*)\"), React.createElement(Select, {\n        name: \"sgId\",\n        id: \"sgId\",\n        placeholder: \"Enter Security group\",\n        isMulti: true,\n        value: optsgs,\n        onChange: function onChange(e) {\n          return _this4.onOptionChange(\"sgId\", e);\n        },\n        onBlur: this.handleBlur('sgId'),\n        options: optsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, errors.sgId));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: account,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, \"Choose\"), optas), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"vpcId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, \"Vpc (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"vpcId\",\n        id: \"vpcId\",\n        value: item.vpcId || '',\n        placeholder: \"Enter vpc\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('vpcId'),\n        autoComplete: \"vpcId\",\n        valid: errors.vpcId === '',\n        invalid: errors.vpcId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, \"Choose\"), optVpcs), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, errors.vpcId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"kernalId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, \"Kernal Id (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"kernalId\",\n        id: \"kernalId\",\n        value: item.kernalId || '',\n        placeholder: \"Enter kernalId\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('kernalId'),\n        autoComplete: \"kernalId\",\n        valid: errors.kernalId === '',\n        invalid: errors.kernalId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, errors.kernalId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"ramDiskId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, \"Ram Disk Id (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"ramDiskId\",\n        id: \"ramDiskId\",\n        value: item.ramDiskId || '',\n        placeholder: \"Enter ramDiskId\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('ramDiskId'),\n        autoComplete: \"ramDiskId\",\n        valid: errors.ramDiskId === '',\n        invalid: errors.ramDiskId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, errors.ramDiskId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"purchasingOption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, \"Purchasing Option:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"purchasingOption\",\n        id: \"purchasingOption\",\n        disabled: true,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('purchasingOption'),\n        checked: item.purchasingOption === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"iamRole\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, \"Iam Role (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"iamRole\",\n        id: \"iamRole\",\n        value: item.iamRole || '',\n        placeholder: \"Enter iamRole\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('iamRole'),\n        autoComplete: \"iamRole\",\n        valid: errors.iamRole === '',\n        invalid: errors.iamRole !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, errors.iamRole)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"ipAddressType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, \"Ip Address Type (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"ipAddressType\",\n        id: \"ipAddressType\",\n        value: item.ipAddressType || '',\n        placeholder: \"Enter ipAddressType\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('ipAddressType'),\n        autoComplete: \"ipAddressType\",\n        valid: errors.ipAddressType === '',\n        invalid: errors.ipAddressType !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, errors.ipAddressType)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"monitoring\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, \"Monitoring:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"monitoring\",\n        id: \"monitoring\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('monitoring'),\n        checked: item.monitoring === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"amiId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, \"Ami(*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"amiId\",\n        id: \"amiId\",\n        value: item.amiId || '',\n        placeholder: \"Enter amiId\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('amiId'),\n        autoComplete: \"amiId\",\n        valid: errors.amiId === '',\n        invalid: errors.amiId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, \"Choose\"), optAmis), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, errors.amiId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"instanceTypeId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, \"Instance Type (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"instanceTypeId\",\n        id: \"instanceTypeId\",\n        value: item.instanceTypeId || '',\n        placeholder: \"Enter instanceType\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('instanceTypeId'),\n        autoComplete: \"instanceTypeId\",\n        valid: errors.instanceTypeId === '',\n        invalid: errors.instanceTypeId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, \"Choose\"), optInstanceTypes), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629\n        },\n        __self: this\n      }, errors.instanceTypeId)), securityGroup, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"userData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }, \"User Data:\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"userData\",\n        id: \"userData\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('userData'),\n        checked: item.userData === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      })), encoded64, userDataText, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return LaunchConfigurationEdit;\n}(Component);\n\nexport default withRouter(LaunchConfigurationEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\LaunchConfigurationEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","Select","API_BASE_URL","LaunchConfigurationEdit","props","emptyItem","name","account","accounts","accountId","kernalId","ramDiskId","purchasingOption","iamRole","ipAddressType","monitoring","encoded64","instanceType","instanceTypes","instanceTypeId","amiId","amis","userData","userDataText","sgss","sgs","sgId","vpcs","vpcId","touched","handleBlur","field","evt","item","state","setState","onOptionChange","selectName","selectedOption","options","values","i","l","length","map","s","id","value","push","handleChange","bind","handleSubmit","match","params","fetch","json","launchConfiguration","then","result","jsonResult","vpc","cidr","region","ami","event","target","checked","vp","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","console","log","sg","method","headers","body","JSON","stringify","history","title","canc","optas","numAccount","optVpcs","optAmis","optInstanceTypes","type","optsg","optsgs","ss","label","securityGroup","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass LaunchConfigurationEdit extends Component {\r\n\r\n//name, kernalId, ramDiskId, purchasingOption, iamRole, ipAddressType,\r\n//monitoring, userData, encoded64, userDataText\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    kernalId: '', \r\n    ramDiskId: '', \r\n    purchasingOption: false, \r\n    iamRole: '',\r\n    ipAddressType: '',\r\n    monitoring: false,\r\n    encoded64: false, \r\n    instanceType: '', \r\n    instanceTypes: [],\r\n    instanceTypeId: '',\r\n    amiId: '',\r\n    amis: [], \r\n    userData: false, \r\n    userDataText: '',\r\n    sgss: {},\r\n    sgs: [],\r\n    sgId: [],\r\n    vpcs: [],\r\n    vpcId : '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false, \r\n      kernalId: false, \r\n      ramDiskId: false, \r\n      iamRole: false, \r\n      ipAddressType: false,\r\n      instanceTypeId: false,\r\n      amiId: false,\r\n      userDataText: false,\r\n      sgId: false,\r\n      vpcId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const launchConfiguration = await (await fetch(`${API_BASE_URL}/launchConfigurations/${this.props.match.params.id}`)).json();\r\n      launchConfiguration.touched = {\r\n        name: false, \r\n        accountId: false,\r\n        kernalId: false, \r\n        ramDiskId: false, \r\n        iamRole: false, \r\n        ipAddressType: false,\r\n        instanceTypeId: false,\r\n        amiId: false,\r\n        userDataText: false,\r\n        sgId: false,\r\n        vpcId: false\r\n      };\r\n      this.setState({item: launchConfiguration});\r\n\r\n      await fetch(API_BASE_URL + '/accounts/' + (launchConfiguration.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await  fetch(API_BASE_URL + '/regions/' + (launchConfiguration.vpc.cidr.region.id) + '/amis',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.amis = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n        \r\n      await  fetch(API_BASE_URL + '/vpcs/' + (launchConfiguration.vpc.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n      \r\n      let item = {...this.state.item};\r\n      item.instanceTypeId = launchConfiguration.instanceType.id;\r\n      item.amiId = launchConfiguration.ami.id;\r\n      item.vpcId = launchConfiguration.vpc.id;\r\n      item.accountId = launchConfiguration.account.id;\r\n\r\n      var values = [];\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.sgs = values;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const launchConfiguration = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        kernalId: '', \r\n        ramDiskId: '', \r\n        purchasingOption: false, \r\n        iamRole: '',\r\n        ipAddressType: '',\r\n        monitoring: false,\r\n        encoded64: false, \r\n        instanceType: '', \r\n        instanceTypes: [],\r\n        instanceTypeId: '',\r\n        amiId: '',\r\n        amis: [], \r\n        userData: false, \r\n        userDataText: '',\r\n        sgss: {},\r\n        sgs: [],\r\n        sgId: [],\r\n        vpcs: [],\r\n        vpcId : '',\r\n        touched: {\r\n          name: false, \r\n          accountId: false,\r\n          kernalId: false, \r\n          ramDiskId: false, \r\n          iamRole: false, \r\n          ipAddressType: false,\r\n          instanceTypeId: false,\r\n          amiId: false,\r\n          userDataText: false,\r\n          sgId: false,\r\n          vpcId: false\r\n        }\r\n      };\r\n      launchConfiguration.touched = {\r\n          name: false, \r\n          accountId: false,\r\n          kernalId: false, \r\n          ramDiskId: false, \r\n          iamRole: false, \r\n          ipAddressType: false,\r\n          instanceTypeId: false,\r\n          amiId: false,\r\n          userDataText: false,\r\n          sgId: false,\r\n          vpcId: false\r\n      };\r\n      this.setState({item: launchConfiguration});\r\n    }\r\n    \r\n    await fetch(API_BASE_URL + '/instanceTypes',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.instanceTypes = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*\r\n    await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    });*/\r\n    \r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const name = target.name; \r\n    const value = target.value;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    //enableTerminationProtection monitoring userData encoded64\r\n    if(name === 'purchasingOption')\r\n    {\r\n      item.purchasingOption = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'monitoring')\r\n    {\r\n      item.monitoring = (target.checked) ? true: false;\r\n    } else if(name === 'userData')\r\n    {\r\n      item.userData = (target.checked) ? true: false;\r\n    }else if(name === 'encoded64')\r\n    {\r\n      item.encoded64 = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n\r\n      item.amiId = '';\r\n      item.amis = [];\r\n\r\n      item.sgId = '';\r\n      item.sgs = [];\r\n      item.sgss = [];\r\n      \r\n      \r\n    }\r\n    else if(name === 'vpcId')\r\n    {\r\n      let vp={};\r\n      fetch(API_BASE_URL + \"/vpcs/\" + item.vpcId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        vp = jsonResult;\r\n        fetch(API_BASE_URL + '/regions/' + (vp.cidr.region.id) + '/amis',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.amis = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/vpcs/' + (vp.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      });\r\n     \r\n    }\r\n    \r\n  }\r\n\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true, \r\n      accountId: true,\r\n      kernalId: true, \r\n      ramDiskId: true, \r\n      iamRole: true, \r\n      ipAddressType: true,\r\n      instanceTypeId: true,\r\n      amiId: true,\r\n      userDataText: true,\r\n      sgId: true,\r\n      vpcId: true\r\n    };\r\n    const errors = this.validate(item.vpcId, item.name, item.kernalId, item.ramDiskId, item.iamRole, item.ipAddressType, item.instanceTypeId, item.amiId, \r\n      item.userDataText, item.sgId, item.userData, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/launchconfigurations'; \r\n\r\n    if(!item.userData) {\r\n      item.userDataText = '';\r\n      item.encoded64 = false;\r\n    }\r\n    item.instanceType = {id: item.instanceTypeId};\r\n    item.ami = {id: item.amiId};\r\n    item.vpc = {id: item.vpcId};\r\n    item.account = {id: item.accountId};\r\n\r\n    var values = [];\r\n    if(item.sgs && item.sgs.length){\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n        console.log('item.sg=' + s.id);\r\n      });\r\n      item.sg= values;\r\n    }\r\n    \r\n    await fetch((item.id) ? API_BASE_URL + '/launchConfigurations/'+(item.id) : API_BASE_URL + '/launchConfiguration', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(vpcId, name, kernalId, ramDiskId, iamRole, ipAddressType, instanceTypeId, amiId, userDataText, sgId, userData, accountId) {\r\n\r\n    const errors = {\r\n      name: '', \r\n      accountId: '',\r\n      kernalId: '', \r\n      ramDiskId: '', \r\n      iamRole: '', \r\n      ipAddressType: '',\r\n      instanceTypeId: '',\r\n      amiId: '',\r\n      userDataText: '',\r\n      sgId: '',\r\n      vpcId: ''\r\n    };\r\n\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'name type should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId type should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'vpcId type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.kernalId && kernalId.length === 0){\r\n      errors.kernalId = 'kernalId type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.ramDiskId && ramDiskId.length === 0){\r\n      errors.ramDiskId = 'ramDiskId type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.iamRole && iamRole.length === 0){\r\n      errors.iamRole = 'iamRole type should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.ipAddressType && ipAddressType.length === 0){\r\n      errors.ipAddressType = 'ipAddressType should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.instanceTypeId && instanceTypeId.length === 0){\r\n      errors.instanceTypeId = 'instanceTypeId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.amiId && amiId.length === 0){\r\n      errors.amiId = 'amiId should not be null';\r\n      return errors;\r\n    }\r\n    else if(userData && this.state.item.touched.userDataText && userDataText.length === 0){\r\n      errors.userDataText = 'userDataText type should not be null';\r\n      return errors;\r\n    }\r\n    \r\n       \r\n    return errors;\r\n  }\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'sgId')\r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.sgss && item.sgss.length){\r\n              item.sgss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.sgs = values;\r\n      }\r\n      this.setState({item});\r\n  };\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit LaunchConfiguration' : 'Add LaunchConfiguration'}</h2>;\r\n\r\n    const errors = this.validate(item.vpcId, item.name, item.kernalId, item.ramDiskId, item.iamRole, item.ipAddressType, item.instanceTypeId, item.amiId, \r\n      item.userDataText, item.sgId, item.userData, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/launchconfigurations\";\r\n    \r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let optVpcs = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          optVpcs.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n\r\n    const encoded64 = (item.userData) ? <FormGroup >\r\n            <Label for=\"encoded64\" >Encoded64:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"encoded64\" id=\"encoded64\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('encoded64')} \r\n                    checked={item.encoded64 === true}/>\r\n          </FormGroup> : '';\r\n    const userDataText = (item.userData) ? <FormGroup>\r\n            <Label for=\"userDataText\">User Data Text(*)</Label>\r\n            <Input type=\"textarea\" name=\"userDataText\" id=\"userDataText\" value={item.userDataText || ''} placeholder=\"Enter userDataText\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('userDataText')} autoComplete=\"userDataText\"\r\n                   valid={errors.userDataText === ''}\r\n                   invalid={errors.userDataText !== ''}\r\n            />\r\n           <FormFeedback>{errors.userDataText}</FormFeedback>\r\n          </FormGroup> : '';\r\n          \r\n    \r\n    let optAmis = [];\r\n    if(item.amis && item.amis.length){\r\n      item.amis.map(s => {  \r\n          optAmis.push(<option key={s.id} value={s.id}>{s.id} {s.name} {s.amiId}</option>);\r\n      });\r\n    }\r\n    let ami = item.amiId || '';\r\n    item.amiId = ami;\r\n\r\n    let optInstanceTypes = [];\r\n    if(item.instanceTypes && item.instanceTypes.length){\r\n      item.instanceTypes.map(s => {  \r\n          optInstanceTypes.push(<option key={s.id} value={s.id}>{s.id} {s.type}</option>);\r\n      });\r\n    }\r\n    let instanceType = item.instanceTypeId || '';\r\n    item.instanceTypeId = instanceType;\r\n\r\n    let optsg = [];  \r\n    let optsgs = [];\r\n    if(item.sgss && item.sgss.length){\r\n      item.sgss.map(s => {  \r\n          if(item.sgs && item.sgs.length) item.sgs.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsgs.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsg.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n    const securityGroup = <FormGroup>\r\n            <Label for=\"sgId\">Security Group (*)</Label>\r\n            <Select name=\"sgId\" id=\"sgId\"  placeholder=\"Enter Security group\" isMulti \r\n              value={optsgs}\r\n              onChange={e => this.onOptionChange(\"sgId\",e)}\r\n              onBlur={this.handleBlur('sgId')}\r\n              options={optsg}\r\n\r\n            />\r\n            <FormFeedback>{errors.sgId}</FormFeedback>\r\n          </FormGroup>;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n         <Form onSubmit={this.handleSubmit}>\r\n\r\n         <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"vpcId\">Vpc (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\" value={item.vpcId || ''} placeholder=\"Enter vpc\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('vpcId')} autoComplete=\"vpcId\"\r\n                   valid={errors.vpcId === ''}\r\n                   invalid={errors.vpcId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optVpcs}\r\n            </Input>\r\n           <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"kernalId\">Kernal Id (*)</Label>\r\n            <Input type=\"text\" name=\"kernalId\" id=\"kernalId\" value={item.kernalId || ''} placeholder=\"Enter kernalId\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('kernalId')} autoComplete=\"kernalId\"\r\n                   valid={errors.kernalId === ''}\r\n                   invalid={errors.kernalId !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.kernalId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"ramDiskId\">Ram Disk Id (*)</Label>\r\n            <Input type=\"text\" name=\"ramDiskId\" id=\"ramDiskId\" value={item.ramDiskId || ''} placeholder=\"Enter ramDiskId\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ramDiskId')} autoComplete=\"ramDiskId\"\r\n                   valid={errors.ramDiskId === ''}\r\n                   invalid={errors.ramDiskId !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.ramDiskId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup >\r\n            <Label for=\"purchasingOption\" >Purchasing Option:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"purchasingOption\" id=\"purchasingOption\" disabled={true}\r\n                    onChange={this.handleChange} onBlur={this.handleBlur('purchasingOption')} \r\n                    checked={item.purchasingOption === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"iamRole\">Iam Role (*)</Label>\r\n            <Input type=\"text\" name=\"iamRole\" id=\"iamRole\" value={item.iamRole || ''} placeholder=\"Enter iamRole\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('iamRole')} autoComplete=\"iamRole\"\r\n                   valid={errors.iamRole === ''}\r\n                   invalid={errors.iamRole !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.iamRole}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"ipAddressType\">Ip Address Type (*)</Label>\r\n            <Input type=\"text\" name=\"ipAddressType\" id=\"ipAddressType\" value={item.ipAddressType || ''} placeholder=\"Enter ipAddressType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ipAddressType')} autoComplete=\"ipAddressType\"\r\n                   valid={errors.ipAddressType === ''}\r\n                   invalid={errors.ipAddressType !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.ipAddressType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"monitoring\" >Monitoring:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"monitoring\" id=\"monitoring\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('monitoring')} \r\n                    checked={item.monitoring === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"amiId\">Ami(*)</Label>\r\n            <Input type=\"select\" name=\"amiId\" id=\"amiId\" value={item.amiId || ''} placeholder=\"Enter amiId\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('amiId')} autoComplete=\"amiId\"\r\n                   valid={errors.amiId === ''}\r\n                   invalid={errors.amiId !== ''}>\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optAmis}\r\n            </Input>\r\n           <FormFeedback>{errors.amiId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"instanceTypeId\">Instance Type (*)</Label>\r\n            <Input type=\"select\" name=\"instanceTypeId\" id=\"instanceTypeId\" value={item.instanceTypeId || ''} placeholder=\"Enter instanceType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('instanceTypeId')} autoComplete=\"instanceTypeId\"\r\n                   valid={errors.instanceTypeId === ''}\r\n                   invalid={errors.instanceTypeId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optInstanceTypes}\r\n            </Input>\r\n           <FormFeedback>{errors.instanceTypeId}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          {securityGroup}\r\n\r\n          <FormGroup >\r\n            <Label for=\"userData\" >User Data:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"userData\" id=\"userData\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('userData')} \r\n                    checked={item.userData === true}/>\r\n          </FormGroup>\r\n\r\n          {encoded64}\r\n          {userDataText}\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(LaunchConfigurationEdit);"]},"metadata":{},"sourceType":"module"}