{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\ElasticCacheEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport Select from 'react-select';\nimport { API_BASE_URL } from './constants';\n\nvar ElasticCacheEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ElasticCacheEdit, _Component);\n\n  function ElasticCacheEdit(props) {\n    var _this;\n\n    _classCallCheck(this, ElasticCacheEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ElasticCacheEdit).call(this, props));\n    _this.emptyItem = {\n      name: '',\n      text: '',\n      account: {},\n      accounts: {},\n      accountId: '',\n      vpc: {},\n      vpcs: {},\n      vpcId: '',\n      subnetgroup: {},\n      subnetgroups: {},\n      subnetgroupId: '',\n      sgss: {},\n      sgs: [],\n      sgId: [],\n      touched: {\n        name: false,\n        vpcId: false,\n        subnetgroupId: false,\n        accountId: false,\n        sgId: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.onOptionChange = function (selectName, selectedOption) {\n      var item = _this.state.item;\n      var options = selectedOption;\n      var values = [];\n\n      if (selectName === 'sgId') {\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (item.sgss && item.sgss.length) {\n            item.sgss.map(function (s) {\n              if (s.id == options[i].value) {\n                values.push({\n                  \"id\": s.id\n                });\n              }\n            });\n          }\n        }\n\n        item.sgs = values;\n      }\n\n      _this.setState({\n        item: item\n      });\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ElasticCacheEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var elasticCache, item, values, _elasticCache;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 22;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/elasticCaches/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                elasticCache = _context.sent;\n                elasticCache.touched = {\n                  name: false,\n                  vpcId: false,\n                  subnetgroupId: false,\n                  accountId: false,\n                  sgId: false\n                };\n                this.setState({\n                  item: elasticCache\n                });\n                fetch(API_BASE_URL + '/vpcs/' + elasticCache.vpc.id + '/type/ECC' + '/subnetGroups').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.subnetgroups = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n                _context.next = 11;\n                return fetch(API_BASE_URL + '/accounts/' + elasticCache.account.id + '/vpcs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.vpcs = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 11:\n                fetch(API_BASE_URL + '/vpcs/' + elasticCache.vpc.id + '/sgs').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.sgss = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n                item = _objectSpread({}, this.state.item);\n                item.accountId = elasticCache.account.id;\n                item.vpcId = elasticCache.vpc.id;\n                item.subnetgroupId = elasticCache.subnetgroup.id;\n                values = [];\n                item.sgs.map(function (s) {\n                  values.push({\n                    \"id\": s.id\n                  });\n                });\n                item.sgs = values;\n                this.setState({\n                  item: item\n                });\n                _context.next = 25;\n                break;\n\n              case 22:\n                _elasticCache = {\n                  name: '',\n                  text: '',\n                  account: {},\n                  accounts: {},\n                  accountId: '',\n                  vpc: {},\n                  vpcs: {},\n                  vpcId: '',\n                  subnetgroup: {},\n                  subnetgroups: {},\n                  subnetgroupId: '',\n                  sgss: {},\n                  sgs: [],\n                  sgId: [],\n                  touched: {\n                    name: false,\n                    vpcId: false,\n                    subnetgroupId: false,\n                    accountId: false,\n                    sgId: false\n                  }\n                };\n                _elasticCache.touched = {\n                  name: false,\n                  vpcId: false,\n                  subnetgroupId: false,\n                  accountId: false,\n                  sgId: false\n                };\n                this.setState({\n                  item: _elasticCache\n                });\n\n              case 25:\n                _context.next = 27;\n                return fetch(API_BASE_URL + '/accounts').then(function (result) {\n                  return result.json();\n                }).then(function (jsonResult) {\n                  var item = _objectSpread({}, _this2.state.item);\n\n                  item.accounts = jsonResult;\n\n                  _this2.setState({\n                    item: item\n                  });\n                });\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n\n      if (name === 'accountId') {\n        fetch(API_BASE_URL + '/accounts/' + item.accountId + '/vpcs').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          var item = _objectSpread({}, _this3.state.item);\n\n          item.vpcs = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        item.vpcId = '';\n        item.subnetgroupId = '';\n        item.subnetgroups = [];\n        item.sgId = '';\n        item.sgss = [];\n      }\n\n      if (name === 'vpcId') {\n        fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/type/ECC' + '/subnetGroups').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          item.subnetgroups = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n        fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/sgs').then(function (result) {\n          return result.json();\n        }).then(function (jsonResult) {\n          item.sgss = jsonResult;\n\n          _this3.setState({\n            item: item\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist, values;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  name: true,\n                  vpcId: true,\n                  subnetgroupId: true,\n                  accountId: false,\n                  sgId: true\n                };\n                errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.accountId, item.sgId);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = API_BASE_URL + '/elasticCaches';\n                item.account = {\n                  id: item.accountId\n                };\n                item.vpc = {\n                  id: item.vpcId\n                };\n                item.subnetgroup = {\n                  id: item.subnetgroupId\n                };\n                values = [];\n\n                if (item.sgs && item.sgs.length) {\n                  item.sgs.map(function (s) {\n                    values.push({\n                      \"id\": s.id\n                    });\n                  });\n                  item.sg = values;\n                } //console.log(\"sma\" + item.subnetgroupId);\n                //return;\n\n\n                _context2.next = 16;\n                return fetch(item.id ? API_BASE_URL + '/vpcs/' + item.vpc.id + '/elasticCaches/' + item.id : API_BASE_URL + '/vpcs/' + item.vpc.id + '/elasticCaches', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 16:\n                this.props.history.push(hist);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(name, vpcId, subnetgroupId, accountId, sgId) {\n      var errors = {\n        name: '',\n        vpcId: '',\n        subnetgroupId: '',\n        accountId: '',\n        sgId: ''\n      };\n\n      if (this.state.item.touched.name && name.length === 0) {\n        errors.name = 'Name should not be null';\n        return errors;\n      } else if (this.state.item.touched.accountId && accountId.length === 0) {\n        errors.accountId = 'accountId should not be null';\n        return errors;\n      } else if (this.state.item.touched.vpcId && vpcId.length === 0) {\n        errors.vpcId = 'Vpc should not be null';\n        return errors;\n      } else if (this.state.item.touched.subnetgroupId && subnetgroupId.length === 0) {\n        errors.subnetgroupId = 'Subnet group should not be null';\n        return errors;\n      } else if (this.state.item.touched.sgId && sgId && this.state.item.sgs.length <= 0) {\n        errors.sgId = 'sgId should not be null';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, item.id ? 'Edit elasticCache' : 'Add elasticCache');\n      var errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.accountId);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = API_BASE_URL + \"/elasticCaches\";\n      var optas = [];\n\n      if (item.accounts && item.accounts.length) {\n        item.accounts.map(function (s) {\n          optas.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309\n            },\n            __self: this\n          }, s.id, \" \", s.numAccount));\n        });\n      }\n\n      var account = item.accountId || '';\n      item.accountId = account;\n      var opts = [];\n\n      if (item.vpcs && item.vpcs.length) {\n        item.vpcs.map(function (s) {\n          opts.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var tri = item.vpcId || '';\n      item.vpcId = tri;\n      var optss = [];\n\n      if (item.subnetgroups && item.subnetgroups.length) {\n        item.subnetgroups.map(function (s) {\n          optss.push(React.createElement(\"option\", {\n            key: s.id,\n            value: s.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 328\n            },\n            __self: this\n          }, s.id, \" \", s.name));\n        });\n      }\n\n      var sg = item.subnetgroupId || '';\n      item.subnetgroupId = sg;\n      var optsg = [];\n      var optsgs = [];\n\n      if (item.sgss && item.sgss.length) {\n        item.sgss.map(function (s) {\n          if (item.sgs && item.sgs.length) item.sgs.map(function (ss) {\n            if (s.id == ss.id) {\n              optsgs.push({\n                value: s.id,\n                label: s.name\n              });\n            }\n          });\n          optsg.push({\n            value: s.id,\n            label: s.name\n          });\n        });\n      }\n\n      var securityGroup = React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"sgId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"Security Group (*)\"), React.createElement(Select, {\n        name: \"sgId\",\n        id: \"sgId\",\n        placeholder: \"Enter Security group\",\n        isMulti: true,\n        isSearchable: true,\n        value: optsgs,\n        onChange: function onChange(e) {\n          return _this4.onOptionChange(\"sgId\", e);\n        },\n        onBlur: this.handleBlur('sgId'),\n        options: optsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, errors.sgId));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Name (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: item.name || '',\n        placeholder: \"Enter name\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('name'),\n        autoComplete: \"name\",\n        valid: errors.name === '',\n        invalid: errors.name !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, errors.name)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"accountId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"Account (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"accountId\",\n        id: \"accountId\",\n        value: account,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('accountId'),\n        valid: errors.accountId === '',\n        invalid: errors.accountId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"Choose\"), optas), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, errors.accountId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"vpcId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"Vpcs (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"vpcId\",\n        id: \"vpcId\",\n        value: tri,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('vpcId'),\n        valid: errors.vpcId === '',\n        invalid: errors.vpcId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"Choose\"), opts), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, errors.vpcId)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"subnetgroupId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"Subnet group (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"subnetgroupId\",\n        id: \"subnetgroupId\",\n        value: sg,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('subnetgroupId'),\n        valid: errors.subnetgroupId === '',\n        invalid: errors.subnetgroupId !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, \"Choose\"), optss), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, errors.subnetgroupId)), securityGroup, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return ElasticCacheEdit;\n}(Component);\n\nexport default withRouter(ElasticCacheEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\ElasticCacheEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","Select","API_BASE_URL","ElasticCacheEdit","props","emptyItem","name","text","account","accounts","accountId","vpc","vpcs","vpcId","subnetgroup","subnetgroups","subnetgroupId","sgss","sgs","sgId","touched","handleBlur","field","evt","item","state","setState","onOptionChange","selectName","selectedOption","options","values","i","l","length","map","s","id","value","push","handleChange","bind","handleSubmit","match","params","fetch","json","elasticCache","then","result","jsonResult","event","target","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","sg","method","headers","body","JSON","stringify","history","title","canc","optas","numAccount","opts","tri","optss","optsg","optsgs","ss","label","securityGroup","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass ElasticCacheEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    vpc: {},\r\n    vpcs: {},\r\n    vpcId : '',\r\n    subnetgroup: {},\r\n    subnetgroups: {},\r\n    subnetgroupId : '',\r\n    sgss: {},\r\n    sgs: [],\r\n    sgId: [],\r\n    touched: {\r\n      name: false,\r\n      vpcId: false,\r\n      subnetgroupId: false,\r\n      accountId: false,\r\n      sgId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const elasticCache = await (await fetch(`${API_BASE_URL}/elasticCaches/${this.props.match.params.id}`)).json();\r\n      elasticCache.touched = {\r\n        name: false,\r\n        vpcId: false,\r\n        subnetgroupId: false,\r\n        accountId: false,\r\n        sgId: false\r\n      };\r\n      this.setState({item: elasticCache});\r\n      \r\n      fetch(API_BASE_URL + '/vpcs/' + (elasticCache.vpc.id) + '/type/ECC' + '/subnetGroups',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetgroups = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n      await fetch(API_BASE_URL + '/accounts/' + (elasticCache.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      \r\n      \r\n      fetch(API_BASE_URL + '/vpcs/' + (elasticCache.vpc.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n\r\n\r\n      let item = {...this.state.item};\r\n      item.accountId = elasticCache.account.id;\r\n      item.vpcId = elasticCache.vpc.id;\r\n      item.subnetgroupId = elasticCache.subnetgroup.id;\r\n\r\n      var values = [];\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.sgs = values;\r\n\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const elasticCache = {\r\n        name: '',\r\n        text: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        subnetgroup: {},\r\n        subnetgroups: {},\r\n        subnetgroupId : '',\r\n        sgss: {},\r\n        sgs: [],\r\n        sgId: [],\r\n        touched: {\r\n          name: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          accountId: false,\r\n          sgId: false\r\n        }\r\n      };\r\n      elasticCache.touched = {\r\n          name: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          accountId: false,\r\n          sgId: false\r\n      };\r\n      this.setState({item: elasticCache});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      item.subnetgroupId = '';\r\n      item.subnetgroups = [];\r\n      item.sgId = '';\r\n      item.sgss = [];\r\n    }\r\n\r\n    if(name === 'vpcId')\r\n    {\r\n      \r\n      fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/type/ECC' + '/subnetGroups',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        item.subnetgroups = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/sgs',)\r\n      .then((result) => { \r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        item.sgss = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          vpcId: true,\r\n          subnetgroupId: true,\r\n          accountId: false,\r\n          sgId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.accountId, item.sgId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/elasticCaches'; \r\n\r\n    item.account={id: item.accountId};\r\n    item.vpc={id: item.vpcId};\r\n    item.subnetgroup={id: item.subnetgroupId};\r\n\r\n    var values = [];\r\n    if(item.sgs && item.sgs.length){\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.sg= values;\r\n    }\r\n\r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/elasticCaches/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/elasticCaches', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetgroupId, accountId, sgId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      vpcId: '',\r\n      subnetgroupId: '',\r\n      accountId: '',\r\n      sgId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.subnetgroupId && subnetgroupId.length === 0){\r\n      errors.subnetgroupId = 'Subnet group should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.sgId && sgId && this.state.item.sgs.length <= 0){\r\n      errors.sgId = 'sgId should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'sgId')\r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.sgss && item.sgss.length){\r\n              item.sgss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.sgs = values;\r\n      }\r\n      this.setState({item});\r\n  };\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit elasticCache' : 'Add elasticCache'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/elasticCaches\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let tri = item.vpcId || '';\r\n    item.vpcId = tri;\r\n\r\n\r\n    let optss = [];\r\n    if(item.subnetgroups && item.subnetgroups.length){\r\n      item.subnetgroups.map(s => {  \r\n          optss.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let sg = item.subnetgroupId || '';\r\n    item.subnetgroupId = sg;\r\n\r\n    let optsg = [];  \r\n    let optsgs = [];\r\n    if(item.sgss && item.sgss.length){\r\n      item.sgss.map(s => {  \r\n          if(item.sgs && item.sgs.length) item.sgs.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsgs.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsg.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n    const securityGroup = <FormGroup>\r\n            <Label for=\"sgId\">Security Group (*)</Label>\r\n            <Select name=\"sgId\" id=\"sgId\"  placeholder=\"Enter Security group\" isMulti isSearchable\r\n              value={optsgs}\r\n              onChange={e => this.onOptionChange(\"sgId\",e)}\r\n              onBlur={this.handleBlur('sgId')}\r\n              options={optsg}\r\n            />\r\n            <FormFeedback>{errors.sgId}</FormFeedback>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         <FormGroup>\r\n            <Label for=\"subnetgroupId\">Subnet group (*)</Label>\r\n            <Input type=\"select\" name=\"subnetgroupId\" id=\"subnetgroupId\"  value={sg} onChange={this.handleChange} onBlur={this.handleBlur('subnetgroupId')}\r\n                 valid={errors.subnetgroupId === ''}\r\n                 invalid={errors.subnetgroupId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optss}\r\n            </Input>\r\n            <FormFeedback>{errors.subnetgroupId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {securityGroup}\r\n\r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(ElasticCacheEdit);"]},"metadata":{},"sourceType":"module"}