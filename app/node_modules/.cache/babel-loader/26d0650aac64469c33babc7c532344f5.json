{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _const = require('./const');\n\nvar _const2 = _interopRequireDefault(_const);\n\nvar _bootstrap = require('./bootstrap');\n\nvar _pagination = require('./pagination');\n\nvar _pagination2 = _interopRequireDefault(_pagination);\n\nvar _page = require('./page');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint react/prop-types: 0 */\n\n/* eslint react/require-default-props: 0 */\n\n/* eslint no-lonely-if: 0 */\n\n\nexports.default = function (isRemotePagination, handleRemotePageChange) {\n  var PaginationContext = _react2.default.createContext();\n\n  var PaginationProvider = function (_React$Component) {\n    _inherits(PaginationProvider, _React$Component);\n\n    function PaginationProvider(props) {\n      _classCallCheck(this, PaginationProvider);\n\n      var _this = _possibleConstructorReturn(this, (PaginationProvider.__proto__ || Object.getPrototypeOf(PaginationProvider)).call(this, props));\n\n      _this.handleChangePage = _this.handleChangePage.bind(_this);\n      _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);\n      var currPage = void 0;\n      var currSizePerPage = void 0;\n      var options = props.pagination.options;\n      var sizePerPageList = options.sizePerPageList || _const2.default.SIZE_PER_PAGE_LIST; // initialize current page\n\n      if (typeof options.page !== 'undefined') {\n        currPage = options.page;\n      } else if (typeof options.pageStartIndex !== 'undefined') {\n        currPage = options.pageStartIndex;\n      } else {\n        currPage = _const2.default.PAGE_START_INDEX;\n      } // initialize current sizePerPage\n\n\n      if (typeof options.sizePerPage !== 'undefined') {\n        currSizePerPage = options.sizePerPage;\n      } else if (_typeof(sizePerPageList[0]) === 'object') {\n        currSizePerPage = sizePerPageList[0].value;\n      } else {\n        currSizePerPage = sizePerPageList[0];\n      }\n\n      _this.currPage = currPage;\n      _this.currSizePerPage = currSizePerPage;\n      return _this;\n    }\n\n    _createClass(PaginationProvider, [{\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        var needNewState = false;\n        var currPage = this.currPage;\n        var currSizePerPage = this.currSizePerPage;\n        var onPageChange = nextProps.pagination.options.onPageChange;\n        var pageStartIndex = typeof nextProps.pagination.options.pageStartIndex !== 'undefined' ? nextProps.pagination.options.pageStartIndex : _const2.default.PAGE_START_INDEX; // user should align the page when the page is not fit to the data size when remote enable\n\n        if (!isRemotePagination()) {\n          var newPage = (0, _page.alignPage)(nextProps.data, currPage, currSizePerPage, pageStartIndex);\n\n          if (currPage !== newPage) {\n            currPage = newPage;\n            needNewState = true;\n          }\n        } else {\n          this.currPage = nextProps.pagination.options.page;\n          this.currSizePerPage = nextProps.pagination.options.sizePerPage;\n        }\n\n        if (needNewState) {\n          if (onPageChange) {\n            onPageChange(currPage, currSizePerPage);\n          }\n\n          this.currPage = currPage;\n          this.currSizePerPage = currSizePerPage;\n        }\n      }\n    }, {\n      key: 'handleChangePage',\n      value: function handleChangePage(currPage) {\n        var currSizePerPage = this.currSizePerPage;\n        var options = this.props.pagination.options;\n\n        if (options.onPageChange) {\n          options.onPageChange(currPage, currSizePerPage);\n        }\n\n        this.currPage = currPage;\n\n        if (isRemotePagination()) {\n          handleRemotePageChange(currPage, currSizePerPage);\n          return;\n        }\n\n        this.forceUpdate();\n      }\n    }, {\n      key: 'handleChangeSizePerPage',\n      value: function handleChangeSizePerPage(currSizePerPage, currPage) {\n        var options = this.props.pagination.options;\n\n        if (options.onSizePerPageChange) {\n          options.onSizePerPageChange(currSizePerPage, currPage);\n        }\n\n        this.currPage = currPage;\n        this.currSizePerPage = currSizePerPage;\n\n        if (isRemotePagination()) {\n          handleRemotePageChange(currPage, currSizePerPage);\n          return;\n        }\n\n        this.forceUpdate();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var data = this.props.data;\n        var _props = this.props,\n            options = _props.pagination.options,\n            bootstrap4 = _props.bootstrap4;\n        var currPage = this.currPage,\n            currSizePerPage = this.currSizePerPage;\n        var withFirstAndLast = typeof options.withFirstAndLast === 'undefined' ? _const2.default.With_FIRST_AND_LAST : options.withFirstAndLast;\n        var alwaysShowAllBtns = typeof options.alwaysShowAllBtns === 'undefined' ? _const2.default.SHOW_ALL_PAGE_BTNS : options.alwaysShowAllBtns;\n        var hideSizePerPage = typeof options.hideSizePerPage === 'undefined' ? _const2.default.HIDE_SIZE_PER_PAGE : options.hideSizePerPage;\n        var hidePageListOnlyOnePage = typeof options.hidePageListOnlyOnePage === 'undefined' ? _const2.default.HIDE_PAGE_LIST_ONLY_ONE_PAGE : options.hidePageListOnlyOnePage;\n        var pageStartIndex = typeof options.pageStartIndex === 'undefined' ? _const2.default.PAGE_START_INDEX : options.pageStartIndex;\n        data = isRemotePagination() ? data : (0, _page.getByCurrPage)(data, currPage, currSizePerPage, pageStartIndex);\n        return _react2.default.createElement(PaginationContext.Provider, {\n          value: {\n            data: data\n          }\n        }, this.props.children, _react2.default.createElement(_bootstrap.BootstrapContext.Provider, {\n          value: {\n            bootstrap4: bootstrap4\n          }\n        }, _react2.default.createElement(_pagination2.default, {\n          key: 'pagination',\n          dataSize: options.totalSize || this.props.data.length,\n          currPage: currPage,\n          currSizePerPage: currSizePerPage,\n          onPageChange: this.handleChangePage,\n          onSizePerPageChange: this.handleChangeSizePerPage,\n          sizePerPageList: options.sizePerPageList || _const2.default.SIZE_PER_PAGE_LIST,\n          paginationSize: options.paginationSize || _const2.default.PAGINATION_SIZE,\n          pageStartIndex: pageStartIndex,\n          withFirstAndLast: withFirstAndLast,\n          alwaysShowAllBtns: alwaysShowAllBtns,\n          hideSizePerPage: hideSizePerPage,\n          hidePageListOnlyOnePage: hidePageListOnlyOnePage,\n          showTotal: options.showTotal,\n          paginationTotalRenderer: options.paginationTotalRenderer,\n          firstPageText: options.firstPageText || _const2.default.FIRST_PAGE_TEXT,\n          prePageText: options.prePageText || _const2.default.PRE_PAGE_TEXT,\n          nextPageText: options.nextPageText || _const2.default.NEXT_PAGE_TEXT,\n          lastPageText: options.lastPageText || _const2.default.LAST_PAGE_TEXT,\n          prePageTitle: options.prePageTitle || _const2.default.PRE_PAGE_TITLE,\n          nextPageTitle: options.nextPageTitle || _const2.default.NEXT_PAGE_TITLE,\n          firstPageTitle: options.firstPageTitle || _const2.default.FIRST_PAGE_TITLE,\n          lastPageTitle: options.lastPageTitle || _const2.default.LAST_PAGE_TITLE\n        })));\n      }\n    }]);\n\n    return PaginationProvider;\n  }(_react2.default.Component);\n\n  PaginationProvider.propTypes = {\n    data: _propTypes2.default.array.isRequired\n  };\n  return {\n    Provider: PaginationProvider,\n    Consumer: PaginationContext.Consumer\n  };\n};","map":null,"metadata":{},"sourceType":"script"}