{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\RuleSgEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar cidrRegex = require('cidr-regex');\n\nvar RuleSgEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RuleSgEdit, _Component);\n\n  function RuleSgEdit(props) {\n    var _this;\n\n    _classCallCheck(this, RuleSgEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RuleSgEdit).call(this, props));\n    _this.emptyItem = {\n      type: '',\n      ruleType: '',\n      protocol: '',\n      portRange: '',\n      cidr: '',\n      text: '',\n      sg: {},\n      touched: {\n        type: false,\n        ruleType: false,\n        protocol: false,\n        portRange: false,\n        cidr: false\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        var item = _objectSpread({}, _this.state.item);\n\n        item.touched = _objectSpread({}, _this.state.item.touched, _defineProperty({}, field, true));\n\n        _this.setState({\n          item: item\n        });\n      };\n    };\n\n    _this.state = {\n      item: _this.emptyItem\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RuleSgEdit, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var ruleSg, sg, _ruleSg;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.match.params.id !== 'new')) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"\".concat(API_BASE_URL, \"/ruleSgs/\").concat(this.props.match.params.id));\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.json();\n\n              case 5:\n                ruleSg = _context.sent;\n                ruleSg.touched = {\n                  type: false,\n                  ruleType: false,\n                  protocol: false,\n                  portRange: false,\n                  cidr: false\n                };\n                this.setState({\n                  item: ruleSg\n                });\n                _context.next = 19;\n                break;\n\n              case 10:\n                _context.next = 12;\n                return fetch(\"\".concat(API_BASE_URL, \"/sgs/\").concat(this.props.match.params.ids));\n\n              case 12:\n                _context.next = 14;\n                return _context.sent.json();\n\n              case 14:\n                sg = _context.sent;\n                _ruleSg = {\n                  ruleType: '',\n                  protocol: '',\n                  portRange: '',\n                  cidr: '',\n                  type: '',\n                  text: '',\n                  sg: {},\n                  touched: {\n                    type: false,\n                    ruleType: false,\n                    protocol: false,\n                    portRange: false,\n                    cidr: false\n                  }\n                };\n                _ruleSg.sg = sg;\n                _ruleSg.touched = {\n                  type: false,\n                  ruleType: false,\n                  protocol: false,\n                  portRange: false,\n                  cidr: false\n                };\n                this.setState({\n                  item: _ruleSg\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      var item = _objectSpread({}, this.state.item);\n\n      item[name] = value;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var item, errors, isDisabled, hist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                item = this.state.item;\n                item.touched = {\n                  type: true,\n                  ruleType: true,\n                  protocol: true,\n                  portRange: true,\n                  cidr: true\n                };\n                errors = this.validate(item.type, item.ruleType, item.protocol, item.portRange, item.cidr);\n                isDisabled = Object.keys(errors).some(function (x) {\n                  return errors[x];\n                });\n\n                if (!isDisabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.forceUpdate();\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                hist = FRT_BASE_URL + '/sg/' + item.sg.id + '/ruleSgs';\n                item.sg = {\n                  id: item.sg.id\n                }; //console.log(\"sma\" + item.subnetgroupId);\n                //return;\n\n                _context2.next = 12;\n                return fetch(item.id ? API_BASE_URL + '/sgs/' + item.sg.id + '/ruleSgs/' + item.id : API_BASE_URL + '/sgs/' + item.sg.id + '/ruleSgs', {\n                  method: item.id ? 'PUT' : 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(item)\n                });\n\n              case 12:\n                this.props.history.push(hist);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(type, ruleType, protocol, portRange, cidr) {\n      var errors = {\n        type: '',\n        ruleType: '',\n        protocol: '',\n        portRange: '',\n        cidr: ''\n      };\n\n      if (this.state.item.touched.type && type.length === 0) {\n        errors.type = 'Type should not be null';\n        return errors;\n      } else if (this.state.item.touched.ruleType && ruleType.length === 0) {\n        errors.ruleType = 'Type should not be null';\n        return errors;\n      } else if (this.state.item.touched.protocol && protocol.length === 0) {\n        errors.protocol = 'Protocol should not be null';\n        return errors;\n      } else if (this.state.item.touched.portRange && portRange.length === 0) {\n        errors.portRange = 'Portrange should not be null';\n        return errors;\n      } else if (this.state.item.touched.cidr && !cidrRegex({\n        exact: true\n      }).test(cidr)) {\n        errors.cidr = 'Cidr should  be a cidr format';\n        return errors;\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.state.item;\n      var title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, item.id ? 'Edit ruleSg' : 'Add ruleSg');\n      var errors = this.validate(item.type, item.ruleType, item.protocol, item.portRange, item.cidr);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var canc = FRT_BASE_URL + \"/sg/\" + item.sg.id + \"/ruleSgs\";\n      var sg = null;\n      sg = React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"sgId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Sg: \", item.sg.name), React.createElement(Input, {\n        type: \"text\",\n        name: \"sgId\",\n        id: \"sgId\",\n        value: item.sg.id || '',\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, title, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"In/Out (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"type\",\n        id: \"type\",\n        value: item.type || '',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('type'),\n        valid: errors.type === '',\n        invalid: errors.type !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"INBOUND\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"INBOUND\"), React.createElement(\"option\", {\n        value: \"OUTBOUND\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"OUTBOUND\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, errors.type)), sg, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"ruleType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Type (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"ruleType\",\n        id: \"ruleType\",\n        value: item.ruleType || '',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('ruleType'),\n        valid: errors.ruleType === '',\n        invalid: errors.ruleType !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"ruleSgType1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"ruleSgType1\"), React.createElement(\"option\", {\n        value: \"ruleSgType2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"ruleSgType2\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, errors.ruleType)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"protocol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Protocol (*)\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"protocol\",\n        id: \"protocol\",\n        value: item.protocol || '',\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('protocol'),\n        valid: errors.protocol === '',\n        invalid: errors.protocol !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Choose\"), React.createElement(\"option\", {\n        value: \"protocol1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"protocol1\"), React.createElement(\"option\", {\n        value: \"protocol2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"protocol2\")), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, errors.protocol)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"portRange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Port Range (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"portRange\",\n        id: \"portRange\",\n        value: item.portRange || '',\n        placeholder: \"Enter portRange\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('portRange'),\n        autoComplete: \"portRange\",\n        valid: errors.portRange === '',\n        invalid: errors.portRange !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, errors.portRange)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"cidr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Source/Destination (*)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"cidr\",\n        id: \"cidr\",\n        value: item.cidr || '',\n        placeholder: \"Enter cidr\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur('cidr'),\n        autoComplete: \"cidr\",\n        valid: errors.cidr === '',\n        invalid: errors.cidr !== '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, errors.cidr)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        value: item.text || '',\n        onChange: this.handleChange,\n        autoComplete: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        tag: Link,\n        to: canc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return RuleSgEdit;\n}(Component);\n\nexport default withRouter(RuleSgEdit);","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\RuleSgEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","FormFeedback","AppNavbar","API_BASE_URL","FRT_BASE_URL","cidrRegex","require","RuleSgEdit","props","emptyItem","type","ruleType","protocol","portRange","cidr","text","sg","touched","handleBlur","field","evt","item","state","setState","handleChange","bind","handleSubmit","match","params","id","fetch","json","ruleSg","ids","event","target","value","name","preventDefault","errors","validate","isDisabled","Object","keys","some","x","forceUpdate","hist","method","headers","body","JSON","stringify","history","push","length","exact","test","title","canc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass RuleSgEdit extends Component {\r\n\r\n  emptyItem = {\r\n    type: '',\r\n    ruleType: '', \r\n    protocol:'', \r\n    portRange:'', \r\n    cidr: '',\r\n    text: '',\r\n    sg: {},\r\n    touched: {\r\n      type: false,\r\n      ruleType: false, \r\n      protocol: false, \r\n      portRange: false,\r\n      cidr: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const ruleSg = await (await fetch(`${API_BASE_URL}/ruleSgs/${this.props.match.params.id}`)).json();\r\n      ruleSg.touched = {\r\n        type: false, \r\n        ruleType: false, \r\n        protocol: false, \r\n        portRange: false, \r\n        cidr: false\r\n      };\r\n      this.setState({item: ruleSg});\r\n      \r\n    }\r\n    else {\r\n      const sg = await (await fetch(`${API_BASE_URL}/sgs/${this.props.match.params.ids}`)).json();\r\n      const ruleSg = {\r\n        ruleType: '', \r\n        protocol:'', \r\n        portRange:'', \r\n        cidr: '',\r\n        type: '',\r\n        text: '',\r\n        sg: {},\r\n        touched: {\r\n          type: false, \r\n          ruleType: false, \r\n          protocol: false, \r\n          portRange: false, \r\n          cidr: false\r\n        }\r\n      };\r\n      ruleSg.sg = sg;\r\n      ruleSg.touched = {\r\n          type: false, \r\n          ruleType: false, \r\n          protocol: false, \r\n          portRange: false, \r\n          cidr: false\r\n      };\r\n      this.setState({item: ruleSg});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          type: true, \r\n          ruleType: true, \r\n          protocol: true, \r\n          portRange: true, \r\n          cidr: true\r\n    };\r\n    const errors = this.validate(item.type, item.ruleType, item.protocol, item.portRange, item.cidr);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= FRT_BASE_URL + '/sg/' + item.sg.id +'/ruleSgs'; \r\n\r\n    item.sg={id: item.sg.id};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/sgs/' + (item.sg.id) + '/ruleSgs/'+(item.id) : API_BASE_URL + '/sgs/' + item.sg.id + '/ruleSgs', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(type, ruleType, protocol, portRange, cidr) {\r\n\r\n    const errors = {\r\n      type: '', \r\n      ruleType: '', \r\n      protocol:'', \r\n      portRange:'', \r\n      cidr: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'Type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.ruleType && ruleType.length === 0){\r\n      errors.ruleType = 'Type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.protocol && protocol.length === 0){\r\n      errors.protocol = 'Protocol should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.portRange && portRange.length === 0){\r\n      errors.portRange = 'Portrange should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.cidr && !cidrRegex({exact: true}).test(cidr)){\r\n      errors.cidr = 'Cidr should  be a cidr format';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit ruleSg' : 'Add ruleSg'}</h2>;\r\n\r\n    const errors = this.validate(item.type, item.ruleType, item.protocol, item.portRange, item.cidr);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = FRT_BASE_URL + \"/sg/\" + item.sg.id + \"/ruleSgs\";\r\n\r\n    let sg = null;\r\n    sg = <FormGroup>\r\n            <Label for=\"sgId\">Sg: {item.sg.name}</Label>\r\n            <Input type=\"text\" name=\"sgId\" id=\"sgId\" value={item.sg.id || ''} disabled={true}/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          <FormGroup>\r\n            <Label for=\"type\">In/Out (*)</Label>\r\n            <Input type=\"select\" name=\"type\" id=\"type\" value={item.type || ''} onChange={this.handleChange} onBlur={this.handleBlur('type')} \r\n                 valid={errors.type === ''}\r\n                 invalid={errors.type !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"INBOUND\">INBOUND</option>\r\n              <option value=\"OUTBOUND\">OUTBOUND</option>\r\n            </Input>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n          {sg}\r\n\r\n          <FormGroup>\r\n            <Label for=\"ruleType\">Type (*)</Label>\r\n            <Input type=\"select\" name=\"ruleType\" id=\"ruleType\" value={item.ruleType || ''} onChange={this.handleChange} onBlur={this.handleBlur('ruleType')} \r\n                 valid={errors.ruleType === ''}\r\n                 invalid={errors.ruleType !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"ruleSgType1\">ruleSgType1</option>\r\n              <option value=\"ruleSgType2\">ruleSgType2</option>\r\n            </Input>\r\n            <FormFeedback>{errors.ruleType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"protocol\">Protocol (*)</Label>\r\n            <Input type=\"select\" name=\"protocol\" id=\"protocol\" value={item.protocol || ''} onChange={this.handleChange} onBlur={this.handleBlur('protocol')} \r\n                 valid={errors.protocol === ''}\r\n                 invalid={errors.protocol !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"protocol1\">protocol1</option>\r\n              <option value=\"protocol2\">protocol2</option>\r\n            </Input>\r\n            <FormFeedback>{errors.protocol}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"portRange\">Port Range (*)</Label>\r\n            <Input type=\"text\" name=\"portRange\" id=\"portRange\" value={item.portRange || ''} placeholder=\"Enter portRange\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('portRange')} autoComplete=\"portRange\"\r\n                   valid={errors.portRange === ''}\r\n                   invalid={errors.portRange !== ''}\r\n            />\r\n           <FormFeedback>{errors.portRange}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"cidr\">Source/Destination (*)</Label>\r\n            <Input type=\"text\" name=\"cidr\" id=\"cidr\" value={item.cidr || ''} placeholder=\"Enter cidr\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('cidr')} autoComplete=\"cidr\"\r\n                   valid={errors.cidr === ''}\r\n                   invalid={errors.cidr !== ''}\r\n            />\r\n           <FormFeedback>{errors.cidr}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(RuleSgEdit);"]},"metadata":{},"sourceType":"module"}