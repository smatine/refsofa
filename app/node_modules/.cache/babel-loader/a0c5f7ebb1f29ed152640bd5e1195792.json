{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\ElasticCacheList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar ElasticCacheList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ElasticCacheList, _Component);\n\n  function ElasticCacheList(props) {\n    var _this;\n\n    _classCallCheck(this, ElasticCacheList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ElasticCacheList).call(this, props));\n    _this.state = {\n      elasticCaches: [],\n      isLoading: true\n    };\n    _this.remove = _this.remove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ElasticCacheList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      }); //fetch(`/trigrammes/${this.props.match.params.id}/products`)\n\n      fetch(\"\".concat(API_BASE_URL, \"/elasticCaches\")).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          elasticCaches: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(accId, id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_BASE_URL, \"/vpcs/\").concat(accId, \"/elasticCaches/\").concat(id), {\n                  method: 'DELETE',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function () {\n                  var updateElasticCache = _toConsumableArray(_this3.state.elasticCaches).filter(function (i) {\n                    return i.id !== id;\n                  });\n\n                  _this3.setState({\n                    elasticCaches: updateElasticCache\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function remove(_x, _x2) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          elasticCaches = _this$state.elasticCaches,\n          isLoading = _this$state.isLoading;\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var elasticCacheList = elasticCaches.map(function (elasticCache) {\n        var link = FRT_BASE_URL + \"/vpcs/\" + elasticCache.vpc.id;\n        var linkAccount = FRT_BASE_URL + \"/accounts/\" + elasticCache.account.id;\n        var sg = FRT_BASE_URL + \"/subnetgroups/\" + elasticCache.subnetgroup.id;\n        var sgs = '';\n        var eccSgs = elasticCache.sgs.map(function (sg) {\n          sgs = sgs + '|' + sg.id + ':' + sg.name;\n        });\n        return React.createElement(\"tr\", {\n          key: elasticCache.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, elasticCache.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, elasticCache.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, elasticCache.text), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: linkAccount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, elasticCache.account.numAccount)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, elasticCache.vpc.name)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: sg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, elasticCache.subnetgroup.name)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, sgs), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          tag: Link,\n          to: FRT_BASE_URL + \"/elasticCaches/\" + elasticCache.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this4.remove(elasticCache.vpc.id, elasticCache.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n      var add = \"\".concat(FRT_BASE_URL, \"/elasticCaches/new\"); //const trig = `/trigrammes`;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        tag: Link,\n        to: add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Add ElasticCache\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"ElasticCache\"), React.createElement(Table, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Account\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Vpc\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Subnet Group\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Security Group\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, elasticCacheList))));\n    }\n  }]);\n\n  return ElasticCacheList;\n}(Component);\n\nexport default ElasticCacheList;","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\ElasticCacheList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","API_BASE_URL","FRT_BASE_URL","ElasticCacheList","props","state","elasticCaches","isLoading","remove","bind","setState","fetch","then","response","json","data","accId","id","method","headers","updateElasticCache","filter","i","elasticCacheList","map","elasticCache","link","vpc","linkAccount","account","sg","subnetgroup","sgs","eccSgs","name","whiteSpace","text","numAccount","add"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass ElasticCacheList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {elasticCaches: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/elasticCaches`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({elasticCaches: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/elasticCaches/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateElasticCache = [...this.state.elasticCaches].filter(i => i.id !== id);\r\n      this.setState({elasticCaches: updateElasticCache});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {elasticCaches, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const elasticCacheList = elasticCaches.map(elasticCache => {\r\n      \r\n    const link = FRT_BASE_URL + \"/vpcs/\" + elasticCache.vpc.id; \r\n    const linkAccount = FRT_BASE_URL + \"/accounts/\" + elasticCache.account.id; \r\n      \r\n    const sg = FRT_BASE_URL + \"/subnetgroups/\" + elasticCache.subnetgroup.id;\r\n    let sgs = '';\r\n    const eccSgs = elasticCache.sgs.map(sg => {\r\n      sgs = sgs + '|' + sg.id + ':' + sg.name;\r\n    })\r\n\r\n    return <tr key={elasticCache.id}>\r\n      <td style={{whiteSpace: 'nowrap'}}>{elasticCache.id}</td>\r\n\r\n\r\n      <td>{elasticCache.name}</td>\r\n      <td>{elasticCache.text}</td>\r\n\r\n      <td><a href={linkAccount}>{elasticCache.account.numAccount}</a></td>\r\n      <td><a href={link}>{elasticCache.vpc.name}</a></td>\r\n      <td><a href={sg}>{elasticCache.subnetgroup.name}</a></td>\r\n\r\n      <td>{sgs}</td>\r\n      \r\n\r\n      <td>\r\n        <ButtonGroup>\r\n          <Button size=\"sm\" color=\"primary\" tag={Link} to={FRT_BASE_URL + \"/elasticCaches/\" + elasticCache.id}>Edit</Button>\r\n          <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(elasticCache.vpc.id, elasticCache.id)}>Delete</Button>\r\n        </ButtonGroup>\r\n      </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${FRT_BASE_URL}/elasticCaches/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add ElasticCache</Button>\r\n          </div>\r\n          \r\n          <h3>ElasticCache</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Subnet Group</th>\r\n              <th width=\"5%\">Security Group</th>\r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {elasticCacheList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ElasticCacheList;"]},"metadata":{},"sourceType":"module"}