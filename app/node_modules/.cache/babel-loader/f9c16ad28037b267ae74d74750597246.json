{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ref\\\\referentiel\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ref\\\\referentiel\\\\app\\\\src\\\\ProductList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\n\nvar ProductList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductList, _Component);\n\n  function ProductList(props) {\n    var _this;\n\n    _classCallCheck(this, ProductList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductList).call(this, props));\n    _this.state = {\n      products: [],\n      isLoading: true\n    };\n    _this.remove = _this.remove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProductList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      }); //fetch(`/trigrammes/${this.props.match.params.id}/products`)\n\n      fetch(\"\".concat(API_BASE_URL, \"/products\")).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          products: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(accId, id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_BASE_URL, \"/trigrammes/\").concat(accId, \"/products/\").concat(id), {\n                  method: 'DELETE',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function () {\n                  var updateProduct = _toConsumableArray(_this3.state.products).filter(function (i) {\n                    return i.id !== id;\n                  });\n\n                  _this3.setState({\n                    products: updateProduct\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function remove(_x, _x2) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          products = _this$state.products,\n          isLoading = _this$state.isLoading;\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var productList = products.map(function (product) {\n        var link = FRT_BASE_URL + \"/trigrammes/\" + product.trigramme.id;\n        return React.createElement(\"tr\", {\n          key: product.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, product.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, product.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, product.mailList), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, product.type), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, product.bastion), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, product.mailListAlert), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, product.appContext), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, product.text), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, product.trigramme.name)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          tag: Link,\n          to: FRT_BASE_URL + \"/products/\" + product.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this4.remove(product.trigramme.id, product.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n      var add = \"\".concat(FRT_BASE_URL, \"/products/new\"); //const trig = `/trigrammes`;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        tag: Link,\n        to: add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Add Product\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Product\"), React.createElement(Table, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"mailList\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"type\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"bastion\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"mailListAlert\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Context\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Trigramme\"), React.createElement(\"th\", {\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, productList))));\n    }\n  }]);\n\n  return ProductList;\n}(Component);\n\nexport default ProductList;","map":{"version":3,"sources":["C:\\ref\\referentiel\\app\\src\\ProductList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","API_BASE_URL","FRT_BASE_URL","ProductList","props","state","products","isLoading","remove","bind","setState","fetch","then","response","json","data","accId","id","method","headers","updateProduct","filter","i","productList","map","product","link","trigramme","whiteSpace","name","mailList","type","bastion","mailListAlert","appContext","text","add"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL, FRT_BASE_URL } from './constants';\r\n\r\nclass ProductList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {products: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/products`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({products: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/trigrammes/${accId}/products/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateProduct = [...this.state.products].filter(i => i.id !== id);\r\n      this.setState({products: updateProduct});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {products, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const productList = products.map(product => {\r\n      \r\n      const link = FRT_BASE_URL + \"/trigrammes/\" + product.trigramme.id; \r\n\r\n      return <tr key={product.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{product.id}</td>\r\n\r\n\r\n        <td>{product.name}</td>\r\n        <td>{product.mailList}</td>\r\n        <td>{product.type}</td>\r\n        <td>{product.bastion}</td>\r\n        <td>{product.mailListAlert}</td>\r\n\t\t    <td>{product.appContext}</td>\r\n        <td>{product.text}</td>\r\n\r\n        <td><a href={link}>{product.trigramme.name}</a></td>\r\n\t\t    \r\n\t\t\r\n\r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={FRT_BASE_URL + \"/products/\" + product.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(product.trigramme.id, product.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${FRT_BASE_URL}/products/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Product</Button>\r\n          </div>\r\n          \r\n          <h3>Product</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">mailList</th>\r\n              <th width=\"5%\">type</th>\r\n              <th width=\"5%\">bastion</th>\r\n              <th width=\"5%\">mailListAlert</th>\r\n              <th width=\"5%\">Context</th> \r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Trigramme</th> \r\n              \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {productList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}