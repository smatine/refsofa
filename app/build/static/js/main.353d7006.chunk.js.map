{"version":3,"sources":["constants/index.js","AppNavbar.js","Home.js","TrigrammeList.js","TrigrammeEdit.js","AccountList.js","AccountEdit.js","ProductList.js","ProductEdit.js","VpcList.js","VpcEdit.js","TagVpcList.js","TagVpcEdit.js","SubnetList.js","SubnetEdit.js","TagSubnetList.js","TagSubnetEdit.js","SubnetGroupList.js","SubnetGroupEdit.js","CognitoList.js","CognitoEdit.js","DynamoDbList.js","DynamoDbEdit.js","SsmList.js","SsmEdit.js","StorageList.js","StorageEdit.js","StorageAclList.js","StorageAclEdit.js","TagStorageList.js","TagStorageEdit.js","RdsList.js","RdsEdit.js","EfsList.js","EfsEdit.js","TagEfsList.js","TagEfsEdit.js","ElasticSearchList.js","ElasticSearchEdit.js","ElasticCacheList.js","ElasticCacheEdit.js","NaclList.js","NaclEdit.js","RuleList.js","RuleEdit.js","TagList.js","TagEdit.js","RouteTableList.js","RouteTableEdit.js","RouteList.js","RouteEdit.js","TagRouteTableList.js","TagRouteTableEdit.js","TargetGroupList.js","TargetGroupEdit.js","TargetList.js","TargetEdit.js","TagTargetGroupList.js","TagTargetGroupEdit.js","LbList.js","LbEdit.js","ListenerList.js","ListenerEdit.js","TagLbList.js","TagLbEdit.js","PeeringList.js","PeeringEdit.js","TagPeeringList.js","TagPeeringEdit.js","SgList.js","SgEdit.js","RuleSgList.js","RuleSgEdit.js","TagSgList.js","TagSgEdit.js","VpcManageList.js","VpcManageEdit.js","SubnetManageList.js","SubnetManageEdit.js","RegionList.js","RegionEdit.js","AzList.js","AzEdit.js","AmiList.js","AmiEdit.js","InstanceTypeList.js","InstanceTypeEdit.js","EccList.js","EccEdit.js","EccStorageList.js","EccStorageEdit.js","EccNetworkInterfaceList.js","EccNetworkInterfaceEdit.js","TagEccList.js","TagEccEdit.js","LaunchConfigurationList.js","LaunchConfigurationEdit.js","LaunchConfigurationStorageList.js","LaunchConfigurationStorageEdit.js","AutoScalingGroupList.js","AutoScalingGroupEdit.js","TagAutoScalingGroupList.js","TagAutoScalingGroupEdit.js","PolicyList.js","PolicyEdit.js","EndPointList.js","EndPointEdit.js","RoleList.js","RoleEdit.js","GroupList.js","GroupEdit.js","UserList.js","UserEdit.js","DhcpList.js","DhcpEdit.js","TagDhcpList.js","TagDhcpEdit.js","KmsList.js","KmsEdit.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE_URL","AppNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","toggle","bind","assertThisInitialized","setState","react_default","a","createElement","reactstrap_es","color","dark","expand","tag","Link","to","concat","onClick","navbar","className","href","Component","Home","AppNavbar_AppNavbar","fluid","TrigrammeList","trigrammes","isLoading","remove","_this2","fetch","then","response","json","data","id","method","headers","Accept","Content-Type","updateTrigramme","toConsumableArray","_this3","filter","i","_this4","_this$state","trigrammeList","map","trigramme","key","style","whiteSpace","name","owner","irtCode","mailList","description","size","width","TrigrammeEdit","emptyItem","errors","touched","handleBlur","field","evt","item","objectSpread","defineProperty","handleChange","handleSubmit","match","params","emailState","event","target","value","preventDefault","validate","keys","some","x","forceUpdate","body","JSON","stringify","history","push","e","test","length","emailRex","title","isDisabled","onSubmit","for","type","placeholder","maxLength","onChange","onBlur","autoComplete","valid","invalid","disabled","withRouter","AccountList","accounts","triId","updateAccount","accountList","account","link","product","numAccount","env","alias","text","add","AccountEdit","products","productId","vpc","result","jsonResult","vpcs","console","log","hist","isDisabledd","opts","s","prd","ProductList","accId","updateProduct","productList","bastion","mailListAlert","appContext","ProductEdit","trigrammeId","tri","VpcList","updateVpc","vpcList","cidr","cid","nacls","routeTables","dhcps","VpcEdit","accountId","cidrs","cidrId","isSameEnv","acc","values","optsa","accounttId","TagVpcList","tags","updateTagVpc","tagList","TagVpcEdit","idv","number","canc","SubnetList","subnets","updateSubnet","subnetList","subnet","linkAccount","sub","sCidr","subs","subnetgroup","routetables","lbs","autoScalingGroups","subnetCidr","az","SubnetEdit","sCidrs","vpcId","subnetCidrId","isSameVpc","azs","azId","region","vp","optas","optsv","TagSubnetList","updateTagSubnet","TagSubnetEdit","ids","SubnetGroupList","subnetGroups","updateSubnetGroup","subnetGroupList","subnetGroup","SubnetGroupEdit","typeId","subnetss","subnetId","options","l","selected","rdss","efss","elasticcaches","elasticsearchs","optss","isSelected","ss","tt","multiple","CognitoList","cognitos","updateCognito","cognitoList","cognito","CognitoEdit","DynamoDbList","dynamoDbs","updateDynamoDb","dynamoDbList","dynamoDb","DynamoDbEdit","SsmList","ssms","updateSsm","ssmList","ssm","keyKmsId","SsmEdit","keyKms","StorageList","storages","updateStorage","storageList","storage","versionning","cloudWatchMetrics","encryption","kms","serverAccessLoging","storageTarget","grantAmazonS3ReadAccess","encryptionType","targetPrefix","cors","StorageEdit","regionId","regions","kmsId","kmss","storageTargetId","storageTargets","blockNewPublicAclObject","removePublicAccessGranted","blockNewPublicBucket","blockPublicCross","checked","storageTagetId","optrs","r","optks","check","inline","StorageAclList","storageAcls","updateStorageAcl","storageAclList","storageAcl","read","write","listObject","writeObject","externalAccount","groupe","store","StorageAclEdit","TagStorageList","updateTagStorage","TagStorageEdit","RdsList","updateRds","rdsList","rds","sg","sgs","multiAz","instanceType","dbEngineVesion","storageType","dbInstanceIdentifier","masterUserName","masterPassword","masterConfirmPassword","alocatedStorage","provisionedIops","RdsEdit","subnetgroups","subnetgroupId","sgss","sgId","instanceTypeId","onOptionChange","selectName","selectedOption","vals","instanceTypes","optsg","optsgs","label","securityGroup","react_select_esm","isMulti","isSearchable","optInstanceTypes","optAzs","EfsList","updateEfs","efsList","efs","provisionedIo","throughputMode","performanceMode","kmsExterne","EfsEdit","kmsss","TagEfsList","updateTagEfs","TagEfsEdit","ide","ElasticSearchList","elasticSearchs","updateElasticSearch","_this5","elasticSearchList","elasticSearch","sgName","del","remove2","isPrivate","prive","enableDedicatedMaster","enableZoneAwareness","enableEncrypt","nodeToNodeEncryption","nodeInstance","nodeMaster","nodes","node","instanceCount","allowExplicitIndex","domainName","version","volumeType","volumeSize","snapshotConfiguration","cacheSize","maxClauseCount","accessPolicy","ElasticSearchEdit","nodeInstanceId","nodeMasterId","dedicatedMasterInstanceCount","n","optsi","family","iti","itm","vpcsr","row","sm","subnetgroupr","dedicatedMasterInstanceType","accessType","ElasticCacheList","elasticCaches","updateElasticCache","elasticCacheList","elasticCache","ElasticCacheEdit","NaclList","updateNacl","naclList","nacl","isdef","def","NaclEdit","RuleList","rules","updateRule","ruleList","rule","allowdeny","allow","ruleType","protocol","portRange","cidrRegex","require","RuleEdit","idn","exact","TagList","updateTag","TagEdit","RouteTableList","updateRouteTable","routetableList","routetable","RouteTableEdit","RouteList","routes","updateRoute","routeList","route","routeTable","prop","propagation","peering","endPoint","destination","targetType","RouteEdit","peerings","peeringId","endPoints","endPointId","idr","propgation","optps","optes","TagRouteTableList","updateTagRouteTable","TagRouteTableEdit","TargetGroupList","targetgroups","updateTargetGroup","targetgroupList","targetgroup","isOverride","ahportoverride","listener","lb","isListener","stickySession","protocole","port","hcprotocole","hcpath","ahport","ahhealthythreshold","ahuhealthythreshold","ahtimeout","ahtinterval","ahsucesscode","deregistrationDelay","shortStartDuration","TargetGroupEdit","isLinkListener","portover","TargetList","targets","updateTarget","targetList","targetGroup","ecc","TargetEdit","eccId","eccs","idt","Number","optEccs","TagTargetGroupList","updateTagTargetGroup","TagTargetGroupEdit","LbList","updateLb","lbList","isInternal","scheme","ipType","deletionProtection","crossZoneLoadBalancing","http2","accessLogs","idleTimeout","connectionDraining","LbEdit","sgsId","iptype","optsss","ListenerList","listeners","updateListener","listenerList","ListenerEdit","targetGroups","targetGroupId","listenerId","idl","tg","optionTcp","optionHttp","optionHttps","optionHssl","TagLbList","updateTagLb","TagLbEdit","PeeringList","updatePeering","peeringList","rVpc","rOwner","rRegion","aVpc","peeringAccepterExternal","peeringAccepterInternal","aOwner","aRegion","PeeringEdit","vpc2","vpc2s","vpc2Id","vpceId","modif","optsr","reg","rregion","rowner","rvpc","rvpc2","TagPeeringList","updateTagPeering","TagPeeringEdit","idp","SgList","updateSg","sgList","elasticaches","launchConfigurations","isRds","isElasticcaches","isLb","isEcc","isLaunchConfiguration","nameTag","SgEdit","RuleSgList","ruleSgs","updateRuleSg","ruleSgList","ruleSg","RuleSgEdit","TagSgList","TagSgEdit","VpcManageList","updateCidr","columns","dataField","textFilter","delay","backgroundColor","sort","caseSensitive","formatter","cellContent","regc","vpcc","isDummyField","lib_default","headerClasses","keyField","bordered","defaultSorted","order","filterFactory","pagination","paginationFactory","hover","VpcManageEdit","alert","ip","newIp","replace","SubnetManageList","subnetcidrs","updateSubnetCidr","subnetCidrList","subsub","trig","SubnetManageEdit","idc","t","RegionList","updateRegion","regionList","RegionEdit","accs","AzList","regId","updateAz","azList","AzEdit","regs","AmiList","amis","updateAmi","amiList","ami","amiId","AmiEdit","InstanceTypeList","updateInstanceType","instanceTypeList","ebsOptimized","vcpus","memory","instanceStorage","networkPerformance","InstanceTypeEdit","EccList","updateEcc","eccList","isUsed","links","enableTerminationProtection","encoded64","userData","monitoring","role","ts","autoAssignPublicIp","shutdownBehaviour","userDataText","EccEdit","roles","roleId","optVpcs","optAmis","optSubnets","optRoles","RoleId","EccStorageList","eccStorages","updateEccStorage","eccStorageList","eccStorage","deleteOnTermination","device","snapshot","volume","iops","throughput","encrypted","EccStorageEdit","EccNetworkInterfaceList","eccNetworkInterfaces","updateEccNetworkInterface","eccNetworkInterfaceList","eccNetworkInterface","networkInterface","primaryIp","secondaryIp","ipv6Ips","ipaddr","EccNetworkInterfaceEdit","iprange","split","isValid","addr","parse","range","TagEccList","updateTagEcc","TagEccEdit","LaunchConfigurationList","updateLaunchConfiguration","launchConfigurationList","launchConfiguration","purchasingOption","kernalId","ramDiskId","iamRole","ipAddressType","LaunchConfigurationEdit","LaunchConfigurationStorageList","LaunchConfigurationStorageEdit","launchConfigurationStorage","AutoScalingGroupList","updateAutoScalingGroup","autoScalingGroupList","autoScalingGroup","loadBalancing","createAutoScalingGroup","groupSize","healthCheckType","healthCheckGracePeriod","instanceProtection","serviceLinkedRole","AutoScalingGroupEdit","launchConfigurationId","targetGroupss","optls","optsub","optsubs","optst","optsts","typecreateAutoScalingGroup","TagAutoScalingGroupList","autoscalinggroup","TagAutoScalingGroupEdit","ida","PolicyList","policys","updatePolicy","policyList","policy","groups","policyJson","PolicyEdit","EndPointList","updateEndPoint","endPointList","fullAccess","serviceName","EndPointEdit","routeTableId","policyId","optsp","fAccess","RoleList","updateRole","roleList","policies","RoleEdit","policyss","roleJson","optsps","GroupList","updateGroup","groupList","group","users","GroupEdit","UserList","updateUser","userList","user","programmaticAccess","consoleAccess","requirePasswordReset","autogeneratedPassword","customPassword","UserEdit","groupss","groupId","consolePassword","DhcpList","updateDhcp","dhcpList","dhcp","domainNameServers","ntpServers","netBiosNameServers","netBiosNodeType","DhcpEdit","TagDhcpList","updateTagDhcp","TagDhcpEdit","idd","KmsList","updateKms","kmsList","keyMaterialOrigin","KmsEdit","roless","userss","userId","optsu","optsus","optpolicys","App","BrowserRouter","Switch","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.353d7006.chunk.js","sourcesContent":["export const API_BASE_URL = '/referentiel';\r\nexport const ACCESS_TOKEN = 'accessToken';\r\n\r\n\r\nexport const NAME_MIN_LENGTH = 4;\r\nexport const NAME_MAX_LENGTH = 40;\r\n\r\nexport const USERNAME_MIN_LENGTH = 3;\r\nexport const USERNAME_MAX_LENGTH = 15;\r\n\r\nexport const EMAIL_MAX_LENGTH = 40;\r\n\r\nexport const PASSWORD_MIN_LENGTH = 6;\r\nexport const PASSWORD_MAX_LENGTH = 20;","import React, { Component } from 'react';\r\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nexport default class AppNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {isOpen: false};\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <Navbar color=\"dark\" dark expand=\"md\">\r\n      <NavbarBrand tag={Link} to={`${API_BASE_URL}`}>Home</NavbarBrand>\r\n      <NavbarToggler onClick={this.toggle}/>\r\n      <Collapse isOpen={this.state.isOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink\r\n              href=\"https://twitter.com/sma\">@sma</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"https://github.com\">GitHub</NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container } from 'reactstrap';\r\nimport { Row, Col, Alert } from 'reactstrap';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col>\r\n                <Row>\r\n                  <Col>\r\n                    \r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                  \r\n                  </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col>\r\n\r\n            </Col>\r\n\r\n            <Col>\r\n\r\n            </Col>\r\n\r\n            <Col>\r\n\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n            \r\n            </Col>\r\n            <Col>\r\n            \r\n            </Col>\r\n            <Col>\r\n            \r\n            </Col>\r\n            <Col>\r\n        \r\n            </Col>\r\n          </Row>\r\n\r\n\r\n          <Row>\r\n            <Col>\r\n            <Button  color=\"link\"><Link to={`${API_BASE_URL}/regions`}>Manage Region</Link></Button>\r\n            \r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/vpcmanage`}>Manage Cidr</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/trigrammes`}>Manage Trigramme</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/products`}>Manage Products</Link></Button>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/accounts`}>Manage Accounts</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/vpcs`}>Manage Vpcs</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/subnets`}>Manage Subnets</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/subnetGroups`}>Manage Subnet Group</Link></Button>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/storages`}>Manage S3</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/ssms`}>Manage SSM</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/cognitos`}>Manage Cognito</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/dynamoDbs`}>Manage DynamoDb</Link></Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/Rdss`}>Manage Rds</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/efss`}>Manage Efs</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/elasticSearchs`}>Manage Elastic Search</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/elasticCaches`}>Manage Elastic Cache</Link></Button>\r\n            </Col>\r\n          </Row>\r\n        \r\n          <Row>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/nacls`}>Manage Nacl</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/sgs`}>Manage Security Group</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/routetables`}>Manage Route Table</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/peerings`}>Manage Peering</Link></Button>\r\n            </Col>\r\n          </Row>\r\n      \r\n          <Row>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/targetgroups`}>Manage Target Group</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/lbs`}>Manage LoadBalancer</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/instancetypes`}>Manage Instance Type</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/eccs`}>Manage Ec2</Link></Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/launchconfigurations`}>Manage Launch Configuration</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/autoscalinggroups`}>Manage Auto scaling Group</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/policys`}>Manage Policy</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/endpoints`}>Manage EndPoint</Link></Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/roles`}>Manage Role</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/groups`}>Manage Group</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/users`}>Manage User</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/dhcps`}>Manage Dhcp Options Sets</Link></Button>\r\n            </Col>\r\n          </Row>\r\n\r\n            <Row>\r\n            <Col>\r\n            <Button color=\"link\"><Link to={`${API_BASE_URL}/kmss`}>Manage Kms</Link></Button>\r\n            </Col>\r\n            <Col>\r\n            \r\n            </Col>\r\n            <Col>\r\n            \r\n            </Col>\r\n            <Col>\r\n           \r\n            </Col>\r\n          </Row>\r\n\r\n\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TrigrammeList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {trigrammes: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(API_BASE_URL + '/trigrammes2')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({trigrammes: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`${API_BASE_URL}/trigrammes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTrigramme = [...this.state.trigrammes].filter(i => i.id !== id);\r\n      this.setState({trigrammes: updateTrigramme});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {trigrammes, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const trigrammeList = trigrammes.map(trigramme => {\r\n      \r\n      return <tr key={trigramme.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{trigramme.id}</td>\r\n\t\t    <td>{trigramme.name}</td>\r\n        <td>{trigramme.owner}</td>\r\n\r\n        <td>{trigramme.irtCode}</td>\r\n        \r\n        <td>{trigramme.mailList}</td>\r\n\t\t    <td>{trigramme.description}</td>\r\n        \r\n\r\n        \r\n        <td>\r\n          \r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/trigrammes/\" + trigramme.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(trigramme.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n          \r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={API_BASE_URL + \"/trigrammes/new\"}>Add TRI</Button>\r\n          </div>\r\n          <h3>Trigramme</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n\t\t\t        <th width=\"10%\">Id</th>\r\n              <th width=\"10%\">Name</th>\r\n              <th width=\"10%\">Owner</th>\r\n              <th width=\"10%\">IRT Code</th>\r\n              \r\n              <th width=\"10%\">Mailling List</th>\r\n              <th width=\"10%\">Description</th>\r\n              \r\n              <th width=\"10%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {trigrammeList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrigrammeList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TrigrammeEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    mailList:'',\r\n    owner: '',\r\n    irtCode:'',\r\n    description: '',\r\n    errors: {},\r\n    touched: {\r\n        name: false,\r\n        mailList: false,\r\n        owner: false,\r\n        irtCode: false\r\n      }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const trigramme = await (await fetch(`${API_BASE_URL}/trigrammes/${this.props.match.params.id}`)).json();\r\n      trigramme.touched = {\r\n        name: false,\r\n        mailList: false,\r\n        owner: false,\r\n        irtCode: false,\r\n        emailState: ''\r\n      };\r\n      this.setState({item: trigramme});\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n    \r\n    item.touched = {\r\n        name: true,\r\n        mailList: true,\r\n        owner: true,\r\n        irtCode: true,\r\n        emailState: ''\r\n    };\r\n    const errors = this.validate(item.name, item.mailList, item.owner, item.irtCode);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    await fetch((item.id) ? API_BASE_URL + '/trigrammes/'+(item.id) : API_BASE_URL + '/trigrammes', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n\r\n    \r\n    this.props.history.push(API_BASE_URL + '/trigrammes');\r\n  }\r\n\r\n  validateEmail(e) {\r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const { item } = this.state\r\n      if (emailRex.test(e.target.value)) {\r\n        item.touched.emailState = 'has-success'\r\n      } else {\r\n        item.touched.emailState = 'has-danger'\r\n      }\r\n      this.setState({ item })\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n  \r\n  validate(name, mailList, owner, irtCode) {\r\n\r\n    const errors = {\r\n      name: '',\r\n      mailList: '',\r\n      owner: '',\r\n      irtCode: ''\r\n    };\r\n // true means invalid, so our conditions got reversed  email.split('').filter(x ==> x === '@').length !== 1)\r\n    /*return {\r\n      name: name.length === 0,\r\n      irCode: irtCode.length === 0,\r\n    };*/\r\n    \r\n    if(this.state.item.touched.name && name.length !== 3){\r\n      errors.name = 'Name should be = 3 characters';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.irtCode && irtCode.length !== 5){\r\n      errors.irtCode = 'Irt Code should be = 5 characters!';\r\n      return errors;\r\n    }\r\n    \r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    \r\n    if(this.state.item.touched.owner && !emailRex.test(owner)){\r\n      errors.owner = 'Owner mail should have correct format ';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.mailList && !emailRex.test(mailList)){\r\n      errors.mailList = 'Mailling List should have correct format ';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit TRI' : 'Add TRI'}</h2>;\r\n    \r\n    const errors = this.validate(item.name, item.mailList, item.owner, item.irtCode);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n    /*let accs = null;\r\n    if(item.id) accs = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/trigramme/\" + item.id + \"/products\"}>Products</Button>;*/\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter text\" maxLength=\"3\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\" \r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n                   />\r\n            <FormFeedback>{errors.name}</FormFeedback>\r\n         </FormGroup>\r\n         \r\n          <FormGroup>\r\n            <Label for=\"owner\">Owner (*)</Label>\r\n            <Input type=\"email\" name=\"owner\" id=\"owner\" value={item.owner || ''} placeholder=\"Enter Name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('owner')} autoComplete=\"owner\"\r\n                   valid={errors.owner === ''}\r\n                   invalid={errors.owner !== ''}\r\n            />\r\n            <FormFeedback>{errors.owner}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"irtCode\">IRT Code (*)</Label>\r\n            <Input type=\"text\" name=\"irtCode\" id=\"irtCode\" value={item.irtCode || ''} placeholder=\"Enter IRT Code\" maxLength=\"5\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('irtCode')} autoComplete=\"irtCode\"\r\n                   valid={errors.irtCode === ''}\r\n                   invalid={errors.irtCode !== ''}\r\n            />\r\n            <FormFeedback>{errors.irtCode}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n       \r\n          \r\n          <FormGroup>\r\n            <Label for=\"mailList\">Email address (*)</Label>\r\n            <Input type=\"email\" name=\"mailList\" id=\"mailList\" value={item.mailList || ''} \r\n                   placeholder=\"Enter email\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('mailList')} autoComplete=\"mailList\"\r\n                   valid={errors.mailList === ''}\r\n                   invalid={errors.mailList !== ''}\r\n                   onChange={ (e) => {\r\n                            this.handleChange(e)\r\n                           }}\r\n            />\r\n            <FormFeedback>{errors.mailList}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n         <FormGroup>\r\n            <Label for=\"description\">Description</Label>\r\n            <Input type=\"text\" name=\"description\" id=\"description\" value={item.description || ''}\r\n                   onChange={this.handleChange} autoComplete=\"description\"/>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            \r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={API_BASE_URL + \"/trigrammes\"}>Cancel</Button>\r\n\r\n            \r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TrigrammeEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass AccountList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {accounts: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/accounts`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({accounts: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(triId, id) {\r\n    await fetch(`${API_BASE_URL}/products/${triId}/accounts/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateAccount = [...this.state.accounts].filter(i => i.id !== id);\r\n      this.setState({accounts: updateAccount});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {accounts, isLoading} = this.state;\r\n\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const accountList = accounts.map(account => {\r\n\r\n      const link = API_BASE_URL + \"/products/\" + account.product.id + \"#\";  \r\n      \r\n          \r\n      return <tr key={account.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{account.id}</td>\r\n\r\n        <td>{account.numAccount}</td>\r\n\t\t    <td>{account.env}</td>\r\n\r\n        \r\n\r\n        <td>{account.mailList}</td>\r\n        <td>{account.alias}</td>\r\n\r\n\t\t    <td><a href={link}>{account.product.name}</a></td>\r\n\t\t    <td>{account.text}</td>\r\n\r\n        \r\n\t\t\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/accounts/\" + account.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(account.product.id, account.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/accounts/new`;\r\n    //const prd = `/products/`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            \r\n            <Button color=\"success\" tag={Link} to={add}>Add Account</Button>\r\n          </div>\r\n          <h3>Account</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">NumAccount</th>\r\n              <th width=\"5%\">Env</th> \r\n\r\n              \r\n              <th width=\"5%\">Mail</th> \r\n              <th width=\"5%\">Alias</th>\r\n              <th width=\"5%\">Product</th>\r\n\t\t\t        <th width=\"5%\">Description</th>\r\n              \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {accountList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label,FormFeedback  } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass AccountEdit extends Component {\r\n\r\n  emptyItem = {\r\n    numAccount: '',\r\n    text: '',\r\n\t  env: '',\r\n    mailList: '',\r\n    alias: '',\r\n    products: {},\r\n\t  product: {},\r\n\t  productId : '',\r\n    touched: {\r\n      vpc:false,\r\n      numAccount: false,\r\n      env: false,\r\n      mailList: false,\r\n      alias: false,\r\n      productId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const account = await (await fetch(`${API_BASE_URL}/accounts/${this.props.match.params.id}`)).json();\r\n      account.touched = {\r\n        vpc: false,\r\n        numAccount: false,\r\n        env: false,\r\n        mailList: false,\r\n        alias: false,\r\n        productId: false\r\n      };\r\n      this.setState({item: account});\r\n\r\n      let item = {...this.state.item};\r\n      item.productId = account.product.id;\r\n      this.setState({item: item});\r\n\r\n      let vpcs;                              \r\n      await fetch(`${API_BASE_URL}/accounts/${this.props.match.params.id}/vpcs`)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        vpcs = jsonResult.length;\r\n        console.log(jsonResult.length);\r\n      })\r\n      if(vpcs !== 0) {\r\n        let item = {...this.state.item};\r\n        item.touched.vpc = true;\r\n      }\r\n\r\n    }\r\n    else {\r\n      const account = {\r\n        numAccount: '',\r\n        text: '',\r\n        env: '',\r\n        mailList: '',\r\n        alias: '',\r\n        products: {},\r\n        product: {},\r\n        productId : '',\r\n        touched: {\r\n          vpc: false,\r\n          numAccount: false,\r\n          env: false,\r\n          mailList: false,\r\n          alias: false,\r\n          productId: false\r\n        }\r\n      };\r\n      account.touched = {\r\n        vpc: false,\r\n        numAccount: false,\r\n        env: false,\r\n        mailList: false,\r\n        alias: false,\r\n        productId: false\r\n      };\r\n      this.setState({item: account});\r\n    }\r\n\r\n    //const {item} = this.state;\r\n    await fetch(API_BASE_URL + '/products',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.products = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n    \r\n    item.touched = {\r\n        numAccount: true,\r\n        env: true,\r\n        mailList: true,\r\n        alias: true,\r\n        productId: true\r\n    };\r\n    const errors = this.validate(item.numAccount, item.env, item.mailList, item.productId, item.alias);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/accounts'; \r\n\r\n    item.product={id: item.productId};\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/products/' + (item.product.id) + '/accounts/'+(item.id) : API_BASE_URL + '/products/' + item.product.id + '/accounts', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n  \r\n\r\n  validate(numAccount, env, mailList, productId, alias) {\r\n\r\n    const errors = {\r\n      numAccount: '',\r\n      env: '',\r\n      mailList: '',\r\n      alias: '',\r\n      productId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.numAccount && numAccount.length !== 12){\r\n      errors.numAccount = 'Account should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.productId && productId.length <= 0){\r\n      errors.productId = 'Product should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.env && env.length !== 3){\r\n      errors.env = 'Env should be = 3 characters!';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.alias && alias.length <= 0){\r\n      errors.alias = 'alias should not be null';\r\n      return errors;\r\n    }\r\n\r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    \r\n    if(this.state.item.touched.mailList && !emailRex.test(mailList)){\r\n      errors.mailList = 'Mailling List should have correct format ';\r\n      return errors;\r\n    }\r\n   \r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Account' : 'Add Account'}</h2>;\r\n    \r\n    const errors = this.validate(item.numAccount, item.env, item.mailList, item.productId, item.alias);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/accounts\";\r\n\r\n    /*let trig = null;\r\n    trig = <FormGroup>\r\n            <Label for=\"tri\">Product: {item.product.name}</Label>\r\n            <Input type=\"text\" name=\"productId\" id=\"productId\" value={item.product.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;*/\r\n    \r\n\r\n    /*let vpcs = null;\r\n    if(item.id) vpcs = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/account/\" + item.id + \"/vpcs\"}>Vpcs</Button>;*/\r\n\r\n    const isDisabledd = item.touched.vpc;\r\n\r\n    \r\n    let opts = [];\r\n    if(item.products && item.products.length){\r\n          item.products.map(s => {  \r\n          opts.push(<option key={s.id}  value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    if(item.id) {\r\n          //opts.push(<option value={item.product.id} >{item.product.id} {item.product.name} </option>);\r\n    }\r\n\r\n    let prd = item.productId || '';\r\n    item.productId = prd;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"numAccount\">Account (*)</Label>\r\n            <Input type=\"text\" name=\"numAccount\" id=\"numAccount\" value={item.numAccount || ''} placeholder=\"Enter account\"  maxLength=\"12\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('numAccount')} autoComplete=\"numAccount\"\r\n                   valid={errors.numAccount === ''}\r\n                   invalid={errors.numAccount !== ''}\r\n            />\r\n            <FormFeedback>{errors.numAccount}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"productId\">Product (*)</Label>\r\n            <Input type=\"select\" name=\"productId\" id=\"productId\"  value={prd} onChange={this.handleChange} onBlur={this.handleBlur('productId')}\r\n                 valid={errors.productId === ''}\r\n                 invalid={errors.productId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.productId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"env\">Env (*)</Label>\r\n            <Input type=\"select\" name=\"env\" id=\"env\" value={item.env || ''} onChange={this.handleChange} onBlur={this.handleBlur('env')} \r\n                 valid={errors.env === ''}\r\n                 invalid={errors.env !== ''}\r\n                 disabled={isDisabledd}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"DEV\">DEV</option>\r\n              <option value=\"HML\">HML</option>\r\n              <option value=\"PRD\">PRD</option>\r\n              <option value=\"SDB\">SDB</option>\r\n            </Input>\r\n            <FormFeedback>{errors.env}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"mailList\">Mail (*)</Label>\r\n            <Input  type=\"text\" name=\"mailList\" id=\"mailList\" value={item.mailList || ''} placeholder=\"Enter email\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('mailList')} autoComplete=\"mailList\"\r\n                   valid={errors.mailList === ''}\r\n                   invalid={errors.mailList !== ''}\r\n                   />\r\n            <FormFeedback>{errors.mailList}</FormFeedback>\r\n          </FormGroup>\r\n\t\t  \r\n          <FormGroup>\r\n            <Label for=\"alias\">Alias (*)</Label>\r\n            <Input  type=\"text\" name=\"alias\" id=\"alias\" value={item.alias || ''} placeholder=\"Enter alias\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('alias')} autoComplete=\"alias\"\r\n                   valid={errors.alias === ''}\r\n                   invalid={errors.alias !== ''}\r\n                   />\r\n            <FormFeedback>{errors.alias}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n\t\t     \r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\t\t  \r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(AccountEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass ProductList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {products: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/products`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({products: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/trigrammes/${accId}/products/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateProduct = [...this.state.products].filter(i => i.id !== id);\r\n      this.setState({products: updateProduct});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {products, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const productList = products.map(product => {\r\n      \r\n      const link = API_BASE_URL + \"/trigrammes/\" + product.trigramme.id; \r\n\r\n      return <tr key={product.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{product.id}</td>\r\n\r\n\r\n        <td>{product.name}</td>\r\n        <td>{product.mailList}</td>\r\n        <td>{product.type}</td>\r\n        <td>{product.bastion}</td>\r\n        <td>{product.mailListAlert}</td>\r\n\t\t    <td>{product.appContext}</td>\r\n        <td>{product.text}</td>\r\n\r\n        <td><a href={link}>{product.trigramme.name}</a></td>\r\n\t\t    \r\n\t\t\r\n\r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/products/\" + product.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(product.trigramme.id, product.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/products/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Product</Button>\r\n          </div>\r\n          \r\n          <h3>Product</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">mailList</th>\r\n              <th width=\"5%\">type</th>\r\n              <th width=\"5%\">bastion</th>\r\n              <th width=\"5%\">mailListAlert</th>\r\n              <th width=\"5%\">Context</th> \r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Trigramme</th> \r\n              \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {productList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass ProductEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    mailList: '',\r\n    type: '',\r\n    bastion: '',\r\n    mailListAlert: '',\r\n    text: '',\r\n    appContext: '',\r\n\t  trigramme: {},\r\n  \ttrigrammeId : '',\r\n    touched: {\r\n      name: false,\r\n      mailList: false,\r\n      type: false,\r\n      bastion: false,\r\n      trigrammeId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const product = await (await fetch(`${API_BASE_URL}/products/${this.props.match.params.id}`)).json();\r\n      product.touched = {\r\n        name: false,\r\n        trigrammeId: false\r\n      };\r\n      this.setState({item: product});\r\n\r\n      let item = {...this.state.item};\r\n      item.trigrammeId = product.trigramme.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      //alert(`/trigrammes/${this.props.match.params.idt}`);      \r\n      //const trigramme = await (await fetch(`/trigrammes/${this.props.match.params.idt}`)).json();\r\n      const product = {\r\n        name: '',\r\n        mailList: '',\r\n        type: '',\r\n        bastion: '',\r\n        mailListAlert: '',\r\n        text: '',\r\n        appContext: '',\r\n        trigramme: {},\r\n        trigrammeId : '',\r\n        touched: {\r\n          name: false,\r\n          mailList: false,\r\n          type: false,\r\n          bastion: false,\r\n          trigrammeId: false\r\n        }\r\n      };\r\n      product.touched = {\r\n          name: false,\r\n          mailList: false,\r\n          type: false,\r\n          bastion: false,\r\n          trigrammeId: false\r\n      };\r\n      this.setState({item: product});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/trigrammes2',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.trigramme = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          mailList: true,\r\n          type: true,\r\n          bastion: true,\r\n          trigrammeId: true\r\n    };\r\n    const errors = this.validate(item.name, item.mailList, item.type, item.bastion, item.trigrammeId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    const hist= API_BASE_URL + '/products'; \r\n\r\n    item.trigramme={id: item.trigrammeId};\r\n    //console.log(item.trigrammeId + '   ' + item.trigramme.id);\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/trigrammes/' + (item.trigramme.id) + '/products/'+(item.id) : API_BASE_URL + '/trigrammes/' + item.trigramme.id + '/products', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, mailList, type, bastion, trigrammeId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      mailList: '',\r\n      type: '',\r\n      bastion: '',\r\n      trigrammeId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'Type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.bastion && bastion.length === 0){\r\n      errors.bastion = 'Bastion should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    \r\n    if(this.state.item.touched.mailList && !emailRex.test(mailList)){\r\n      errors.mailList = 'mailList should have correct format ';\r\n      return errors;\r\n    }\r\n\r\n    /*if(!this.state.item.id && this.state.item.touched.trigrammeId && trigrammeId.length === 0){\r\n      errors.trigrammeId = 'trigramme should not be null';\r\n      return errors;\r\n    }*/\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Product' : 'Add Product'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.mailList, item.type, item.bastion, item.trigrammeId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/products\";\r\n\r\n    /*let accs = null;\r\n    accs = <FormGroup>\r\n            <Label for=\"trigrammeId\">Trigramme: {item.trigramme.name}</Label>\r\n            <Input type=\"text\" name=\"trigrammeId\" id=\"trigrammeId\" value={item.trigramme.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n    */\r\n    /*let acc = null;\r\n    if(item.id) acc = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/product/\" + item.id + \"/accounts\"}>Accounts</Button>;*/\r\n\r\n    let opts = [];\r\n    if(item.trigramme && item.trigramme.length){\r\n      item.trigramme.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    if(item.id) {\r\n          opts.push(<option key={item.trigramme.id} value={item.trigramme.id} >{item.trigramme.id} {item.trigramme.name} </option>);\r\n    }\r\n\r\n    let tri = item.trigrammeId || '';\r\n    item.trigrammeId = tri;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"trigrammeId\">Trigrammes (*)</Label>\r\n            <Input type=\"select\" name=\"trigrammeId\" id=\"trigrammeId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('trigrammeId')}\r\n                 valid={errors.trigrammeId === ''}\r\n                 invalid={errors.trigrammeId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.trigrammeId}</FormFeedback>\r\n          </FormGroup>\r\n                    \r\n          <FormGroup>\r\n            <Label for=\"type\">Type (*)</Label>\r\n            <Input type=\"text\" name=\"type\" id=\"type\" value={item.type || ''} placeholder=\"Enter type\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                   valid={errors.type === ''}\r\n                   invalid={errors.type !== ''}\r\n            />\r\n           <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n\r\n  \r\n\t\t      <FormGroup>\r\n            <Label for=\"bastion\">Bastion (*)</Label>\r\n            <Input type=\"text\" name=\"bastion\" id=\"bastion\" value={item.bastion || ''} placeholder=\"Enter bastion\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('bastion')} autoComplete=\"bastion\"\r\n                   valid={errors.bastion === ''}\r\n                   invalid={errors.bastion !== ''}\r\n            />\r\n           <FormFeedback>{errors.bastion}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"mailList\">mailList (*)</Label>\r\n            <Input type=\"email\" name=\"mailList\" id=\"mailList\" value={item.mailList || ''} placeholder=\"Enter mailList\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('mailList')} autoComplete=\"mailList\"\r\n                   valid={errors.mailList === ''}\r\n                   invalid={errors.mailList !== ''}\r\n            />\r\n           <FormFeedback>{errors.mailList}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"mailListAlert\">mailListAlert</Label>\r\n            <Input type=\"email\" name=\"mailListAlert\" id=\"mailListAlert\" value={item.mailListAlert || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"appContext\">APP Context</Label>\r\n            <Input type=\"text\" name=\"appContext\" id=\"appContext\" value={item.appContext || ''} placeholder=\"Enter app context\"\r\n                   onChange={this.handleChange} autoComplete=\"appContext\"\r\n                   \r\n                   />\r\n          </FormGroup>\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(ProductEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\n\r\nclass VpcList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {vpcs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/vpcs`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({vpcs: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/vpcs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateVpc = [...this.state.vpcs].filter(i => i.id !== id);\r\n      this.setState({vpcs: updateVpc});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {vpcs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const vpcList = vpcs.map(vpc => {\r\n      \r\n      const link = API_BASE_URL + \"/accounts/\" + vpc.account.id; \r\n      \r\n      let cidr = '';\r\n      cidr = \"[Id:\" + vpc.cidr.id + \" Cidr:\" + vpc.cidr.cidr + \" Env:\" + vpc.cidr.env + \"]\";\r\n      let cid ='';\r\n      cid = API_BASE_URL + '/vpcmanage/' + vpc.cidr.id;\r\n\r\n      let nacls = '';\r\n      if(vpc.nacls)vpc.nacls.map(s => {  \r\n        nacls = nacls + s + \"| \"; \r\n      });\r\n\r\n      let routeTables = '';\r\n      if(vpc.routeTables)vpc.routeTables.map(s => {  \r\n        routeTables = routeTables + s + \"| \"; \r\n      });\r\n\r\n      let dhcps = '';\r\n      if(vpc.dhcps)vpc.dhcps.map(s => {  \r\n        dhcps = dhcps + s + \"| \"; \r\n      });\r\n\r\n      return <tr key={vpc.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{vpc.id}</td>\r\n\r\n\t\t    <td>{vpc.name}</td>\r\n        <td><a href={cid}>{cidr}</a></td>\r\n        <td><a href={link}>{vpc.account.numAccount}: {vpc.account.env}</a></td>\r\n\t\t    <td>{vpc.text}</td>\r\n        <td>{nacls}</td>\r\n        <td>{routeTables}</td>\r\n\t\t    <td>{dhcps}</td>\r\n       \r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/vpc/\" + vpc.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/vpcs/\" + vpc.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(vpc.account.id, vpc.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n   const add = `${API_BASE_URL}/vpcs/new`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Vpc</Button>\r\n          </div>\r\n          <h3>Vpc</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"20%\">Id</th> \r\n              <th width=\"20%\">Name</th>\r\n              <th width=\"20%\">Cidr</th>\r\n              <th width=\"20%\">Account</th>\r\n\r\n\t\t\t        <th width=\"20%\">Description</th>\r\n              <th width=\"20%\">Nacl</th>\r\n              <th width=\"20%\">Route</th>\r\n              <th width=\"20%\">Dhcp</th>\r\n\t\t\t        <th width=\"10%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {vpcList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VpcList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\n\r\nclass VpcEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name:'',\r\n    text: '',\r\n\t  account: {},\r\n    accounts: {},\r\n  \taccountId : '',\r\n    cidrs: {},\r\n    cidrId: '',\r\n    isSameEnv: true,\r\n    touched: {\r\n      accountId: false,\r\n      cidrId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const vpc = await (await fetch(`${API_BASE_URL}/vpcs/${this.props.match.params.id}`)).json();\r\n\r\n      vpc.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        cidrId: false\r\n      };\r\n      \r\n      this.setState({item: vpc});\r\n      \r\n      let item = {...this.state.item};\r\n\r\n\r\n      await await(fetch(API_BASE_URL + '/cidr/env/' + (vpc.account.env),)\r\n        .then((result) => {\r\n          //console.log('change2');\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.cidrs = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n\r\n\r\n      item.isSameEnv = true;\r\n      item.accountId = vpc.account.id;\r\n      item.cidrId = vpc.cidr.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      //const account = await (await fetch(`/accounts/${this.props.match.params.ida}`)).json();\r\n      const vpc = {\r\n        name:'',\r\n        text: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        cidrs: {},\r\n        cidrId: '',\r\n        isSameEnv: true,\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          cidrId: false\r\n        }\r\n      };\r\n      //console.log(account.id);\r\n      //vpc.account = account;\r\n      vpc.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        cidrId: false,\r\n      };\r\n      this.setState({item: vpc});\r\n    }\r\n\r\n        \r\n    //const {item} = this.state;\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      \r\n      let item = {...this.state.item};\r\n      //item.isSameEnv = true;\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n    \r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n\r\n    //console.log('change=' + name);\r\n    item.isSameEnv = true;\r\n    if(name === 'accountId')\r\n    {\r\n      //console.log('change' + item.accountId);\r\n      \r\n      let acc={};\r\n      fetch(API_BASE_URL + \"/accounts/\" + item.accountId,)\r\n      .then((result) => {\r\n        //console.log('change1');\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        acc = jsonResult;\r\n        \r\n        if(acc.env !== item.account.env) item.isSameEnv = false;//console.log(\"attention=\"  + acc.env + \" \" + item.account.env);\r\n\r\n        fetch(API_BASE_URL + '/cidr/env/' + (acc.env),)\r\n        .then((result) => {\r\n          //console.log('change2');\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.cidrs = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n      });\r\n\r\n    }\r\n\r\n\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n        name: true,\r\n        accountId: true,\r\n        cidrId: true,\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.cidrId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) return;\r\n    \r\n    const hist= API_BASE_URL + '/vpcs';\r\n    \r\n    item.cidr={id: item.cidrId};\r\n    item.account={id: item.accountId};\r\n\r\n    var values = [];\r\n      item.nacls.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.nacls = values;\r\n    var values = [];\r\n      item.routeTables.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.routeTables = values;\r\n    var values = [];\r\n      item.dhcps.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.dhcps = values;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/vpcs/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/vpcs', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId, cidrId) {\r\n\r\n    const errors = {\r\n      name: '',\r\n      accountId: '',\r\n      cidrId: ''\r\n    };\r\n    //console.log(\"cidr=\" + cidrId + \"=!\");\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.cidrId && cidrId === ''){\r\n      errors.cidrId = 'CidrId should not be null';\r\n      //alert('CidrId should not be null');\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Account should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    \r\n    const title = <h2>{item.id ? 'Edit Vpc' : 'Add Vpc'}</h2>;\r\n\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.cidrId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/vpcs\";\r\n\r\n    /*let accs = null;\r\n    accs = <FormGroup>\r\n            <Label for=\"accountId\">Account: {item.account.numAccount}</Label>\r\n            <Input type=\"text\" name=\"accountId\" id=\"accountId\" value={item.account.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;*/\r\n\r\n    /*let subs = null;\r\n    if(item.id) subs = <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/vpc/\" + item.id + \"/subnets\"}>Subnets</Button>;*/\r\n\r\n    let opts = [];\r\n    if(item.cidrs && item.cidrs.length){\r\n          item.cidrs.map(cidr => {  \r\n          opts.push(<option key={cidr.id} value={cidr.id}>{cidr.id} {cidr.cidr} {cidr.env}</option>);\r\n      });\r\n    }\r\n\r\n    if(item.id && item.isSameEnv) {\r\n          opts.push(<option key={item.cidr.id} value={item.cidr.id} >{item.cidr.id} {item.cidr.cidr} {item.cidr.env}</option>);\r\n    }\r\n    \r\n    let cid = item.cidrId || '';\r\n    item.cidrId = cid;\r\n\r\n    \r\n    let optsa = [];\r\n    if(item.accounts && item.accounts.length){\r\n          item.accounts.map(s => {  \r\n          optsa.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}  {s.env}</option>);\r\n      });\r\n    }\r\n    if(item.id) {\r\n          //optsa.push(<option value={item.account.id} >{item.account.id} {item.account.numAccount} </option>);\r\n    }\r\n\r\n    let acc = item.accountId || '';\r\n    item.accounttId = acc;\r\n\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Accounts (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={acc} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsa}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"cidrId\">CIDR (*)</Label>\r\n            <Input type=\"select\" name=\"cidrId\" id=\"cidrId\"  value={cid} onChange={this.handleChange} onBlur={this.handleBlur('cidrId')}\r\n                 valid={errors.cidrId === ''}\r\n                 invalid={errors.cidrId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.cidrId}</FormFeedback>\r\n          </FormGroup>\r\n\t\t  \r\n\t\t  \r\n\t\t  <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\t\t  \r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n            \r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(VpcEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\nclass TagVpcList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/vpcs/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data =>   this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTagVpc = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTagVpc});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/vpcs/\" + tag.vpc.id; \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.vpc.id}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/vpc/\" + tag.vpc.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.vpc.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/vpc/${this.props.match.params.id}/tags/new`;\r\n    const vpc = `${API_BASE_URL}/vpcs`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={vpc}>Vpc</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Tag</Button>\r\n          </div>\r\n          \r\n          <h3>TagVpc</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagVpcList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\n\r\nimport { API_BASE_URL } from './constants';\r\nclass TagVpcEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    vpc: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const vpc = await (await fetch(`${API_BASE_URL}/vpcs/${this.props.match.params.idv}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        vpc: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.vpc = vpc;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/vpc/' + item.vpc.id +'/tags'; \r\n\r\n    item.vpc={id: item.vpc.id};\r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/tags/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/vpc/\" + item.vpc.id + \"/tags\";\r\n\r\n    let vpc = null;\r\n    vpc = <FormGroup>\r\n            <Label for=\"vpcId\">Vpc: {item.vpc.name}</Label>\r\n            <Input type=\"text\" name=\"vpcId\" id=\"vpcId\" value={item.vpc.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {vpc}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagVpcEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SubnetList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {subnets: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/subnets`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({subnets: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/subnets/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateSubnet = [...this.state.subnets].filter(i => i.id !== id);\r\n      this.setState({subnets: updateSubnet});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {subnets, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const subnetList = subnets.map(subnet => {\r\n      \r\n      //const link = \"/vpcs/\" + subnet.vpc.id; // account/1000/vpcs/1000\r\n      const link = API_BASE_URL + \"/vpcs/\" +subnet.vpc.id; // account/1000/vpcs/1000\r\n      const linkAccount = API_BASE_URL + \"/accounts/\" + subnet.account.id; \r\n      const sub  = API_BASE_URL + \"/vpcmanages/\" + subnet.sCidr.cidr.id +\"/subnetmanage/\" + subnet.sCidr.id;\r\n      \r\n      let subs = '';\r\n      if(subnet.subnetgroup)subnet.subnetgroup.map(s => {  \r\n        subs = subs + s + \"| \"; \r\n      });\r\n\r\n      let nacls = '';\r\n      if(subnet.nacls)subnet.nacls.map(s => {  \r\n        nacls = nacls + s + \"| \"; \r\n      });\r\n\r\n      let routeTables = '';\r\n      if(subnet.routetables)subnet.routetables.map(s => {  \r\n        routeTables = routeTables + s + \"| \"; \r\n      });\r\n\r\n      let lbs = '';\r\n      if(subnet.lbs)subnet.lbs.map(s => {  \r\n        lbs = lbs + s + \"| \"; \r\n      });\r\n\r\n      let autoScalingGroups = '';\r\n      if(subnet.autoScalingGroups)subnet.autoScalingGroups.map(s => {  \r\n        autoScalingGroups = autoScalingGroups + s + \"| \"; \r\n      });\r\n\r\n      return <tr key={subnet.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{subnet.id}</td>\r\n        \r\n\r\n        <td>{subnet.name}</td>\r\n        <td><a href={linkAccount}>{subnet.account.numAccount}</a></td>\r\n\t\t    <td><a href={sub}>{subnet.sCidr.id}:{subnet.sCidr.subnetCidr}</a></td>\r\n         <td>{subnet.type}</td>\r\n        <td><a href={link}>{subnet.vpc.id}:{subnet.vpc.name}</a></td>\r\n        <td>{subnet.text}</td>\r\n        <td>{subnet.az.id}:{subnet.az.name}</td>\r\n\t\t    <td>{subs}</td>\r\n        <td>{nacls}</td>\r\n\t\t    <td>{routeTables}</td>\r\n\r\n        <td>{lbs}</td>\r\n        <td>{autoScalingGroups}</td>\r\n\t\t\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/subnet/\" + subnet.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/subnets/\" + subnet.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(subnet.vpc.id, subnet.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n   const add = `${API_BASE_URL}/subnets/new`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Subnet</Button>\r\n          </div>\r\n          <h3>Subnet</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th> \r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">subnetCidr</th> \r\n              <th width=\"5%\">Type</th>\r\n              <th width=\"5%\">Vpc</th>\r\n\t\t\t        <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Az</th>\r\n              <th width=\"5%\">Subnet group</th>\r\n              <th width=\"5%\">Nacl</th>\r\n              <th width=\"5%\">Route</th>\r\n              <th width=\"5%\">Lb</th>\r\n              <th width=\"5%\">Asg</th>\r\n              \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {subnetList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubnetList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SubnetEdit extends Component {\r\n\r\n  emptyItem = {\r\n    text: '',\r\n\t  vpc: {},\r\n    vpcs:{},\r\n    type:'',\r\n    sCidr: {},\r\n    sCidrs: {},\r\n  \tvpcId : '',\r\n    subnetCidrId: '',\r\n    isSameVpc: true,\r\n    az:{},\r\n    azs:{},\r\n    azId: '',\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    subnetgroup: [],\r\n    touched: {\r\n      type: false,\r\n      vpcId: false,\r\n      subnetCidrId: false,\r\n      name: false,\r\n      accountId: false,\r\n      azId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const subnet = await (await fetch(`${API_BASE_URL}/subnets/${this.props.match.params.id}`)).json();\r\n      subnet.touched = {\r\n        type: false,\r\n        vpcId: false,\r\n        subnetCidrId: false,\r\n        name: false,\r\n        accountId: false,\r\n        azId: false\r\n      };\r\n      this.setState({item: subnet});\r\n      let item = {...this.state.item};\r\n\r\n      await fetch(API_BASE_URL + '/accounts/' + (subnet.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        //let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      //attention\r\n      await (await fetch(API_BASE_URL + '/cidrs/' + (subnet.vpc.cidr.id) + '/subnetcidrs/0',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.sCidrs = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      \r\n      await (await fetch(API_BASE_URL + '/regions/' + (subnet.vpc.cidr.region.id) + '/azs',)\r\n        //fetch('/regions/1001/azs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          \r\n          item.azs = jsonResult;\r\n          this.setState({item: item});\r\n      }));\r\n\r\n      item.isSameVpc = true;\r\n      item.subnetCidrId = subnet.sCidr.id;\r\n      item.vpcId = subnet.vpc.id;\r\n      item.accountId = subnet.account.id;\r\n      item.azId = subnet.az.id;\r\n      this.setState({item: item});\r\n    }\r\n    else {\r\n      //const vpc = await (await fetch(`/vpcs/${this.props.match.params.idv}`)).json();\r\n      const subnet = {\r\n        text: '',\r\n        type: '',\r\n        vpc: {},\r\n        vpcs:{},\r\n        sCidr: {},\r\n        sCidrs: {},\r\n        vpcId : '',\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        subnetCidrId: '',\r\n        isSameVpc: true,\r\n        az:{},\r\n        azs:{},\r\n        azId: '',\r\n        subnetgroup: [],\r\n        touched: {\r\n          type: false,\r\n          vpcId: false,\r\n          subnetCidrId: false,\r\n          name: false,\r\n          accountId: false,\r\n          azId: false\r\n        }\r\n      };\r\n      //subnet.vpc = vpc;\r\n      subnet.touched = {\r\n        type: false,\r\n        vpcId: false,\r\n        subnetCidrId: false,\r\n        name: false,\r\n        accountId: false,\r\n        azId: false\r\n      };\r\n      this.setState({item: subnet});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    //const {item} = this.state;\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => { \r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    }); */ \r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      \r\n      item.subnetCidrId = '';\r\n      //item.sCidr = {};\r\n      item.sCidrs = [];\r\n\r\n      item.azId = '';\r\n      item.az = {};\r\n      item.azs = [];\r\n    }\r\n\r\n    item.isSameVpc = true;\r\n    if(name === 'vpcId')\r\n    {\r\n      //console.log('change' + item.vpcId);\r\n      let vp={};\r\n      fetch(API_BASE_URL + \"/vpcs/\" + item.vpcId,)\r\n      .then((result) => {\r\n        //console.log('change1');\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        vp = jsonResult;\r\n\r\n        //memevpc\r\n        if(item.id && item.sCidr.subnet && item.sCidr.subnet.vpc.id !== vp.id) item.isSameVpc = false;\r\n\r\n        fetch(API_BASE_URL + '/cidrs/' + (vp.cidr.id) + '/subnetcidrs/0',)\r\n        .then((result) => {\r\n          //console.log('change2=' + item.sCidr.id);\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.sCidrs = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/regions/' + (vp.cidr.region.id) + '/azs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.azs = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n        type: true,\r\n        vpcId: true,\r\n        subnetCidrId: true,\r\n        name: true,\r\n        accountId: true,\r\n        azId: true\r\n    };\r\n    const errors = this.validate(item.subnetCidrId, item.vpcId, item.type, item.name, item.azId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/vpc/' + item.vpc.id + '/subnets';\r\n\r\n    item.sCidr={id: item.subnetCidrId};//modif subnetCidr\r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n\r\n    item.az={id: item.azId};\r\n    \r\n    var values = [];\r\n    //item.subnetgroup=[];\r\n    if(item.subnetgroup && item.subnetgroup.length){\r\n      //console.log('item.subnetgroup.length=' + item.subnetgroup.length);\r\n      item.subnetgroup.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.subnetgroup= values;\r\n    }\r\n    \r\n    values=[];\r\n    if(item.nacls && item.nacls.length){\r\n      item.nacls.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.nacls= values;\r\n    }\r\n\r\n    values=[];\r\n    if(item.routetables && item.routetables.length){\r\n      item.routetables.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.routetables= values;\r\n    }\r\n    \r\n    values=[];\r\n    if(item.lbs && item.lbs.length){\r\n      item.lbs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.lbs = values;\r\n    }\r\n\r\n    values=[];\r\n    if(item.autoScalingGroups && item.autoScalingGroups.length){\r\n      item.autoScalingGroups.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.autoScalingGroups = values;\r\n    }\r\n    \r\n    //alert(item.sCidr.id + \"  \" + item.vpc.id + \"  \" + item.az.id);\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/subnets/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/subnets', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(subnetCidrId, vpcId, type, name, azId, accountId) {\r\n\r\n    const errors = {\r\n      type: '',\r\n      vpcId: '',\r\n      subnetCidrId: '',\r\n      name: '',\r\n      accountId: '',\r\n      azId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.subnetCidrId && subnetCidrId.length === 0){\r\n      errors.subnetCidrId = 'subnetCidr should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'type should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.azId && azId.length === 0){\r\n      errors.azId = 'Az should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Subnet' : 'Add Subnet'}</h2>;\r\n    \r\n    const errors = this.validate(item.subnetCidrId, item.vpcId, item.type, item.name, item.azId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/vpc/\" + item.vpc.id + \"/subnets\";\r\n\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.sCidrs && item.sCidrs.length){\r\n          item.sCidrs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.subnetCidr}</option>);\r\n      });\r\n    }\r\n    if(item.id && item.isSameVpc) {\r\n          opts.push(<option key={item.sCidr.id} value={item.sCidr.id} >{item.sCidr.id} {item.sCidr.subnetCidr} </option>);\r\n    }\r\n\r\n    let cid = item.subnetCidrId || '';\r\n    item.subnetCidrId = cid;\r\n\r\n   let optsv = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n          item.vpcs.map(s => {  \r\n          optsv.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    if(item.id) {\r\n          //optsv.push(<option value={item.vpc.id} >{item.vpc.id} {item.vpc.name} </option>);\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n\r\n    let optsa = [];\r\n    if(item.azs && item.azs.length){\r\n          item.azs.map(s => {  \r\n          optsa.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let az = item.azId || '';\r\n    item.azId = az;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          \r\n         \r\n         <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                    valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n            <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpc (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsv}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n      \r\n          <FormGroup>\r\n            <Label for=\"subnetCidrId\">CIDR (*)</Label>\r\n            <Input type=\"select\" name=\"subnetCidrId\" id=\"subnetCidrId\"  value={cid} onChange={this.handleChange} onBlur={this.handleBlur('subnetCidrId')}\r\n                 valid={errors.subnetCidrId === ''}\r\n                 invalid={errors.subnetCidrId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.subnetCidrId}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          \r\n          <FormGroup>\r\n            <Label for=\"type\">Type(*)</Label>\r\n            <Input type=\"text\" name=\"type\" id=\"type\" value={item.type || ''}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                    valid={errors.type === ''}\r\n                   invalid={errors.type !== ''}\r\n            />\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n\t\t  \r\n\t\t     <FormGroup>\r\n            <Label for=\"azId\">Az (*)</Label>\r\n            <Input type=\"select\" name=\"azId\" id=\"azId\"  value={az} onChange={this.handleChange} onBlur={this.handleBlur('azId')}\r\n                 valid={errors.azId === ''}\r\n                 invalid={errors.azId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsa}\r\n            </Input>\r\n            <FormFeedback>{errors.azId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\t\t     <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\t\t  \r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(SubnetEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagSubnetList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/subnets/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data =>   this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/subnets/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTagSubnet = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTagSubnet});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/subnets/\" + tag.subnet.id; \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.subnet.id}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/subnet/\" + tag.subnet.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.subnet.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/subnet/${this.props.match.params.id}/tags/new`;\r\n    const subnet = `${API_BASE_URL}/subnets`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={subnet}>Subnet</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Tag</Button>\r\n          </div>\r\n          \r\n          <h3>TagSubnet</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Subnet</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagSubnetList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagSubnetEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    subnet: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const subnet = await (await fetch(`${API_BASE_URL}/subnets/${this.props.match.params.ids}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        subnet: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.subnet = subnet;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/subnet/' + item.subnet.id +'/tags'; \r\n\r\n    item.subnet={id: item.subnet.id};\r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/subnets/' + (item.subnet.id) + '/tags/'+(item.id) : API_BASE_URL + '/subnets/' + item.subnet.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/subnet/\" + item.subnet.id + \"/tags\";\r\n\r\n    let subnet = null;\r\n    subnet = <FormGroup>\r\n            <Label for=\"subnetId\">Subnet: {item.subnet.name}</Label>\r\n            <Input type=\"text\" name=\"subnetId\" id=\"subnetId\" value={item.subnet.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {subnet}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagSubnetEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SubnetGroupList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {subnetGroups: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/subnetGroups`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({subnetGroups: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/subnetGroups/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateSubnetGroup = [...this.state.subnetGroups].filter(i => i.id !== id);\r\n      this.setState({subnetGroups: updateSubnetGroup});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {subnetGroups, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const subnetGroupList = subnetGroups.map(subnetGroup => {\r\n      \r\n      const link = API_BASE_URL + \"/vpcs/\" + subnetGroup.vpc.id; \r\n      const linkAccount = API_BASE_URL + \"/accounts/\" + subnetGroup.account.id; \r\n      \r\n      let subs='';\r\n      if(subnetGroup.subnets && subnetGroup.subnets.length){\r\n                //console.log(\"subnet:\");\r\n                subnetGroup.subnets.map(s => {  \r\n                  //alert(\"subnet:\" + s.name);\r\n                  subs = subs + s.id + \":\" + s.name + \":\" + s.az.name + \"| \";\r\n                  //console.log(\"subs=\" + subs);\r\n              });\r\n      }\r\n\r\n      return <tr key={subnetGroup.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{subnetGroup.id}</td>\r\n\r\n\r\n        <td>{subnetGroup.name}</td>\r\n        <td><a href={linkAccount}>{subnetGroup.account.numAccount}</a></td>\r\n        <td>{subnetGroup.type}</td>\r\n        <td>{subnetGroup.text}</td>\r\n\r\n        <td><a href={link}>{subnetGroup.vpc.name}</a></td>\r\n\t\t    \r\n\t\t    <td>{subs}</td>\r\n\r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/subnetGroups/\" + subnetGroup.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(subnetGroup.vpc.id, subnetGroup.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/subnetGroups/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add SubnetGroup</Button>\r\n          </div>\r\n          \r\n          <h3>SubnetGroup</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Type</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Subnets</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {subnetGroupList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubnetGroupList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SubnetGroupEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    type: '',\r\n    typeId: '',\r\n    text: '',\r\n\t  vpc: {},\r\n    vpcs: {},\r\n  \tvpcId : '',\r\n    subnetss: {},\r\n    subnets: [],\r\n    subnetId: [],\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      subnetId: false,\r\n      typeId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const subnetGroup = await (await fetch(`${API_BASE_URL}/subnetGroups/${this.props.match.params.id}`)).json();\r\n      \r\n     \r\n     subnetGroup.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        subnetId: false,\r\n        typeId: false\r\n      };\r\n      this.setState({item: subnetGroup});\r\n      \r\n      await fetch(API_BASE_URL + '/accounts/' + (subnetGroup.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await (await fetch(API_BASE_URL + '/vpcs/' + (subnetGroup.vpc.id) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n      }));\r\n\r\n      let item = {...this.state.item};\r\n      item.vpcId = subnetGroup.vpc.id;\r\n      item.accountId = subnetGroup.account.id;\r\n      item.typeId = subnetGroup.type;\r\n      \r\n      var values = [];\r\n      item.subnets.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.subnets = values;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const subnetGroup = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        type: '',\r\n        typeId:'',\r\n        text: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        subnets: [],\r\n        subnetss: {},\r\n        subnetId: [],\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetId: false,\r\n          typeId: false\r\n        }\r\n      };\r\n      subnetGroup.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetId: false,\r\n          typeId: false\r\n      };\r\n      this.setState({item: subnetGroup});\r\n    }\r\n    \r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    //item.isSameVpc = true;\r\n    //console.log(\"-----------------------------\");\r\n    if(name === 'subnetId')\r\n    {\r\n      var options = event.target.options;\r\n      var values = [];\r\n      for (var i = 0, l = options.length; i < l; i++) {\r\n        if (options[i].selected) {\r\n          //values.push({\"id\": options[i].value});\r\n          //values.push(item.subnetss\r\n            if(item.subnetss && item.subnetss.length){\r\n                item.subnetss.map(s => { \r\n                  \r\n                  if(s.id == options[i].value) {\r\n                      //console.log( s.id + \"===\" + options[i].value);\r\n                      values.push({\"id\": s.id});\r\n                  }\r\n              });\r\n            }\r\n          //console.log(i + \" \" + options[i].value);\r\n        }\r\n      }\r\n      item.subnets = values;\r\n      this.setState({item});\r\n    }\r\n    \r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      \r\n      item.subnetId = '';\r\n      item.subnets = [];\r\n      item.subnetss = [];\r\n    }\r\n\r\n    if(name === 'vpcId')\r\n    {\r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          vpcId: true,\r\n          subnetId: true,\r\n          typeId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.typeId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/subnetGroups'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    item.type=item.typeId;\r\n\r\n    var values = [];\r\n    item.rdss=[];\r\n    if(item.rdss && item.rdss.length){\r\n      item.rdss.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.rdss= values;\r\n    }\r\n    values = [];\r\n    if(item.efss && item.efss.length){\r\n      item.efss.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.efss= values;\r\n    }\r\n    values = [];\r\n    if(item.elasticcaches && item.elasticcaches.length){\r\n      item.elasticcaches.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.elasticcaches= values;\r\n    }\r\n    values = [];\r\n    if(item.elasticsearchs && item.elasticsearchs.length){\r\n      item.elasticsearchs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.elasticsearchs= values;\r\n    }\r\n    //item.subnets=[{\"id\": 1000}, {\"id\": 1001}];\r\n    //item.subnets={};\r\n    //\r\n    if(item.subnets && item.subnets.length) item.subnets.map(s => {  \r\n          console.log(\"subnet:\" + s.id);\r\n    });\r\n    \r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + item.vpc.id + '/subnetGroups/' + item.id : API_BASE_URL + '/vpcs/' + item.vpc.id + '/subnetGroups', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetId, typeId, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      subnetId: '',\r\n      typeId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n     else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.typeId && typeId.length === 0){\r\n      errors.typeId = 'Type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.subnetId && subnetId && this.state.item.subnets.length === 0){\r\n      errors.subnetId = 'Add subnets to cover at least 2 availability zones.';\r\n      return errors;\r\n    }\r\n    \r\n\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit subnetGroup' : 'Add subnetGroup'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.typeId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/subnetGroups\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n\r\n    let optss = [];\r\n    if(item.subnetss && item.subnetss.length){\r\n      item.subnetss.map(s => {\r\n      \r\n          let isSelected = false;\r\n          if(item.subnets && item.subnets.length) item.subnets.map(ss => {\r\n             if(s.id == ss.id) isSelected = true;\r\n          });\r\n          optss.push(<option key={s.id} value={s.id} selected={isSelected}>{s.id} {s.name} {s.az.name}</option>);\r\n      });\r\n    }\r\n    let sub = item.subnetId || {};\r\n    item.subnetId = sub;\r\n\r\n    let tt = item.typeId || '';\r\n    item.typeId = tt;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"typeId\">Type (*)</Label>\r\n            <Input type=\"select\" name=\"typeId\" id=\"typeId\" value={tt} onChange={this.handleChange} onBlur={this.handleBlur('typeId')}\r\n                 valid={errors.typeId === ''}\r\n                 invalid={errors.typeId !== ''}\r\n                 \r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"RDS\">RDS</option>\r\n              <option value=\"EFS\">EFS</option>\r\n              <option value=\"ECC\">Elastic cache</option>\r\n              <option value=\"ELK\">Elastic search</option>\r\n            </Input>\r\n            <FormFeedback>{errors.typeId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n          <FormGroup>\r\n            <Label for=\"subnetId\">Subnets (*)</Label>\r\n            <Input type=\"select\" name=\"subnetId\" id=\"subnetId\"  /*value={\"1001\",\"1002\"}*/ onChange={this.handleChange} onBlur={this.handleBlur('subnetId')} multiple\r\n                 valid={errors.subnetId === ''}\r\n                 invalid={errors.subnetId !== ''}\r\n            >\r\n            <option value=\"\" disabled>Choose</option>\r\n              {optss}\r\n            </Input>\r\n            <FormFeedback>{errors.subnetId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(SubnetGroupEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass CognitoList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {cognitos: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/cognitos`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({cognitos: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/cognitos/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateCognito = [...this.state.cognitos].filter(i => i.id !== id);\r\n      this.setState({cognitos: updateCognito});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {cognitos, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const cognitoList = cognitos.map(cognito => {\r\n      \r\n      const link = API_BASE_URL + \"/accounts/\" + cognito.account.id; \r\n\r\n      return <tr key={cognito.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{cognito.id}</td>\r\n\r\n\r\n        <td>{cognito.name}</td>\r\n        <td>{cognito.text}</td>\r\n\r\n        <td><a href={link}>{cognito.account.numAccount}</a></td>\r\n\t\t    \r\n\t\t\r\n\r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/cognitos/\" + cognito.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(cognito.account.id, cognito.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/cognitos/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Cognito</Button>\r\n          </div>\r\n          \r\n          <h3>Cognito</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              \r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Account</th> \r\n              \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {cognitoList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CognitoList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass CognitoEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n\t  account: {},\r\n  \taccountId : '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const cognito = await (await fetch(`${API_BASE_URL}/cognitos/${this.props.match.params.id}`)).json();\r\n      cognito.touched = {\r\n        name: false,\r\n        accountId: false\r\n      };\r\n      this.setState({item: cognito});\r\n\r\n      let item = {...this.state.item};\r\n      item.accountId = cognito.account.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const cognito = {\r\n        name: '',\r\n        text: '',\r\n        account: {},\r\n        accountId : '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false\r\n        }\r\n      };\r\n      cognito.touched = {\r\n          name: false,\r\n          accountId: false\r\n      };\r\n      this.setState({item: cognito});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.account = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) return;\r\n    \r\n    const hist= API_BASE_URL + '/cognitos'; \r\n\r\n    item.account={id: item.accountId};\r\n    //console.log(item.accountId + '   ' + item.account.id);\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/cognitos/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/cognitos', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'account should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit cognito' : 'Add cognito'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/cognitos\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.account && item.account.length){\r\n      item.account.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    \r\n\r\n    let tri = item.accountId || '';\r\n    item.accountId = tri;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">accounts (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         \r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(CognitoEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\nclass DynamoDbList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {dynamoDbs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/dynamoDbs`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({dynamoDbs: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/dynamoDbs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateDynamoDb = [...this.state.dynamoDbs].filter(i => i.id !== id);\r\n      this.setState({dynamoDbs: updateDynamoDb});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {dynamoDbs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const dynamoDbList = dynamoDbs.map(dynamoDb => {\r\n      \r\n      const link = API_BASE_URL + \"/accounts/\" + dynamoDb.account.id; \r\n\r\n      return <tr key={dynamoDb.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{dynamoDb.id}</td>\r\n\r\n\r\n        <td>{dynamoDb.name}</td>\r\n        <td>{dynamoDb.text}</td>\r\n\r\n        <td><a href={link}>{dynamoDb.account.numAccount}</a></td>\r\n\t\t    \r\n\t\t\r\n\r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/dynamoDbs/\" + dynamoDb.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(dynamoDb.account.id, dynamoDb.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/dynamoDbs/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add DynamoDb</Button>\r\n          </div>\r\n          \r\n          <h3>DynamoDb</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              \r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Account</th> \r\n              \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {dynamoDbList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DynamoDbList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\nclass DynamoDbEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n\t  account: {},\r\n  \taccountId : '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const dynamoDb = await (await fetch(`${API_BASE_URL}/dynamoDbs/${this.props.match.params.id}`)).json();\r\n      dynamoDb.touched = {\r\n        name: false,\r\n        accountId: false\r\n      };\r\n      this.setState({item: dynamoDb});\r\n\r\n      let item = {...this.state.item};\r\n      item.accountId = dynamoDb.account.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const dynamoDb = {\r\n        name: '',\r\n        text: '',\r\n        account: {},\r\n        accountId : '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false\r\n        }\r\n      };\r\n      dynamoDb.touched = {\r\n          name: false,\r\n          accountId: false\r\n      };\r\n      this.setState({item: dynamoDb});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.account = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) return;\r\n    \r\n    const hist= API_BASE_URL + '/dynamoDbs'; \r\n\r\n    item.account={id: item.accountId};\r\n    //console.log(item.accountId + '   ' + item.account.id);\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/dynamoDbs/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/dynamoDbs', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'account should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit dynamoDb' : 'Add dynamoDb'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/dynamoDbs\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.account && item.account.length){\r\n      item.account.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    \r\n\r\n    let tri = item.accountId || '';\r\n    item.accountId = tri;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">accounts (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         \r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(DynamoDbEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SsmList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {ssms: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/ssms`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ssms: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/ssms/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateSsm = [...this.state.ssms].filter(i => i.id !== id);\r\n      this.setState({ssms: updateSsm});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {ssms, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const ssmList = ssms.map(ssm => {\r\n      \r\n      const link = API_BASE_URL + \"/accounts/\" + ssm.account.id; \r\n\r\n      return <tr key={ssm.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{ssm.id}</td>\r\n\r\n\r\n        <td>{ssm.name}</td>\r\n        <td>{ssm.text}</td>\r\n\r\n        <td>{ssm.type}</td>\r\n        <td>{ssm.keyKmsId}</td>\r\n        <td>{ssm.value}</td>\r\n\r\n        <td><a href={link}>{ssm.account.numAccount}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/ssms/\" + ssm.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(ssm.account.id, ssm.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/ssms/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add SSM Parameter Store</Button>\r\n          </div>\r\n          \r\n          <h3>SSM Parameter Store</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Description</th>\r\n\r\n              <th width=\"5%\">Type</th>\r\n              <th width=\"5%\">Key Kms Id</th>\r\n              <th width=\"5%\">Value</th>\r\n              \r\n              <th width=\"5%\">Account</th> \r\n              \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {ssmList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SsmList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SsmEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n\t  account: {},\r\n  \taccountId : '',\r\n    type: 'String', \r\n    keyKmsId: '', \r\n    value: '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      type: false,\r\n      keyKmsId: false, \r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const ssm = await (await fetch(`${API_BASE_URL}/ssms/${this.props.match.params.id}`)).json();\r\n      ssm.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        type: false,\r\n        keyKmsId: false, \r\n        value: false\r\n      };\r\n      this.setState({item: ssm});\r\n\r\n      let item = {...this.state.item};\r\n      item.accountId = ssm.account.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const ssm = {\r\n        name: '',\r\n        text: '',\r\n        account: {},\r\n        accountId : '',\r\n        type: 'String', \r\n        keyKmsId: '', \r\n        value: '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          type: false,\r\n          keyKmsId: false, \r\n          value: false\r\n        }\r\n      };\r\n      ssm.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          type: false,\r\n          keyKmsId: false, \r\n          value: false\r\n      };\r\n      this.setState({item: ssm});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.account = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          type: true,\r\n          keyKmsId: true, \r\n          value: true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.type, item.keyKmsId, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/ssms'; \r\n\r\n    item.account={id: item.accountId};\r\n    if(this.state.item.type !== 'SecureString')\r\n    {\r\n      item.keyKmsId = '';\r\n    }\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/ssms/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/ssms', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId, type, keyKmsId, value) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      type: '',\r\n      keyKmsId: '',\r\n      value: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'account should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.type === 'SecureString' && this.state.item.touched.keyKmsId && keyKmsId.length === 0){\r\n      errors.keyKmsId = 'keyKmsId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'value should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit SSM Parameter Store' : 'Add SSM Parameter Store'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.type, item.keyKmsId, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/ssms\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.account && item.account.length){\r\n      item.account.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    \r\n\r\n    let tri = item.accountId || '';\r\n    item.accountId = tri;\r\n\r\n    let type = item.type || '';\r\n    item.type = type;\r\n\r\n    const keyKms = (item.type === 'SecureString') ?  <FormGroup>\r\n            <Label for=\"keyKmsId\">Key Kms Id (*)</Label>\r\n            <Input type=\"text\" name=\"keyKmsId\" id=\"keyKmsId\" value={item.keyKmsId || ''} placeholder=\"Enter keyKmsId\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('keyKmsId')} autoComplete=\"keyKmsId\"\r\n                   valid={errors.keyKmsId === ''}\r\n                   invalid={errors.keyKmsId !== ''}\r\n            />\r\n           <FormFeedback>{errors.keyKmsId}</FormFeedback>\r\n          </FormGroup> : '';\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">accounts (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n          <FormGroup>\r\n            <Label for=\"type\">Type (*)</Label>\r\n            <Input type=\"select\" name=\"type\" id=\"type\"  value={type} onChange={this.handleChange} onBlur={this.handleBlur('type')}\r\n                 valid={errors.type === ''}\r\n                 invalid={errors.type !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"String\">String</option>\r\n              <option value=\"StringList\">StringList</option>\r\n              <option value=\"SecureString\">SecureString</option>\r\n            </Input>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {keyKms}\r\n\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"textarea\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\t\t      \r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(SsmEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass StorageList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {storages: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/storages`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({storages: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/storages/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateStorage = [...this.state.storages].filter(i => i.id !== id);\r\n      this.setState({storages: updateStorage});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {storages, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const storageList = storages.map(storage => {\r\n      \r\n    const link = API_BASE_URL + \"/accounts/\" + storage.account.id; \r\n    const versionning = (storage.versionning) ? 'Yes': 'No';\r\n    const cloudWatchMetrics = (storage.cloudWatchMetrics) ? 'Yes': 'No';\r\n    const encryption = (storage.encryption) ? 'Yes': 'No';\r\n    const kms = (storage.kms) ? storage.kms.id : '';\r\n    const serverAccessLoging = (storage.serverAccessLoging) ? 'Yes': 'No';\r\n\r\n    const storageTarget = (storage.storageTarget) ? storage.storageTarget.id : '';\r\n    \r\n    const grantAmazonS3ReadAccess = (storage.grantAmazonS3ReadAccess) ? 'Yes': 'No';\r\n\r\n   \r\n      return <tr key={storage.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{storage.id}</td>\r\n        <td>{storage.name}</td>\r\n\r\n        <td>{storage.region.id} {storage.region.name}</td>\r\n        <td>{versionning}</td>\r\n        <td>{cloudWatchMetrics}</td>\r\n\r\n         <td>{encryption}</td>\r\n         <td>{storage.encryptionType}</td>\r\n         <td>{kms}</td>\r\n\r\n        <td>{serverAccessLoging}</td>\r\n        <td>{storageTarget}</td>\r\n        <td>{storage.targetPrefix}</td>\r\n\r\n        \r\n        <td>{grantAmazonS3ReadAccess}</td>\r\n\r\n        <td>{storage.cors}</td>\r\n        <td>{storage.text}</td>\r\n        <td><a href={link}>{storage.account.numAccount}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/storage/\" + storage.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/storage/\" + storage.id + \"/storageacls\" }>Acls</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/storages/\" + storage.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(storage.account.id, storage.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/storages/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add S3</Button>\r\n          </div>\r\n          \r\n          <h3>S3</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n             \r\n              <th width=\"5%\">Region</th>\r\n              <th width=\"5%\">Versionning</th>\r\n              <th width=\"5%\">Cloud Watch Metrics</th>\r\n              \r\n              <th width=\"5%\">Encryption</th>\r\n              <th width=\"5%\">Encryption Type</th>\r\n              <th width=\"5%\">Kms key</th>\r\n\r\n              <th width=\"5%\">Server Access Loging</th>\r\n              <th width=\"5%\">Storage Target</th>\r\n              <th width=\"5%\">Target Prefix</th>\r\n\r\n              \r\n              <th width=\"5%\">AmazonS3ReadAccess</th>\r\n\r\n              <th width=\"5%\">Cors Configuration</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Account</th> \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {storageList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorageList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass StorageEdit extends Component {\r\n \r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n\t  account: {},\r\n  \taccountId : '',\r\n    regionId:'',\r\n    regions:[],\r\n    region: {},\r\n    versionning: true,\r\n    cloudWatchMetrics: false,\r\n    encryption: false,\r\n    encryptionType: 'AES-256',\r\n    kmsId:'',\r\n    kms: {},\r\n    kmss: [],\r\n    serverAccessLoging: false,\r\n    storageTargetId: '',\r\n    storageTarget: {},\r\n    storageTargets: [],\r\n    targetPrefix: '',\r\n    cors: '',\r\n    grantAmazonS3ReadAccess: false,\r\n    blockNewPublicAclObject:false, \r\n    removePublicAccessGranted:false, \r\n    blockNewPublicBucket:false, \r\n    blockPublicCross:false, \r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      regionId: false,\r\n      encryptionType: false,\r\n      kmsId: false,\r\n      storageTargetId: false\r\n     \r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const storage = await (await fetch(`${API_BASE_URL}/storages/${this.props.match.params.id}`)).json();\r\n      storage.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        regionId: false,\r\n        encryptionType: false,\r\n        kmsId: false,\r\n        storageTargetId: false\r\n      };\r\n      this.setState({item: storage});\r\n\r\n      let item = {...this.state.item};\r\n      item.accountId = storage.account.id;\r\n      item.regionId = storage.region.id;\r\n      \r\n      if(item.encryptionType === '') item.encryptionType = 'AES-256';\r\n      if(storage.kms) item.kmsId = storage.kms.id;\r\n\r\n      if(storage.storageTarget) item.storageTargetId = storage.storageTarget.id;\r\n\r\n       fetch(API_BASE_URL + '/accounts/' + (storage.account.id) + '/kmss',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.kmss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/accounts/' + (storage.account.id) + '/storages',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.storageTargets = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const storage = {\r\n        name: '',\r\n        text: '',\r\n        account: {},\r\n        accountId : '',\r\n        regionId:'',\r\n        regions:[],\r\n        region: {},\r\n        versionning: true,\r\n        cloudWatchMetrics: false,\r\n        encryption: false,\r\n        encryptionType: 'AES-256',\r\n        kmsId:'',\r\n        kms: {},\r\n        kmss: [],\r\n        serverAccessLoging: false,\r\n        storageTargetId: '',\r\n        storageTarget: {},\r\n        storageTargets: [],\r\n        targetPrefix: '',\r\n        cors: '',\r\n        grantAmazonS3ReadAccess: false,\r\n        blockNewPublicAclObject:false, \r\n        removePublicAccessGranted:false, \r\n        blockNewPublicBucket:false, \r\n        blockPublicCross:false, \r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          regionId: false,\r\n          encryptionType: false,\r\n          kmsId: false,\r\n          storageTargetId: false\r\n        }\r\n      };\r\n      storage.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          regionId: false,\r\n          encryptionType: false,\r\n          kmsId: false,\r\n          storageTargetId: false\r\n      };\r\n\r\n      this.setState({item: storage});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.account = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n    await fetch(API_BASE_URL + '/regions',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.regions = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    // \r\n    if(name === 'serverAccessLoging')\r\n    {\r\n      item.serverAccessLoging = (target.checked) ? true: false;\r\n    }\r\n\r\n    if(name === 'versionning')\r\n    {\r\n      item.versionning = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'cloudWatchMetrics')\r\n    {\r\n      item.cloudWatchMetrics = (target.checked) ? true: false;\r\n    }\r\n\r\n    if(name === 'encryption')\r\n    {\r\n      item.encryption = (target.checked) ? true: false;\r\n    }\r\n\r\n    if(name === 'type')\r\n    {\r\n      if(value === 'AES-256'){\r\n        item.encryptionType = 'AES-256';\r\n      }\r\n      else\r\n      {\r\n        item.encryptionType = 'AWS-KMS';\r\n      }\r\n    }\r\n\r\n\r\n    if(name === 'blockNewPublicAclObject')\r\n    {\r\n      item.blockNewPublicAclObject = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'removePublicAccessGranted')\r\n    {\r\n      item.removePublicAccessGranted = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'blockNewPublicBucket')\r\n    {\r\n      item.blockNewPublicBucket = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'blockPublicCross')\r\n    {\r\n      item.blockPublicCross = (target.checked) ? true: false;\r\n    }\r\n\r\n    if(name === 'accountId')\r\n    {\r\n     \r\n      fetch(API_BASE_URL + '/accounts/' + item.accountId + '/kmss',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.kmss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/accounts/' + item.accountId  + '/storages',) \r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.storageTargets = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n     \r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          regionId: true,\r\n          encryptionType: true,\r\n          kmsId: true,\r\n          storageTargetId: true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.regionId, item.encryptionType, item.kmsId, item.storageTargetId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/storages'; \r\n\r\n    \r\n    item.account={id: item.accountId};\r\n    item.region={id: item.regionId};\r\n\r\n    if (!item.encryption)\r\n    {\r\n      item.encryptionType = '';\r\n      item.kms= null;\r\n    }\r\n    else \r\n    {\r\n      if(item.encryptionType === 'AWS-KMS') item.kms = {id : item.kmsId};\r\n      else item.kms= null;\r\n    }\r\n\r\n    if (!item.serverAccessLoging)\r\n    {\r\n      item.targetPrefix = null;\r\n      item.storageTarget = null;\r\n    }\r\n    else\r\n    {\r\n      //console.log(item.storageTarget + '   ' + item.storageTargetId);\r\n      item.storageTarget = {id: item.storageTargetId};\r\n    }\r\n    \r\n    //console.log(item.accountId + '   ' + item.account.id);\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/storages/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/storages', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId, regionId, encryptionType, kmsId, storageTargetId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      regionId: '',\r\n      encryptionType: '',\r\n      kmsId: '',\r\n      storageTargetId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'account should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.regionId && regionId.length === 0){\r\n      errors.regionId = 'regionId should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.encryption && this.state.item.touched.encryptionType && encryptionType.length === 0){\r\n      errors.encryptionType = 'encryptionType should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.encryption && this.state.item.encryptionType === 'AWS-KMS' && this.state.item.touched.kmsId && kmsId.length === 0){\r\n      errors.kmsId = 'kmsId should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.serverAccessLoging && this.state.item.touched.storageTarget  && storageTargetId.length === 0){\r\n      errors.storageTargetId = 'storageTarget should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit storage' : 'Add storage'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.regionId, item.encryptionType, item.kmsId, item.storageTagetId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/storages\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.account && item.account.length){\r\n      item.account.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let tri = item.accountId || '';\r\n    item.accountId = tri;\r\n\r\n    let optrs = [];\r\n    if(item.regions && item.regions.length){\r\n      item.regions.map(r => {  \r\n          optrs.push(<option value={r.id}>{r.id} {r.name}</option>);\r\n      });\r\n    }\r\n    let region = item.regionId || '';\r\n    item.regionId = region;\r\n\r\n    let optks = [];\r\n    if(item.kmss && item.kmss.length){\r\n      item.kmss.map(r => {  \r\n          optks.push(<option value={r.id}>{r.id} {r.alias}</option>);\r\n      });\r\n    }\r\n    let kms = item.kmsId || '';\r\n    item.kmsId = kms;\r\n\r\n    let optss = [];\r\n    if(item.storageTargets && item.storageTargets.length){\r\n      item.storageTargets.map(r => {  \r\n          optss.push(<option value={r.id}>{r.id} {r.name}</option>);\r\n      });\r\n    }\r\n    let storageTarget = item.storageTargetId || '';\r\n    item.storageTargetId = storageTarget;\r\n\r\n    let encryptionType = (item.encryption) ? <FormGroup tag=\"fieldset\">\r\n            <Label for=\"type\">Encryption Type(*)</Label>\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"AES-256\" checked={item.encryptionType === 'AES-256'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                AES-256\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"AWS-KMS\" checked={item.encryptionType === 'AWS-KMS'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                 AWS-KMS\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup> : '';\r\n    \r\n    let kmss = (item.encryption && item.encryptionType === 'AWS-KMS' ) ? <FormGroup>\r\n            <Label for=\"kmsId\">Kms (*)</Label>\r\n            <Input type=\"select\" name=\"kmsId\" id=\"kmsId\"  value={kms} onChange={this.handleChange} onBlur={this.handleBlur('kmsId')}\r\n                 valid={errors.kmsId === ''}\r\n                 invalid={errors.kmsId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optks}\r\n            </Input>\r\n            <FormFeedback>{errors.kmsId}</FormFeedback>\r\n          </FormGroup> : '';\r\n    \r\n    let storageTargets = (item.serverAccessLoging) ? <FormGroup>\r\n            <Label for=\"storageTargetId\">Storage Target (*)</Label>\r\n            <Input type=\"select\" name=\"storageTargetId\" id=\"storageTargetId\"  value={storageTarget} onChange={this.handleChange} onBlur={this.handleBlur('storageTargetId')}\r\n                 valid={errors.storageTargetId === ''}\r\n                 invalid={errors.storageTargetId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optss}\r\n            </Input>\r\n            <FormFeedback>{errors.storageTargetId}</FormFeedback>\r\n          </FormGroup> : '';\r\n\r\n    \r\n    let targetPrefix = (item.serverAccessLoging) ? <FormGroup>\r\n            <Label for=\"targetPrefix\">Target Prefix (*)</Label>\r\n            <Input type=\"text\" name=\"targetPrefix\" id=\"targetPrefix\" value={item.targetPrefix || ''} placeholder=\"Enter targetPrefix\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('targetPrefix')} autoComplete=\"targetPrefix\"\r\n                   valid={errors.targetPrefix === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.targetPrefix}</FormFeedback>\r\n          </FormGroup> : '';\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">accounts (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         <FormGroup>\r\n            <Label for=\"regionId\">Region (*)</Label>\r\n            <Input type=\"select\" name=\"regionId\" id=\"regionId\"  value={region} onChange={this.handleChange} onBlur={this.handleBlur('regionId')}\r\n                 valid={errors.regionId === ''}\r\n                 invalid={errors.regionId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optrs}\r\n            </Input>\r\n            <FormFeedback>{errors.regionId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         <FormGroup > \r\n            <Label for=\"versionning\">Versionning:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"versionning\" id=\"versionning\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('versionning')} \r\n                    checked={item.versionning === true}/>\r\n          </FormGroup>\r\n\r\n\r\n           <FormGroup > \r\n            <Label for=\"encryption\">Encryption:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"encryption\" id=\"encryption\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('encryption')} \r\n                    checked={item.encryption === true}/>\r\n          </FormGroup>\r\n\r\n\r\n          {encryptionType}\r\n          {kmss}\r\n\r\n          <FormGroup >\r\n            <Label for=\"cloudWatchMetrics\">Cloud Watch Metrics:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"cloudWatchMetrics\" id=\"cloudWatchMetrics\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('cloudWatchMetrics')} \r\n                    checked={item.cloudWatchMetrics === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"serverAccessLoging\">Server Access Loging:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"serverAccessLoging\" id=\"serverAccessLoging\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('serverAccessLoging')} \r\n                    checked={item.serverAccessLoging === true}/>\r\n          </FormGroup>\r\n          \r\n          {storageTargets}\r\n          {targetPrefix}\r\n\r\n          <FormGroup> \r\n            <Label for=\"\">Public access settings for this bucket</Label>\r\n            <FormText>Use the Amazon S3 block public access settings to enforce that buckets don\\''t allow public access to data. You can also configure the Amazon S3 block public access settings at the account level</FormText>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"\">Manage public access control lists (ACLs) for this bucket</Label>\r\n            <FormText></FormText>\r\n          </FormGroup>\r\n          <FormGroup > \r\n            <Label for=\"blockNewPublicAclObject\">Block new public ACLs and uploading public objects (Recommended):</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"blockNewPublicAclObject\" id=\"blockNewPublicAclObject\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('blockNewPublicAclObject')} \r\n                    checked={item.blockNewPublicAclObject === true}/>\r\n          </FormGroup>\r\n          <FormGroup > \r\n            <Label for=\"removePublicAccessGranted\">Remove public access granted through public ACLs (Recommended):</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"removePublicAccessGranted\" id=\"removePublicAccessGranted\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('removePublicAccessGranted')} \r\n                    checked={item.removePublicAccessGranted === true}/>\r\n          </FormGroup>\r\n\r\n           <FormGroup>\r\n            <Label for=\"\">Manage public bucket policies for this bucket</Label>\r\n            <FormText></FormText>\r\n          </FormGroup>\r\n          <FormGroup > \r\n            <Label for=\"blockNewPublicBucket\">Block new public bucket policies (Recommended):</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"blockNewPublicBucket\" id=\"blockNewPublicBucket\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('blockNewPublicBucket')} \r\n                    checked={item.blockNewPublicBucket === true}/>\r\n          </FormGroup>\r\n          <FormGroup > \r\n            <Label for=\"blockPublicCross\">Block public and cross-account access if bucket has public policies (Recommended):</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"blockPublicCross\" id=\"blockPublicCross\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('blockPublicCross')} \r\n                    checked={item.blockPublicCross === true}/>\r\n          </FormGroup>\r\n          \r\n\r\n          <FormGroup>\r\n            <Label for=\"grantAmazonS3ReadAccess\">Grant Amazon S3 Delivery Read Access (*)</Label>\r\n            <Input type=\"select\" name=\"grantAmazonS3ReadAccess\" id=\"grantAmazonS3ReadAccess\"  value={item.grantAmazonS3ReadAccess} onChange={this.handleChange} onBlur={this.handleBlur('grantAmazonS3ReadAccess')}\r\n            >\r\n              <option value=\"false\">Do not grant Amazon S3 Log Delivery group write access to this bucket</option>\r\n              <option value=\"true\">Grant Amazon S3 Log Delivery group write access to this bucket</option>\r\n            </Input>\r\n             \r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"cors\">Cors Configuration</Label>\r\n            <Input type=\"textarea\" name=\"cors\" id=\"cors\" value={item.cors || ''}\r\n                   placeholder='<CORSConfiguration>\r\n <CORSRule>\r\n   <AllowedOrigin>*</AllowedOrigin>\r\n   <AllowedMethod>GET</AllowedMethod>\r\n   <AllowedHeader>Authorization</AllowedHeader>\r\n  <MaxAgeSeconds>3000</MaxAgeSeconds>\r\n </CORSRule>\r\n</CORSConfiguration>'\r\n                   onChange={this.handleChange} autoComplete=\"cors\"/>\r\n          </FormGroup>\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(StorageEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass StorageAclList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {storageAcls: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n  \r\n    fetch(`${API_BASE_URL}/storages/${this.props.match.params.id}/storageAcls`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({storageAcls: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/storages/${accId}/storageAcls/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateStorageAcl = [...this.state.storageAcls].filter(i => i.id !== id);\r\n      this.setState({storageAcls: updateStorageAcl});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {storageAcls, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const storageAclList = storageAcls.map(storageAcl => {\r\n      \r\n      const link = API_BASE_URL + \"/storages/\" + storageAcl.storage.id; \r\n      const read = (storageAcl.read) ? 'Yes': 'No';\r\n      const write = (storageAcl.write) ? 'Yes': 'No';\r\n      \r\n      const account = (storageAcl.account) ? storageAcl.account.id : '';\r\n\r\n      const listObject = (storageAcl.listObject) ? 'Yes': 'No';\r\n      const writeObject = (storageAcl.writeObject) ? 'Yes': 'No';\r\n\r\n      return <tr key={storageAcl.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{storageAcl.id}</td>\r\n\r\n        <td>{storageAcl.type}</td>\r\n        <td>{account}</td>\r\n        <td>{storageAcl.externalAccount}</td>\r\n        <td>{storageAcl.groupe}</td>\r\n        <td>{storageAcl.store}</td>\r\n        <td>{read}</td>\r\n        <td>{write}</td>\r\n        <td>{listObject}</td>\r\n        <td>{writeObject}</td>\r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/storage/\" + storageAcl.storage.id + \"/storageacls/\" + storageAcl.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(storageAcl.storage.id, storageAcl.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    \r\n    const add = `${API_BASE_URL}/storage/${this.props.match.params.id}/storageacls/new`;\r\n    const storage = `${API_BASE_URL}/storages`;\r\n    \r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={storage}>S3</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add S3 Acl</Button>\r\n          </div>\r\n          \r\n          <h3>S3 Acl</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Type</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">External Account</th>\r\n              <th width=\"5%\">Public access</th>\r\n              <th width=\"5%\">S3 log delivery group</th>\r\n\r\n              <th width=\"5%\">Read bucket permissions</th> \r\n              <th width=\"5%\">Write bucket permissions</th>\r\n              <th width=\"5%\">List objects</th> \r\n              <th width=\"5%\">Write objects</th> \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {storageAclList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorageAclList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass StorageAclEdit extends Component {\r\n\r\n  emptyItem = {\r\n    externalAccount: '',\r\n    accountId: '',\r\n    storage: {},\r\n    type: 'Internal',\r\n    read: false,\r\n    write: false,\r\n    listObject: false,\r\n    writeObject: false,\r\n    groupe:'',\r\n    store:'',\r\n    touched: {\r\n      externalAccount: false,\r\n      accountId: false,\r\n      type: false,\r\n      groupe: false,\r\n      store:false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const storageAcl = await (await fetch(`${API_BASE_URL}/storageAcls/${this.props.match.params.id}`)).json();\r\n      storageAcl.touched = {\r\n        externalAccount: false,\r\n        accountId: false,\r\n        type: false,\r\n        groupe: false,\r\n        store:false\r\n      };\r\n      this.setState({item: storageAcl});\r\n      let item = {...this.state.item};\r\n      item.accountId = item.storage.account.id;\r\n      item.groupe = 'Everyone';\r\n      item.store  = 'Log Delivery';\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const storage = await (await fetch(`${API_BASE_URL}/storages/${this.props.match.params.ids}`)).json();\r\n      const storageAcl = {\r\n        externalAccount: '',\r\n        accountId: '',\r\n        storage: {},\r\n        type: 'Internal',\r\n        read: false,\r\n        write: false,\r\n        listObject: false,\r\n        writeObject: false,\r\n        groupe:'',\r\n        store:'',\r\n        touched: {\r\n          externalAccount: false,\r\n          accountId: false,\r\n          type: false,\r\n          groupe: false,\r\n          store:false\r\n        }\r\n      };\r\n      storageAcl.storage = storage;\r\n      storageAcl.accountId = storage.account.id;\r\n      storageAcl.touched = {\r\n          externalAccount: false,\r\n          accountId: false,\r\n          type: false,\r\n          groupe: false,\r\n          store:false\r\n      };\r\n      storageAcl.groupe = 'Everyone';\r\n      storageAcl.store  = 'Log Delivery';\r\n      this.setState({item: storageAcl});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    /*if(name === 'type')\r\n    {\r\n      item.type = (target.checked) ? true: false;\r\n    }*/\r\n    if(name === 'read')\r\n    {\r\n      item.read = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'write')\r\n    {\r\n      item.write = (target.checked) ? true: false;\r\n    }\r\n\r\n    if(name === 'listObject')\r\n    {\r\n      item.listObject = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'writeObject')\r\n    {\r\n      item.writeObject = (target.checked) ? true: false;\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          externalAccount: true,\r\n          accountId: true,\r\n          type: true,\r\n          groupe: true,\r\n          store:true\r\n    };\r\n    const errors = this.validate(item.externalAccount, item.accountId, item.type, item.groupe, item.store);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/storage/' + item.storage.id +'/storageacls'; \r\n\r\n    item.storage={id: item.storage.id};\r\n    \r\n    if(item.type === 'Internal')\r\n    {\r\n      item.externalAccount = '';\r\n      item.account = {id: item.accountId};\r\n      item.groupe = '';\r\n      item.store = '';\r\n    }\r\n    else if(item.type === 'External')\r\n    {\r\n      item.accountId = null;\r\n      item.groupe = '';\r\n      item.store = '';\r\n    }\r\n    else if(item.type === 'Group')\r\n    {\r\n      item.accountId = null;\r\n      item.externalAccount = '';\r\n      item.store = '';\r\n    }\r\n    else if(item.type === 'S3')\r\n    {\r\n      item.accountId = null;\r\n      item.externalAccount = '';\r\n      item.groupe = '';\r\n    }\r\n    \r\n\r\n        \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/storages/' + (item.storage.id) + '/storageAcls/'+(item.id) : API_BASE_URL + '/storages/' + item.storage.id + '/storageAcls', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(externalAccount, accountId, type, groupe, store) {\r\n\r\n    const errors = {\r\n      externalAccount: '',\r\n      accountId: '',\r\n      type: '',\r\n      groupe: '',\r\n      store: ''\r\n    };\r\n    \r\n    if(this.state.item.type === 'External' && this.state.item.touched.externalAccount && externalAccount.length === 0){\r\n      errors.externalAccount = 'External Account should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.type === 'Internal' && this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Account should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.type === 'Group' && this.state.item.touched.groupe && groupe.length === 0){\r\n      errors.groupe = 'Group should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.type === 'S3' && this.state.item.touched.store && store.length === 0){\r\n      errors.store = 'S3 delivery should not be null';\r\n      return errors;\r\n    } \r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit S3 Acl' : 'Add S3 Acl'}</h2>;\r\n\r\n    const errors = this.validate(item.externalAccount, item.accountId, item.type, item.groupe, item.store);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/storage/\" + item.storage.id + \"/storageacls\";\r\n\r\n    let storage = null;\r\n    storage = <FormGroup>\r\n            <Label for=\"storageId\">Storage: {item.storage.name}</Label>\r\n            <Input type=\"text\" name=\"storageId\" id=\"storageId\" value={item.storage.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n    let account = (item.type === 'Internal') ? <FormGroup>\r\n            <Label for=\"accountId\">Access for your AWS account (*)</Label>\r\n            <Input type=\"text\" name=\"accountId\" id=\"accountId\" value={item.accountId || ''} placeholder=\"Enter accountId\" disabled='true'\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('accountId')} autoComplete=\"accountId\"\r\n                   valid={errors.accountId === ''}\r\n                   invalid={errors.accountId !== ''}\r\n            />\r\n           <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup> : '' ;\r\n\r\n    let externalAccount = (item.type  === 'External') ? <FormGroup>\r\n            <Label for=\"externalAccount\">Access for other AWS accounts (*)</Label>\r\n            <Input type=\"text\" name=\"externalAccount\" id=\"externalAccount\" value={item.externalAccount || ''} placeholder=\"Enter externalAccount\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('externalAccount')} autoComplete=\"externalAccount\"\r\n                   valid={errors.externalAccount === ''}\r\n                   invalid={errors.externalAccount !== ''}\r\n            />\r\n           <FormFeedback>{errors.externalAccount}</FormFeedback>\r\n          </FormGroup> : '' ;\r\n\r\n    let groupe = (item.type  === 'Group') ? <FormGroup>\r\n            <Label for=\"groupe\">Public access (*)</Label>\r\n            <Input type=\"text\" name=\"groupe\" id=\"groupe\" value={item.groupe || ''} placeholder=\"Enter groupe\" disabled='true'\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('groupe')} autoComplete=\"groupe\"\r\n                   valid={errors.groupe === ''}\r\n                   invalid={errors.groupe !== ''}\r\n            />\r\n           <FormFeedback>{errors.groupe}</FormFeedback>\r\n          </FormGroup> : '' ;\r\n    let store = (item.type  === 'S3') ? <FormGroup>\r\n            <Label for=\"store\">S3 log delivery groupe (*)</Label>\r\n            <Input type=\"text\" name=\"store\" id=\"store\" value={item.store || ''} placeholder=\"Enter store\" disabled='true'\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('store')} autoComplete=\"store\"\r\n                   valid={errors.store === ''}\r\n                   invalid={errors.store !== ''}\r\n            />\r\n           <FormFeedback>{errors.store}</FormFeedback>\r\n          </FormGroup> : '' ;\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n        {storage}\r\n\r\n          <FormGroup>\r\n            <Label for=\"type\">type(*)</Label>\r\n            <Input type=\"select\" name=\"type\" id=\"type\"  value={item.type} onChange={this.handleChange} onBlur={this.handleBlur('type')}\r\n            >\r\n              <option value=\"Internal\">Internal Account</option>\r\n              <option value=\"External\">External Account</option>\r\n              <option value=\"Group\">Public access</option>\r\n              <option value=\"S3\">S3 log delivery group</option>\r\n            </Input>\r\n             \r\n          </FormGroup>\r\n\r\n          \r\n          {externalAccount}\r\n          {account}\r\n          {groupe}\r\n          {store}\r\n\r\n\r\n\r\n          <FormGroup > \r\n            <Label for=\"listObject\">List Object:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"listObject\" id=\"listObject\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('listObject')} \r\n                    checked={item.listObject === true}/>\r\n          </FormGroup>\r\n          <FormGroup > \r\n            <Label for=\"writeObject\">Write Object:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"writeObject\" id=\"writeObject\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('writeObject')} \r\n                    checked={item.writeObject === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"read\">Read bucket permissions:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"read\" id=\"read\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('read')} \r\n                    checked={item.read === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"write\">Write bucket permissions:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"write\" id=\"write\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('write')} \r\n                    checked={item.write === true}/>\r\n          </FormGroup>\r\n\r\n          \r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(StorageAclEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagStorageList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/storages/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data =>   this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/storages/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTagStorage = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTagStorage});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/storages/\" + tag.storage.id; \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.storage.id}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/storage/\" + tag.storage.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.storage.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/storage/${this.props.match.params.id}/tags/new`;\r\n    const storage = `${API_BASE_URL}/storages`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={storage}>Storage</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Tag</Button>\r\n          </div>\r\n          \r\n          <h3>TagStorage</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Storage</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagStorageList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagStorageEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    storage: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const storage = await (await fetch(`${API_BASE_URL}/storages/${this.props.match.params.ids}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        storage: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.storage = storage;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/storage/' + item.storage.id +'/tags'; \r\n\r\n    item.storage={id: item.storage.id};\r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/storages/' + (item.storage.id) + '/tags/'+(item.id) : API_BASE_URL + '/storages/' + item.storage.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/storage/\" + item.storage.id + \"/tags\";\r\n\r\n    let storage = null;\r\n    storage = <FormGroup>\r\n            <Label for=\"storageId\">Storage: {item.storage.name}</Label>\r\n            <Input type=\"text\" name=\"storageId\" id=\"storageId\" value={item.storage.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {storage}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagStorageEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RdsList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {rdss: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/rdss`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({rdss: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/rdss/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateRds = [...this.state.rdss].filter(i => i.id !== id);\r\n      this.setState({rdss: updateRds});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {rdss, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const rdsList = rdss.map(rds => {\r\n      \r\n    const link = API_BASE_URL + \"/vpcs/\" + rds.vpc.id; \r\n    const linkAccount = API_BASE_URL + \"/accounts/\" + rds.account.id; \r\n      \r\n    const sg = API_BASE_URL + \"/subnetgroups/\" + rds.subnetgroup.id;\r\n    let sgs = '';\r\n    const eccSgs = rds.sgs.map(sg => {\r\n      sgs = sgs + '|' + sg.id + ':' + sg.name;\r\n    })\r\n    const multiAz = (rds.multiAz) ? 'Yes' : 'No';\r\n\r\n    return <tr key={rds.id}>\r\n      <td style={{whiteSpace: 'nowrap'}}>{rds.id}</td>\r\n\r\n\r\n      <td>{rds.name}</td>\r\n      <td>{rds.text}</td>\r\n\r\n      <td><a href={linkAccount}>{rds.account.numAccount}</a></td>\r\n      <td><a href={link}>{rds.vpc.name}</a></td>\r\n      <td><a href={sg}>{rds.subnetgroup.name}</a></td>\r\n      <td>{rds.az.id}</td>\r\n      <td>{sgs}</td>\r\n      <td>{rds.instanceType.id}</td>\r\n\r\n      <td>{rds.env}</td>\r\n      <td>{rds.type}</td>\r\n      <td>{rds.dbEngineVesion}</td>\r\n      <td>{rds.storageType}</td>\r\n      <td>{rds.dbInstanceIdentifier}</td>\r\n      <td>{rds.masterUserName}</td>\r\n      <td>{rds.masterPassword}</td>\r\n      <td>{rds.masterConfirmPassword}</td>\r\n      <td>{multiAz}</td>\r\n      <td>{rds.alocatedStorage}</td>\r\n      <td>{rds.provisionedIops}</td>\r\n      \r\n\r\n\r\n\r\n      <td>\r\n        <ButtonGroup>\r\n          <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/rdss/\" + rds.id}>Edit</Button>\r\n          <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(rds.vpc.id, rds.id)}>Delete</Button>\r\n        </ButtonGroup>\r\n      </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/rdss/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Rds</Button>\r\n          </div>\r\n          \r\n          <h3>Rds</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n\r\n\r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Subnet Group</th>\r\n              <th width=\"5%\">Az</th>\r\n              <th width=\"5%\">Security Group</th>\r\n              <th width=\"5%\">Instance Type</th>\r\n\r\n              <th width=\"5%\">env</th>\r\n              <th width=\"5%\">type</th>\r\n              <th width=\"5%\">dbEngineVesion</th>\r\n              <th width=\"5%\">storageType</th>\r\n              <th width=\"5%\">dbInstanceIdentifier</th>\r\n              <th width=\"5%\">masterUserName</th>\r\n              <th width=\"5%\">masterPassword</th>\r\n              <th width=\"5%\">masterConfirmPassword</th>\r\n              <th width=\"5%\">multiAz</th>\r\n              <th width=\"5%\">alocatedStorage</th>\r\n              <th width=\"5%\">provisionedIops</th>\r\n\r\n\r\n\r\n\r\n\r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {rdsList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RdsList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RdsEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    vpc: {},\r\n    vpcs: {},\r\n    vpcId : '',\r\n    subnetgroup: {},\r\n    subnetgroups: {},\r\n    subnetgroupId : '',\r\n    sgss: {},\r\n    sgs: [],\r\n    sgId: [],\r\n    instanceType: '', \r\n    az:'',\r\n    multiAz: true,\r\n    env:'', \r\n    type:'', \r\n    dbEngineVesion:'',  \r\n    storageType:'',  \r\n    dbInstanceIdentifier:'',\r\n    masterUserName:'', \r\n    masterPassword:'', \r\n    masterConfirmPassword:'',\r\n    alocatedStorage:'', \r\n    provisionedIops:'',\r\n    touched: {\r\n      name: false,\r\n      vpcId: false,\r\n      subnetgroupId: false,\r\n      accountId: false,\r\n      sgId: false,\r\n      instanceTypeId: false,\r\n      azId: false,\r\n      env: false, type: false, dbEngineVesion: false,  storageType: false,  dbInstanceIdentifier: false,\r\n      masterUserName: false, masterPassword: false, masterConfirmPassword: false,\r\n      alocatedStorage: false, provisionedIops: false,\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const rds = await (await fetch(`${API_BASE_URL}/rdss/${this.props.match.params.id}`)).json();\r\n      rds.touched = {\r\n        name: false,\r\n        vpcId: false,\r\n        subnetgroupId: false,\r\n        accountId: false,\r\n        sgId: false,\r\n        instanceTypeId: false,\r\n        azId: false,\r\n        env: false, type: false, dbEngineVesion: false,  storageType: false,  dbInstanceIdentifier: false,\r\n        masterUserName: false, masterPassword: false, masterConfirmPassword: false,\r\n        alocatedStorage: false, provisionedIops: false,\r\n      };\r\n      this.setState({item: rds});\r\n      \r\n      await fetch(API_BASE_URL + '/vpcs/' + (rds.vpc.id) + '/type/RDS' + '/subnetGroups',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetgroups = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n\r\n      await fetch(API_BASE_URL + '/accounts/' + (rds.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      \r\n      \r\n      await fetch(API_BASE_URL + '/vpcs/' + (rds.vpc.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n\r\n\r\n      let item = {...this.state.item};\r\n      item.instanceTypeId = rds.instanceType.id;\r\n      item.accountId = rds.account.id;\r\n      item.vpcId = rds.vpc.id;\r\n      item.subnetgroupId = rds.subnetgroup.id;\r\n      item.azId = rds.az.id;\r\n\r\n      var vals = [];\r\n      var sg = rds.subnetgroup.subnets;\r\n      sg.map(s => { \r\n        vals.push(s.az);\r\n      });\r\n      item.azs = vals;\r\n\r\n      var values = [];\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.sgs = values;\r\n\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const rds = {\r\n        name: '',\r\n        text: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        subnetgroup: {},\r\n        subnetgroups: {},\r\n        subnetgroupId : '',\r\n        sgss: {},\r\n        sgs: [],\r\n        sgId: [],\r\n        instanceType: '', \r\n        az:'',\r\n        multiAz: true,\r\n        env:'', \r\n        type:'', \r\n        dbEngineVesion:'',  \r\n        storageType:'',  \r\n        dbInstanceIdentifier:'',\r\n        masterUserName:'', \r\n        masterPassword:'', \r\n        masterConfirmPassword:'',\r\n        alocatedStorage:'', \r\n        provisionedIops:'',\r\n        touched: {\r\n          name: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          accountId: false,\r\n          sgId: false,\r\n          instanceTypeId: false,\r\n          azId: false,\r\n          env: false, type: false, dbEngineVesion: false,  storageType: false,  dbInstanceIdentifier: false,\r\n          masterUserName: false, masterPassword: false, masterConfirmPassword: false,\r\n          alocatedStorage: false, provisionedIops: false,\r\n        }\r\n      };\r\n      rds.touched = {\r\n          name: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          accountId: false,\r\n          sgId: false,\r\n          instanceTypeId: false,\r\n          azId: false,\r\n          env: false, type: false, dbEngineVesion: false,  storageType: false,  dbInstanceIdentifier: false,\r\n          masterUserName: false, masterPassword: false, masterConfirmPassword: false,\r\n          alocatedStorage: false, provisionedIops: false,\r\n      };\r\n      this.setState({item: rds});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    await fetch(API_BASE_URL + '/instanceTypes',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.instanceTypes = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      item.subnetgroupId = '';\r\n      item.subnetgroups = [];\r\n      item.sgId = '';\r\n      item.sgs = [];\r\n      item.sgss = [];\r\n      item.azId = '';\r\n      item.azs = [];\r\n    }\r\n\r\n    if(name === 'vpcId')\r\n    {\r\n      \r\n      fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/type/RDS' + '/subnetGroups',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        item.subnetgroups = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/sgs',)\r\n      .then((result) => { \r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        item.sgss = jsonResult;\r\n        this.setState({item: item});\r\n      }); \r\n    }\r\n\r\n    if(name === 'subnetgroupId')\r\n    {\r\n      fetch(API_BASE_URL + '/subnetGroups/' + item.subnetgroupId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        \r\n        var vals = [];\r\n        var sg = jsonResult.subnets;\r\n        sg.map(s => { \r\n          vals.push(s.az);\r\n        });\r\n        item.azs = vals;\r\n        this.setState({item: item});\r\n      });\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          vpcId: true,\r\n          subnetgroupId: true,\r\n          accountId: false,\r\n          sgId: true,\r\n          instanceTypeId: true,\r\n          azId: true,\r\n          env: true, type: true, dbEngineVesion: true,  storageType: true,  dbInstanceIdentifier: true,\r\n          masterUserName: true, masterPassword: true, masterConfirmPassword: true,\r\n          alocatedStorage: true, provisionedIops: true,\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.accountId, item.sgId, item.instanceTypeId, item.azId,\r\n          item.env, item.type, item.dbEngineVesion,  item.storageType,  item.dbInstanceIdentifier,\r\n          item.masterUserName, item.masterPassword, item.masterConfirmPassword,\r\n          item.alocatedStorage, item.provisionedIops);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/rdss'; \r\n\r\n    item.account={id: item.accountId};\r\n    item.vpc={id: item.vpcId};\r\n    item.subnetgroup={id: item.subnetgroupId};\r\n    item.az={id: item.azId};\r\n    item.instanceType = {id: item.instanceTypeId};\r\n\r\n    var values = [];\r\n    if(item.sgs && item.sgs.length){\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.sg= values;\r\n    }\r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/rdss/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/rdss', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetgroupId, accountId, sgId, instanceTypeId, azId, env, type, dbEngineVesion, storageType,  dbInstanceIdentifier,\r\n          masterUserName, masterPassword, masterConfirmPassword,\r\n          alocatedStorage, provisionedIops) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      vpcId: '',\r\n      subnetgroupId: '',\r\n      accountId: '',\r\n      sgId: '',\r\n      instanceTypeId: '',\r\n      azId: '',\r\n      env: '', type: '', dbEngineVesion: '', storageType: '',  dbInstanceIdentifier: '',\r\n      masterUserName: '', masterPassword: '', masterConfirmPassword: '',\r\n      alocatedStorage: '', provisionedIops: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.subnetgroupId && subnetgroupId.length === 0){\r\n      errors.azId = 'azId should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.azId &&azId.length === 0){\r\n      errors.subnetgroupId = 'Subnet group should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.sgId && this.state.item.sgs.length <= 0){\r\n      errors.sgId = 'sgId should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.instanceTypeId && instanceTypeId.length === 0){\r\n      errors.instanceTypeId = 'instanceTypeId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.env && env.length === 0){\r\n      errors.env = 'env should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'type should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.dbEngineVesion && dbEngineVesion.length === 0){\r\n      errors.dbEngineVesion = 'dbEngineVesion should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.storageType && storageType.length === 0){\r\n      errors.storageType = 'storageType should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.dbInstanceIdentifier && dbInstanceIdentifier.length === 0){\r\n      errors.dbInstanceIdentifier = 'dbInstanceIdentifier should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.masterUserName && masterUserName.length === 0){\r\n      errors.masterUserName = 'masterUserName should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.masterPassword && masterPassword.length === 0){\r\n      errors.masterPassword = 'masterPassword should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.masterConfirmPassword && masterConfirmPassword.length === 0){\r\n      errors.masterConfirmPassword = 'masterConfirmPassword should not be null';\r\n      return errors;\r\n    }\r\n    /*if(this.state.item.touched.alocatedStorage && alocatedStorage.length === 0){\r\n      errors.alocatedStorage = 'alocatedStorage should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.provisionedIops && provisionedIops.length === 0){\r\n      errors.provisionedIops = 'provisionedIops should not be null';\r\n      return errors;\r\n    }*/\r\n    return errors;\r\n  }\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'sgId')\r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.sgss && item.sgss.length){\r\n              item.sgss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.sgs = values;\r\n      }\r\n      this.setState({item});\r\n  };\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit rds' : 'Add rds'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.accountId, item.instanceTypeId, item.azId, item.env, item.type, item.dbEngineVesion,  item.storageType,  item.dbInstanceIdentifier,\r\n          item.masterUserName, item.masterPassword, item.masterConfirmPassword,\r\n          item.alocatedStorage, item.provisionedIops);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/rdss\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let tri = item.vpcId || '';\r\n    item.vpcId = tri;\r\n\r\n\r\n    let optss = [];\r\n    if(item.subnetgroups && item.subnetgroups.length){\r\n      item.subnetgroups.map(s => {  \r\n          optss.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let sg = item.subnetgroupId || '';\r\n    item.subnetgroupId = sg;\r\n\r\n\r\n\r\n    let optsg = [];  \r\n    let optsgs = [];\r\n    if(item.sgss && item.sgss.length){\r\n      item.sgss.map(s => {  \r\n          if(item.sgs && item.sgs.length) item.sgs.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsgs.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsg.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n    const securityGroup = <FormGroup>\r\n            <Label for=\"sgId\">Security Group (*)</Label>\r\n            <Select name=\"sgId\" id=\"sgId\"  placeholder=\"Enter Security group\" isMulti isSearchable\r\n              value={optsgs}\r\n              onChange={e => this.onOptionChange(\"sgId\",e)}\r\n              onBlur={this.handleBlur('sgId')}\r\n              options={optsg}\r\n            />\r\n            <FormFeedback>{errors.sgId}</FormFeedback>\r\n          </FormGroup>;\r\n\r\n    let optInstanceTypes = [];\r\n    if(item.instanceTypes && item.instanceTypes.length){\r\n      item.instanceTypes.map(s => {  \r\n          optInstanceTypes.push(<option key={s.id} value={s.id}>{s.id} {s.type}</option>);\r\n      });\r\n    }\r\n    let instanceType = item.instanceTypeId || '';\r\n    item.instanceTypeId = instanceType;\r\n\r\n    let optAzs = [];\r\n    if(item.azs && item.azs.length){\r\n      item.azs.map(s => {  \r\n          optAzs.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let az = item.azId || '';\r\n    item.azId = az;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         <FormGroup>\r\n            <Label for=\"subnetgroupId\">Subnet group (*)</Label>\r\n            <Input type=\"select\" name=\"subnetgroupId\" id=\"subnetgroupId\"  value={sg} onChange={this.handleChange} onBlur={this.handleBlur('subnetgroupId')}\r\n                 valid={errors.subnetgroupId === ''}\r\n                 invalid={errors.subnetgroupId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optss}\r\n            </Input>\r\n            <FormFeedback>{errors.subnetgroupId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n           <FormGroup > \r\n            <Label for=\"\">multiAz:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"multiAz\" id=\"multiAz\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('multiAz')} \r\n                    checked={item.multiAz === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"azId\">Az (*)</Label>\r\n            <Input type=\"select\" name=\"azId\" id=\"azId\" value={item.azId || ''} placeholder=\"Enter azId\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('azId')} autoComplete=\"azId\"\r\n                   valid={errors.azId === ''}\r\n                   invalid={errors.azId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optAzs}\r\n            </Input>\r\n           <FormFeedback>{errors.azId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {securityGroup}\r\n\r\n          <FormGroup>\r\n            <Label for=\"instanceTypeId\">Instance Type (*)</Label>\r\n            <Input type=\"select\" name=\"instanceTypeId\" id=\"instanceTypeId\" value={item.instanceTypeId || ''} placeholder=\"Enter instanceType\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('instanceTypeId')} autoComplete=\"instanceTypeId\"\r\n                   valid={errors.instanceTypeId === ''}\r\n                   invalid={errors.instanceTypeId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optInstanceTypes}\r\n            </Input>\r\n           <FormFeedback>{errors.instanceTypeId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"env\">Env (*)</Label>\r\n            <Input type=\"text\" name=\"env\" id=\"env\" value={item.env || ''} placeholder=\"Enter env\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('env')} autoComplete=\"env\"\r\n                   valid={errors.env === ''}\r\n                   invalid={errors.env !== ''}\r\n            />\r\n           <FormFeedback>{errors.env}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"type\">Type (*)</Label>\r\n            <Input type=\"text\" name=\"type\" id=\"type\" value={item.type || ''} placeholder=\"Enter type\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                   valid={errors.type === ''}\r\n                   invalid={errors.type !== ''}\r\n            />\r\n           <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"dbEngineVesion\">DbEngine Vesion (*)</Label>\r\n            <Input type=\"text\" name=\"dbEngineVesion\" id=\"dbEngineVesion\" value={item.dbEngineVesion || ''} placeholder=\"Enter dbEngineVesion\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('dbEngineVesion')} autoComplete=\"dbEngineVesion\"\r\n                   valid={errors.dbEngineVesion === ''}\r\n                   invalid={errors.dbEngineVesion !== ''}\r\n            />\r\n           <FormFeedback>{errors.dbEngineVesion}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"storageType\">Storage Type (*)</Label>\r\n            <Input type=\"text\" name=\"storageType\" id=\"storageType\" value={item.storageType || ''} placeholder=\"Enter storageType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('storageType')} autoComplete=\"storageType\"\r\n                   valid={errors.storageType === ''}\r\n                   invalid={errors.storageType !== ''}\r\n            />\r\n           <FormFeedback>{errors.storageType}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"dbInstanceIdentifier\">DbInstance Identifier (*)</Label>\r\n            <Input type=\"text\" name=\"dbInstanceIdentifier\" id=\"dbInstanceIdentifier\" value={item.dbInstanceIdentifier || ''} placeholder=\"Enter dbInstanceIdentifier\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('dbInstanceIdentifier')} autoComplete=\"dbInstanceIdentifier\"\r\n                   valid={errors.dbInstanceIdentifier === ''}\r\n                   invalid={errors.dbInstanceIdentifier !== ''}\r\n            />\r\n           <FormFeedback>{errors.dbInstanceIdentifier}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"masterUserName\">Master User Name (*)</Label>\r\n            <Input type=\"text\" name=\"masterUserName\" id=\"masterUserName\" value={item.masterUserName || ''} placeholder=\"Enter masterUserName\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('masterUserName')} autoComplete=\"masterUserName\"\r\n                   valid={errors.masterUserName === ''}\r\n                   invalid={errors.masterUserName !== ''}\r\n            />\r\n           <FormFeedback>{errors.masterUserName}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"masterPassword\">Master Password (*)</Label>\r\n            <Input type=\"text\" name=\"masterPassword\" id=\"masterPassword\" value={item.masterPassword || ''} placeholder=\"Enter masterPassword\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('masterPassword')} autoComplete=\"masterPassword\"\r\n                   valid={errors.masterPassword === ''}\r\n                   invalid={errors.masterPassword !== ''}\r\n            />\r\n           <FormFeedback>{errors.masterPassword}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"masterConfirmPassword\">Master Confirm Password (*)</Label>\r\n            <Input type=\"text\" name=\"masterConfirmPassword\" id=\"masterConfirmPassword\" value={item.masterConfirmPassword || ''} placeholder=\"Enter masterConfirmPassword\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('masterConfirmPassword')} autoComplete=\"masterConfirmPassword\"\r\n                   valid={errors.masterConfirmPassword === ''}\r\n                   invalid={errors.masterConfirmPassword !== ''}\r\n            />\r\n           <FormFeedback>{errors.masterConfirmPassword}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"alocatedStorage\">Alocated Storage (*)</Label>\r\n            <Input type=\"number\" name=\"alocatedStorage\" id=\"alocatedStorage\" value={item.alocatedStorage || ''} placeholder=\"Enter alocatedStorage\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('alocatedStorage')} autoComplete=\"alocatedStorage\"\r\n                   valid={errors.alocatedStorage === ''}\r\n                   invalid={errors.alocatedStorage !== ''}\r\n            />\r\n           <FormFeedback>{errors.alocatedStorage}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"provisionedIops\">Provisioned Iops (*)</Label>\r\n            <Input type=\"number\" name=\"provisionedIops\" id=\"provisionedIops\" value={item.provisionedIops || ''} placeholder=\"Enter provisionedIops\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('provisionedIops')} autoComplete=\"provisionedIops\"\r\n                   valid={errors.provisionedIops === ''}\r\n                   invalid={errors.provisionedIops !== ''}\r\n            />\r\n           <FormFeedback>{errors.provisionedIops}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n          \r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(RdsEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass EfsList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {efss: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/efss`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({efss: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/efss/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateEfs = [...this.state.efss].filter(i => i.id !== id);\r\n      this.setState({efss: updateEfs});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {efss, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const efsList = efss.map(efs => {\r\n      \r\n      const link = API_BASE_URL + \"/vpcs/\" + efs.vpc.id; \r\n      const linkAccount = API_BASE_URL + \"/accounts/\" + efs.account.id; \r\n      \r\n      const sg = API_BASE_URL + \"/subnetgroups/\" + efs.subnetgroup.id;\r\n      const encryption = (efs.encryption) ? 'Yes' : 'No';\r\n      const kms = (efs.kms) ? efs.kms.id : '-';\r\n      const encryptionType = (efs.encryption) ? efs.encryptionType : '-';\r\n      const provisionedIo = (efs.throughputMode === 'Provisioned') ? efs.provisionedIo : '-';\r\n\r\n      return <tr key={efs.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{efs.id}</td>\r\n\r\n  \r\n\r\n        <td>{efs.name}</td>\r\n        <td><a href={linkAccount}>{efs.account.numAccount}</a></td>\r\n        <td>{efs.performanceMode}</td>\r\n        <td>{efs.throughputMode}</td>\r\n        <td>{provisionedIo}</td>\r\n        <td>{encryption}</td>\r\n        <td>{encryptionType}</td>\r\n        <td>{kms}</td>\r\n        <td>{efs.kmsExterne}</td>\r\n\r\n\r\n        <td>{efs.text}</td>\r\n        <td><a href={link}>{efs.vpc.name}</a></td>\r\n        <td><a href={sg}>{efs.subnetgroup.name}</a></td>\r\n    \r\n\r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/efs/\" + efs.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/efss/\" + efs.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(efs.vpc.id, efs.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/efss/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Efs</Button>\r\n          </div>\r\n          \r\n          <h3>Efs</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Performance Mode</th>\r\n              <th width=\"5%\">Throughput Mode</th>\r\n              <th width=\"5%\">Provisioned IO</th>\r\n              <th width=\"5%\">Encryption</th>\r\n              <th width=\"5%\">Encryption Type</th>\r\n              <th width=\"5%\">Kms</th>\r\n              <th width=\"5%\">Kms Externe</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Subnet Group</th>\r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {efsList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EfsList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass EfsEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    text: '',\r\n    vpc: {},\r\n    vpcs: {},\r\n    vpcId : '',\r\n    subnetgroup: {},\r\n    subnetgroups: {},\r\n    subnetgroupId : '',\r\n    performanceMode: 'Default', \r\n    throughputMode: 'Bursting', \r\n    provisionedIo: 0, \r\n    encryption: false,\r\n    encryptionType: 'Kms', \r\n    kmsId:'',\r\n    kms: {},\r\n    kmss: [],\r\n    kmsExterne: '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      subnetgroupId: false,\r\n      performanceMode: false, \r\n      throughputMode: false, \r\n      provisionedIo: false, \r\n      kmsId: false,\r\n      kmsExterne: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const efs = await (await fetch(`${API_BASE_URL}/efss/${this.props.match.params.id}`)).json();\r\n      efs.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        subnetgroupId: false,\r\n        performanceMode: false, \r\n        throughputMode: false, \r\n        provisionedIo: false, \r\n        kmsId: false,\r\n        kmsExterne: false\r\n      };\r\n      this.setState({item: efs});\r\n      \r\n      await fetch(API_BASE_URL + '/accounts/' + (efs.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await fetch(API_BASE_URL + '/vpcs/' + (efs.vpc.id) + '/type/EFS' +'/subnetGroups',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetgroups = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n\r\n      let item = {...this.state.item};\r\n      item.vpcId = efs.vpc.id;\r\n      item.accountId = efs.account.id;\r\n      item.subnetgroupId = efs.subnetgroup.id;\r\n      if(efs.kms) item.kmsId = efs.kms.id;\r\n\r\n      fetch(API_BASE_URL + '/accounts/' + (efs.vpc.account.id) + '/kmss',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.kmss = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const efs = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        text: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        subnetgroup: {},\r\n        subnetgroups: {},\r\n        subnetgroupId : '',\r\n        performanceMode: 'Default', \r\n        throughputMode: 'Bursting', \r\n        provisionedIo: 0, \r\n        encryption: false, \r\n        encryptionType: 'Kms',\r\n        kmsId:'',\r\n        kms: {},\r\n        kmss: [],\r\n        kmsExterne: '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          performanceMode: false, \r\n          throughputMode: false, \r\n          provisionedIo: false, \r\n          kmsId: false,\r\n          kmsExterne: false\r\n        }\r\n      };\r\n      efs.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          performanceMode: false, \r\n          throughputMode: false, \r\n          provisionedIo: false, \r\n          kmsId: false,\r\n          kmsExterne: false\r\n      };\r\n      this.setState({item: efs});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'encryption')\r\n    {\r\n      item.encryption = (target.checked) ? true: false;\r\n    }\r\n\r\n    if(name === 'performanceMode')\r\n    {\r\n      if(value === 'Default'){\r\n        item.performanceMode = 'Default';\r\n      }\r\n      else\r\n      {\r\n        item.performanceMode = 'MaxIo';\r\n      }\r\n    }\r\n    if(name === 'throughputMode')\r\n    {\r\n      if(value === 'Bursting'){\r\n        item.throughputMode = 'Bursting';\r\n      }\r\n      else\r\n      {\r\n        item.throughputMode = 'Provisioned';\r\n      }\r\n    }\r\n    if(name === 'encryptionType')\r\n    {\r\n      if(value === 'Kms'){\r\n        item.encryptionType = 'Kms';\r\n      }\r\n      else\r\n      {\r\n        item.encryptionType = 'KmsExterne';\r\n      }\r\n    }\r\n    \r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      \r\n      item.kmsId = '';\r\n      item.kms = {};\r\n      item.kmsss = [];\r\n\r\n      item.subnetgroupId = '';\r\n      item.subnetgroup = {};\r\n      item.subnetgroups = [];\r\n    \r\n    }\r\n\r\n    if(name === 'vpcId')\r\n    {\r\n      \r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/type/EFS' +'/subnetGroups',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.subnetgroups = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/kmss',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.kmss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true,\r\n      accountId: true,\r\n      vpcId: true,\r\n      subnetgroupId: true,\r\n      performanceMode: true, \r\n      throughputMode: true, \r\n      provisionedIo: true, \r\n      kmsId: true,\r\n      kmsExterne: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.performanceMode, item.throughputMode, item.provisionedIo, item.kmsId, item.kmsExterne, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/efss'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    item.subnetgroup={id: item.subnetgroupId};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    if(item.throughputMode === 'Bursting') item.provisionedIo = 0;\r\n    \r\n    if(item.encryption)\r\n    {\r\n      if(item.encryptionType === 'KmsExterne')\r\n      {\r\n        item.kms = null;\r\n      }\r\n      else\r\n      {\r\n        item.kmsExterne = '';\r\n        item.kms = {id: item.kmsId};\r\n      }\r\n    }\r\n    else\r\n    {\r\n      item.kms = null;\r\n      item.kmsExterne = '';\r\n    }\r\n\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/efss/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/efss', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetgroupId, performanceMode, throughputMode, provisionedIo, kmsId, kmsExterne, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      subnetgroupId: '',\r\n      performanceMode: '', \r\n      throughputMode: '', \r\n      provisionedIo: '', \r\n      kmsId: '',\r\n      kmsExterne: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.subnetgroupId && subnetgroupId.length === 0){\r\n      errors.subnetgroupId = 'Subnet group should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.performanceMode && performanceMode.length === 0){\r\n      errors.performanceMode = 'performanceMode should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.throughputMode && throughputMode.length === 0){\r\n      errors.throughputMode = 'throughputMode should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.throughputMode === 'Provisioned' && this.state.item.touched.provisionedIo && (provisionedIo <= 0 || provisionedIo > 1024)){\r\n      errors.provisionedIo = 'Valid range is 1-1024 MiB/s';\r\n      return errors;\r\n    }\r\n    \r\n    else if(this.state.item.encryption && this.state.item.encryptionType === 'Kms' && this.state.item.touched.kmsId && kmsId.length === 0){\r\n      errors.kmsId = 'kmsId should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    else if(this.state.item.encryption && this.state.item.encryptionType === 'KmsExterne' && this.state.item.touched.kmsExterne && kmsExterne.length === 0){\r\n      errors.kmsExterne = 'kmsExterne should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit efs' : 'Add efs'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.performanceMode, item.throughputMode, item.provisionedIo, item.kmsId, item.kmsExterne, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/efss\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let tri = item.vpcId || '';\r\n    item.vpcId = tri;\r\n\r\n\r\n    let optss = [];\r\n    if(item.subnetgroups && item.subnetgroups.length){\r\n      item.subnetgroups.map(s => {  \r\n          optss.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let sg = item.subnetgroupId || '';\r\n    item.subnetgroupId = sg;\r\n\r\n    let provisionedIo = (item.throughputMode === 'Provisioned') ? <FormGroup>\r\n            <Label for=\"provisionedIo\">Provisioned Io (*)</Label>\r\n            <Input type=\"number\" name=\"provisionedIo\" id=\"provisionedIo\" value={item.provisionedIo || ''} placeholder=\"Enter provisionedIo\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('provisionedIo')} autoComplete=\"provisionedIo\"\r\n                   valid={errors.provisionedIo === ''}\r\n                   invalid={errors.provisionedIo !== ''}\r\n            />\r\n           <FormFeedback>{errors.provisionedIo}</FormFeedback>\r\n           <FormText>Valid range is 1-1024 MiB/s</FormText>\r\n          </FormGroup> : '';\r\n\r\n    let encryptionType = (item.encryption) ? <FormGroup tag=\"fieldset\">\r\n            <Label for=\"performanceMode\"></Label>\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"encryptionType\" id=\"encryptionType\" value=\"Kms\" checked={item.encryptionType === 'Kms'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('encryptionType')} autoComplete=\"encryptionType\"\r\n                       valid={errors.encryptionType === ''}\r\n                       invalid={errors.encryptionType !== ''}\r\n                />{' '}\r\n                Select KMS master key\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"encryptionType\" id=\"encryptionType\" value=\"KmsExterne\" checked={item.encryptionType === 'KmsExterne'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('encryptionType')} autoComplete=\"encryptionType\"\r\n                       valid={errors.encryptionType === ''}\r\n                       invalid={errors.encryptionType !== ''}\r\n                />{' '}\r\n                 Enter a KMS key ARN from another account\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.encryptionType}</FormFeedback>\r\n          </FormGroup> : '' ;\r\n\r\n    let kmsExterne = (item.encryption && item.encryptionType === 'KmsExterne') ? <FormGroup>\r\n            <Label for=\"name\">ARN/ID (*)</Label>\r\n            <Input type=\"text\" name=\"kmsExterne\" id=\"kmsExterne\" value={item.kmsExterne || ''} placeholder=\"Enter kmsExterne\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('kmsExterne')} autoComplete=\"kmsExterne\"\r\n                   valid={errors.kmsExterne === ''}\r\n                   invalid={errors.kmsExterne !== ''}\r\n            />\r\n           <FormFeedback>{errors.kmsExterne}</FormFeedback>\r\n          </FormGroup> : '' ;\r\n\r\n    let optks = [];\r\n    if(item.kmss && item.kmss.length){\r\n      item.kmss.map(r => {  \r\n          optks.push(<option value={r.id}>{r.id} {r.alias}</option>);\r\n      });\r\n    }\r\n    let kms = item.kmsId || '';\r\n    item.kmsId = kms;\r\n\r\n    let kmss = (item.encryption && item.encryptionType === 'Kms') ? <FormGroup>\r\n            <Label for=\"kmsId\">Kms (*)</Label>\r\n            <Input type=\"select\" name=\"kmsId\" id=\"kmsId\"  value={kms} onChange={this.handleChange} onBlur={this.handleBlur('kmsId')}\r\n                 valid={errors.kmsId === ''}\r\n                 invalid={errors.kmsId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optks}\r\n            </Input>\r\n            <FormFeedback>{errors.kmsId}</FormFeedback>\r\n          </FormGroup> : '';\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         <FormGroup>\r\n            <Label for=\"subnetgroupId\">Subnet group (*)</Label>\r\n            <Input type=\"select\" name=\"subnetgroupId\" id=\"subnetgroupId\"  value={sg} onChange={this.handleChange} onBlur={this.handleBlur('subnetgroupId')}\r\n                 valid={errors.subnetgroupId === ''}\r\n                 invalid={errors.subnetgroupId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optss}\r\n            </Input>\r\n            <FormFeedback>{errors.subnetgroupId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup tag=\"fieldset\">\r\n            <Label for=\"performanceMode\">Performance Mode(*)  </Label>\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"performanceMode\" id=\"performanceMode\" value=\"Default\" checked={item.performanceMode === 'Default'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('performanceMode')} autoComplete=\"performanceMode\"\r\n                       valid={errors.performanceMode === ''}\r\n                       invalid={errors.performanceMode !== ''}\r\n                />{' '}\r\n                General Purpose\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"performanceMode\" id=\"performanceMode\" value=\"MaxIo\" checked={item.performanceMode === 'MaxIo'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('performanceMode')} autoComplete=\"performanceMode\"\r\n                       valid={errors.performanceMode === ''}\r\n                       invalid={errors.performanceMode !== ''}\r\n                />{' '}\r\n                 Max I/O\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.performanceMode}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n\r\n          <FormGroup tag=\"fieldset\">\r\n            <Label for=\"throughputMode\">Throughput Mode(*)  </Label> \r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"throughputMode\" id=\"throughputMode\" value=\"Bursting\" checked={item.throughputMode === 'Bursting'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('throughputMode')} autoComplete=\"throughputMode\"\r\n                       valid={errors.throughputMode === ''}\r\n                       invalid={errors.throughputMode !== ''}\r\n                />{' '}\r\n                Bursting\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"throughputMode\" id=\"throughputMode\" value=\"Provisioned\" checked={item.throughputMode === 'Provisioned'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('throughputMode')} autoComplete=\"throughputMode\"\r\n                       valid={errors.throughputMode === ''}\r\n                       invalid={errors.throughputMode !== ''}\r\n                />{' '}\r\n                 Provisioned\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.throughputMode}</FormFeedback>\r\n          </FormGroup>\r\n          {provisionedIo}\r\n\r\n          <FormGroup > \r\n            <Label for=\"encryption\">Enable encryption of data at rest:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"encryption\" id=\"encryption\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('encryption')} \r\n                    checked={item.encryption === true}/>\r\n          </FormGroup>\r\n\r\n          {encryptionType}\r\n          {kmss}\r\n          {kmsExterne}\r\n\r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(EfsEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagEfsList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/efss/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data =>   this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/efss/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTagEfs = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTagEfs});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/efss/\" + tag.efs.id; \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.efs.id}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/efs/\" + tag.efs.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.efs.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `/efs/${this.props.match.params.id}/tags/new`;\r\n    const efs = `/efss`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={efs}>Efs</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Tag</Button>\r\n          </div>\r\n          \r\n          <h3>TagEfs</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Efs</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagEfsList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\n\r\nclass TagEfsEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    efs: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const efs = await (await fetch(`${API_BASE_URL}/efss/${this.props.match.params.ide}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        efs: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.efs = efs;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/efs/' + item.efs.id +'/tags'; \r\n\r\n    item.efs={id: item.efs.id};\r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/efss/' + (item.efs.id) + '/tags/'+(item.id) : API_BASE_URL + '/efss/' + item.efs.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/efs/\" + item.efs.id + \"/tags\";\r\n\r\n    let efs = null;\r\n    efs = <FormGroup>\r\n            <Label for=\"efsId\">Efs: {item.efs.name}</Label>\r\n            <Input type=\"text\" name=\"efsId\" id=\"efsId\" value={item.efs.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {efs}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagEfsEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass ElasticSearchList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {elasticSearchs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/elasticSearchs`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({elasticSearchs: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/elasticSearchs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateElasticSearch = [...this.state.elasticSearchs].filter(i => i.id !== id);\r\n      this.setState({elasticSearchs: updateElasticSearch});\r\n    });\r\n  }\r\n\r\n  async remove2(id) {\r\n    await fetch(`${API_BASE_URL}/elasticSearch/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateElasticSearch = [...this.state.elasticSearchs].filter(i => i.id !== id);\r\n      this.setState({elasticSearchs: updateElasticSearch});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {elasticSearchs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const elasticSearchList = elasticSearchs.map(elasticSearch => {\r\n      \r\n      const link = (elasticSearch.vpc) ? API_BASE_URL + \"/vpcs/\" + elasticSearch.vpc.id : ''; \r\n      const linkAccount = API_BASE_URL + \"/accounts/\" + elasticSearch.account.id; \r\n      \r\n      const sg = (elasticSearch.subnetgroup) ? API_BASE_URL + \"/subnetgroups/\" + elasticSearch.subnetgroup.id : '';\r\n      const sgName = (elasticSearch.subnetgroup) ? elasticSearch.subnetgroup.name : '';\r\n\r\n      const vpc = (elasticSearch.vpc) ? <a href={link}>{elasticSearch.vpc.name}</a> : '';\r\n\r\n      const del = (elasticSearch.vpc) ? <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(elasticSearch.vpc.id, elasticSearch.id)}>Delete</Button>:\r\n                                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove2(elasticSearch.id)}>Delete</Button>\r\n      \r\n\r\n      const isPrivate = (elasticSearch.prive)? 'Privtae VPC':'Public';\r\n\r\n      const enableDedicatedMaster = (elasticSearch.enableDedicatedMaster) ? 'Yes': 'No';\r\n      const enableZoneAwareness = (elasticSearch.enableZoneAwareness) ? 'Yes': 'No';\r\n      const enableEncrypt = (elasticSearch.enableEncrypt) ? 'Yes': 'No';\r\n      const nodeToNodeEncryption = (elasticSearch.nodeToNodeEncryption) ? 'Yes': 'No';\r\n      \r\n      //nodes\r\n      let nodeInstance = {\"id\": \"\", \"instanceType\": \"\"};\r\n      let nodeMaster = {\"id\": \"\", \"instanceType\": \"\"};\r\n      //console.log(\"-------------------\");\r\n      if(elasticSearch.nodes && elasticSearch.nodes.length){\r\n        elasticSearch.nodes.map(node => { \r\n           if(node.type === 'instance')  \r\n           {\r\n              nodeInstance.instanceCount = node.instanceCount;\r\n              nodeInstance.instanceType = node.instanceType.id;\r\n           }\r\n           else if(node.type === 'master') \r\n           {\r\n              nodeMaster.instanceCount = node.instanceCount;\r\n              nodeMaster.instanceType = node.instanceType.id;\r\n\r\n            }\r\n           \r\n           //console.log(\"node.id=\" + node.id + \"   \" + elasticSearch.name);\r\n        });\r\n      }\r\n       \r\n      const allowExplicitIndex = (elasticSearch.allowExplicitIndex) ? 'Yes': 'No';\r\n      return <tr key={elasticSearch.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{elasticSearch.id}</td>\r\n\r\n\r\n        <td>{elasticSearch.name}</td>\r\n        <td><a href={linkAccount}>{elasticSearch.account.numAccount}</a></td>\r\n        <td>{isPrivate}</td>\r\n        <td>{elasticSearch.text}</td>\r\n        <td>{vpc}</td>\r\n        <td><a href={sg}>{sgName}</a></td>\r\n        <td>{elasticSearch.domainName}</td>\r\n        <td>{elasticSearch.version}</td>\r\n        <td>{nodeInstance.instanceCount}</td>\r\n        <td>{nodeInstance.instanceType}</td>\r\n        <td>{enableDedicatedMaster}</td>\r\n        <td>{nodeMaster.instanceCount}</td>\r\n        <td>{nodeMaster.instanceType}</td>\r\n        <td>{enableZoneAwareness}</td>\r\n        <td>{elasticSearch.storageType}</td>\r\n        <td>{elasticSearch.volumeType}</td>\r\n        <td>{elasticSearch.volumeSize}</td>\r\n        <td>{elasticSearch.provisionedIops}</td>\r\n        <td>{enableEncrypt}</td>\r\n        <td>{elasticSearch.snapshotConfiguration} UTC</td>\r\n        <td>{allowExplicitIndex}</td>\r\n        <td>{elasticSearch.cacheSize}</td>\r\n        <td>{elasticSearch.maxClauseCount}</td>\r\n        <td>{nodeToNodeEncryption}</td>\r\n        <td>{elasticSearch.accessPolicy}</td>\r\n   \r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/elasticSearchs/\" + elasticSearch.id}>Edit</Button>\r\n            {del}\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/elasticSearchs/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add ElasticSearch</Button>\r\n          </div>\r\n          \r\n          <h3>ElasticSearch</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Private Vpc/ Public</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Subnet Group</th>\r\n              <th width=\"5%\">Domain Name</th>\r\n              <th width=\"5%\">Version</th>\r\n              <th width=\"5%\">Instance Count</th>\r\n              <th width=\"5%\">Instance Type</th>\r\n              <th width=\"5%\">Enable Dedicated Master</th>\r\n              <th width=\"5%\">Dedicated Master InstanceType</th>\r\n              <th width=\"5%\">Dedicated Master InstanceCount</th>\r\n              <th width=\"5%\">Enable Zone Awareness</th>\r\n              <th width=\"5%\">StorageType</th>\r\n              <th width=\"5%\">VolumeType</th>\r\n              <th width=\"5%\">VolumeSize</th>\r\n              <th width=\"5%\">Provisioned Iops</th>\r\n              <th width=\"5%\">Enable Encrypt</th>\r\n              <th width=\"5%\">SnapshotConfiguration (UTC)</th>\r\n              <th width=\"5%\">rest.action.multi.allow_explicit_index</th>\r\n              <th width=\"5%\">indices.fielddata.cache.size</th>\r\n              <th width=\"5%\">indices.query.bool.max_clause_count</th>\r\n              <th width=\"5%\">NodeToNodeEncryption</th>\r\n              <th width=\"5%\">Access Policy</th>\r\n\r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {elasticSearchList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ElasticSearchList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText, Col } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass ElasticSearchEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    text: '',\r\n    vpc: {},\r\n    vpcs: {},\r\n    vpcId : '',\r\n    subnetgroup: {},\r\n    subnetgroups: {},\r\n    subnetgroupId : '',\r\n    prive: true,\r\n    domainName: '', \r\n    version: '', \r\n    instanceCount: '', \r\n    instanceTypes: {},\r\n    nodeInstance: {},\r\n    nodeMaster: {}, \r\n    nodeInstanceId: '',\r\n    nodeMasterId: '',\r\n    enableDedicatedMaster: false, \r\n    dedicatedMasterInstanceCount: '', \r\n    enableZoneAwareness: false, \r\n    storageType: '', \r\n    volumeType: '', \r\n    volumeSize: '', \r\n    enableEncrypt: false, \r\n    snapshotConfiguration: '', \r\n    nodeToNodeEncryption: false,\r\n    provisionedIops: '',\r\n    allowExplicitIndex: true,\r\n    cacheSize:'', \r\n    maxClauseCount:'',\r\n    accessPolicy:'',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      subnetgroupId: false,\r\n      domainName: false, \r\n      version: false,\r\n      instanceCount: false, \r\n      dedicatedMasterInstanceCount: false,\r\n      storageType: false,\r\n      volumeType: false,\r\n      volumeSize: false,\r\n      snapshotConfiguration: false,\r\n      nodeInstanceId: false,\r\n      nodeMasterId: false,\r\n      provisionedIops: false,\r\n      accessPolicy: false,\r\n      enableZoneAwareness: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const elasticSearch = await (await fetch(`${API_BASE_URL}/elasticSearchs/${this.props.match.params.id}`)).json();\r\n      elasticSearch.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        subnetgroupId: false,\r\n        domainName: false, \r\n        version: false,\r\n        instanceCount: false, \r\n        dedicatedMasterInstanceCount: false,\r\n        storageType: false,\r\n        volumeType: false,\r\n        volumeSize: false,\r\n        snapshotConfiguration: false,\r\n        nodeInstanceId: false,\r\n        nodeMasterId: false,\r\n        provisionedIops: false,\r\n        accessPolicy: false,\r\n        enableZoneAwareness: false\r\n      };\r\n      this.setState({item: elasticSearch});\r\n\r\n      \r\n      if(elasticSearch.prive) \r\n      {\r\n        await fetch(API_BASE_URL + '/accounts/' + (elasticSearch.account.id) + '/vpcs',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.vpcs = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        await fetch(API_BASE_URL + '/vpcs/' + (elasticSearch.vpc.id) + '/type/ELK' + '/subnetGroups',)\r\n          .then((result) => {\r\n            return result.json();\r\n          }).then((jsonResult) => {\r\n            let item = {...this.state.item};\r\n            item.subnetgroups = jsonResult;\r\n            this.setState({item: item});\r\n        });\r\n        let item = {...this.state.item};\r\n        item.vpcId = elasticSearch.vpc.id;\r\n        item.subnetgroupId = elasticSearch.subnetgroup.id;\r\n        this.setState({item: item});\r\n      }\r\n\r\n      let item = {...this.state.item};\r\n\r\n      item.accountId = elasticSearch.account.id;\r\n      \r\n      if(item.nodes && item.nodes.length){\r\n        item.nodes.map(n => {  \r\n           if(n.type === 'instance')  \r\n           {\r\n              item.instanceCount = n.instanceCount;\r\n              item.nodeInstanceId = n.instanceType.id;\r\n           }\r\n           else if(n.type === 'master') \r\n           {\r\n              item.dedicatedMasterInstanceCount = n.instanceCount;\r\n              item.nodeMasterId = n.instanceType.id;\r\n\r\n            }\r\n        });\r\n      }\r\n\r\n\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const elasticSearch = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        text: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        subnetgroup: {},\r\n        subnetgroups: {},\r\n        subnetgroupId : '',\r\n        prive: true,\r\n        domainName: '', \r\n        version: '', \r\n        instanceCount: '', \r\n        enableDedicatedMaster: false, \r\n        dedicatedMasterInstanceCount: '', \r\n        enableZoneAwareness: false, \r\n        storageType: '', \r\n        volumeType: '', \r\n        volumeSize: '', \r\n        enableEncrypt: false, \r\n        snapshotConfiguration: '', \r\n        nodeToNodeEncryption: false,\r\n        instanceTypes: {},\r\n        nodeInstance: {},\r\n        nodeMaster: {}, \r\n        nodeInstanceId: '',\r\n        nodeMasterId: '',\r\n        provisionedIops: '',\r\n        allowExplicitIndex: true,\r\n        accessPolicy:'',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          domainName: false, \r\n          version: false,\r\n          instanceCount: false, \r\n          dedicatedMasterInstanceCount: false,\r\n          storageType: false,\r\n          volumeType: false,\r\n          volumeSize: false,\r\n          snapshotConfiguration: false,\r\n          nodeInstanceId: false,\r\n          nodeMasterId: false,\r\n          provisionedIops: false,\r\n          accessPolicy:false,\r\n          enableZoneAwareness:false\r\n        }\r\n      };\r\n      elasticSearch.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          domainName: false, \r\n          version: false,\r\n          instanceCount: false,\r\n          dedicatedMasterInstanceCount: false,\r\n          storageType: false,\r\n          volumeType: false,\r\n          volumeSize: false,\r\n          snapshotConfiguration: false,\r\n          nodeInstanceId: false,\r\n          nodeMasterId: false,\r\n          provisionedIops: false,\r\n          accessPolicy:false,\r\n          enableZoneAwareness: false\r\n      };\r\n      this.setState({item: elasticSearch});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    });*/\r\n\r\n    await fetch(API_BASE_URL + '/instanceTypes',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.instanceTypes = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'enableDedicatedMaster')\r\n    {\r\n      item.enableDedicatedMaster = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'enableZoneAwareness')\r\n    {\r\n      item.enableZoneAwareness = (target.checked) ? true: false;\r\n    } \r\n    else if(name === 'enableEncrypt')\r\n    {\r\n      item.enableEncrypt = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'nodeToNodeEncryption')\r\n    {\r\n      item.nodeToNodeEncryption = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'accessType')\r\n    {\r\n      if(value === 'prive'){\r\n       //hide \r\n        item.prive = true;\r\n      }\r\n      else\r\n      {\r\n        //show\r\n        item.prive = false;\r\n      }\r\n    }\r\n    else if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n\r\n      item.subnetgroupId = '';\r\n      item.subnetgroup = {};\r\n      item.subnetgroups = [];\r\n      \r\n    }\r\n    else if(name === 'vpcId')\r\n    {\r\n      \r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/type/ELK' + '/subnetGroups',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.subnetgroups = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          vpcId: true,\r\n          subnetgroupId: true,\r\n          domainName: true, \r\n          version: true,\r\n          instanceCount: true, \r\n          dedicatedMasterInstanceCount: true,\r\n          storageType: true,\r\n          volumeType: true,\r\n          volumeSize: true,\r\n          snapshotConfiguration: true,\r\n          nodeInstanceId: true,\r\n          nodeMasterId: true,\r\n          provisionedIops: true,\r\n          accessPolicy: true,\r\n          enableZoneAwareness: true\r\n          \r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.domainName, item.version, item.instanceCount, \r\n                                 item.dedicatedMasterInstanceCount, item.storageType, \r\n                                 item.volumeType, item.volumeSize, item.snapshotConfiguration, item.nodeInstanceId, item.nodeMasterId, item.enableDedicatedMaster, \r\n                                 item.provisionedIops, item.accessPolicy, item.enableZoneAwareness, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/elasticSearchs'; \r\n\r\n    item.account={id: item.accountId};\r\n    if(item.prive)\r\n    {\r\n      item.vpc={id: item.vpcId};\r\n      item.subnetgroup={id: item.subnetgroupId};\r\n    } else\r\n    {\r\n      item.vpc=null;\r\n      item.subnetgroup=null;\r\n    }\r\n    \r\n    item.nodeInstance= {\"type\": \"instance\", \"instanceCount\": item.instanceCount, \"instanceType\": {\"id\": item.nodeInstanceId}};\r\n    \r\n    if(!item.enableDedicatedMaster) {\r\n      item.nodeMaster = null;\r\n      //item.dedicatedMasterInstanceCount = 0;\r\n    }\r\n    else{\r\n      item.nodeMaster = {\"type\": \"master\", \"instanceCount\": item.dedicatedMasterInstanceCount, \"instanceType\": {\"id\": item.nodeMasterId}};\r\n    }\r\n    //console.log(\"sma=\" + item.nodeInstanceId + \" \" + item.nodeMasterId);\r\n    //return;\r\n    item.nodes = [item.nodeInstance, item.nodeMaster];\r\n\r\n    if(item.prive)\r\n    {\r\n        \r\n        await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/elasticSearchs/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/elasticSearchs', {\r\n        method: (item.id) ? 'PUT' : 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(item),\r\n      });\r\n    } else\r\n    {\r\n      await fetch((item.id) ? API_BASE_URL + '/elasticSearch/'+(item.id) : API_BASE_URL + '/elasticSearch', {\r\n        method: (item.id) ? 'PUT' : 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(item),\r\n      });\r\n    } \r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetgroupId, domainName, version, instanceCount, dedicatedMasterInstanceCount, \r\n    storageType, volumeType, volumeSize, snapshotConfiguration, nodeInstanceId, nodeMasterId, enableDedicatedMaster, provisionedIops, accessPolicy, enableZoneAwareness, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      subnetgroupId: '',\r\n      domainName: '',\r\n      version: '',\r\n      instanceCount: '',\r\n      dedicatedMasterInstanceCount: '',\r\n      storageType: '',\r\n      volumeType: '',\r\n      volumeSize: '',\r\n      snapshotConfiguration: '',\r\n      nodeInstanceId: '',\r\n      nodeMasterId: '', \r\n      provisionedIops: '',\r\n      accessPolicy:'',\r\n      enableZoneAwareness:''\r\n\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.prive && this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.prive && this.state.item.touched.subnetgroupId && subnetgroupId.length === 0){\r\n      errors.subnetgroupId = 'Subnet group should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.domainName && (domainName.length === 0 /*|| !domainName.match(\"[a-z][0-9]-\")*/)){\r\n      errors.domainName = 'The name must start with a lowercase letter and must be between 3 and 28 characters. Valid characters are a-z (lowercase only), 0-9, and - (hyphen)';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.version && version.length === 0){\r\n      errors.version = 'version should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.instanceCount && (instanceCount.length === 0 || instanceCount < 0)){\r\n      errors.instanceCount = 'instanceCount should not be null or less than 0';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.nodeInstanceId && nodeInstanceId.length === 0){\r\n      errors.nodeInstanceId = 'nodeInstanceId should not be null';\r\n      return errors;\r\n    }\r\n    else if(enableDedicatedMaster && this.state.item.touched.nodeMasterId && nodeMasterId.length === 0){\r\n      errors.nodeMasterId = 'nodeMasterId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.enableZoneAwareness && enableZoneAwareness && (instanceCount == '' || instanceCount % 2 != 0)){\r\n      errors.enableZoneAwareness = 'Zone awareness requires the instance count to be an even number';\r\n      return errors;\r\n    }\r\n    else if(enableDedicatedMaster && this.state.item.touched.dedicatedMasterInstanceCount && dedicatedMasterInstanceCount.length === 0){\r\n      errors.dedicatedMasterInstanceCount = 'dedicatedMasterInstanceCount should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.storageType && storageType.length === 0){\r\n      errors.storageType = 'storageType should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.volumeType && volumeType.length === 0){\r\n      errors.volumeType = 'volumeType should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.volumeSize && (volumeSize.length === 0 || volumeSize < 10 || volumeSize > 512)){\r\n      errors.volumeSize = 'volumeSize should not be between 10 and 512';\r\n      return errors;\r\n    }\r\n    else if(volumeType === 'ISSD' && this.state.item.touched.provisionedIops && (provisionedIops.length === 0 || provisionedIops < 1000 || provisionedIops > 16000)) {\r\n      errors.provisionedIops = 'provisionedIops should not be between 1000 and 16000';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.snapshotConfiguration && snapshotConfiguration.length === 0){\r\n      errors.snapshotConfiguration = 'snapshotConfiguration should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accessPolicy && accessPolicy.length === 0){\r\n      errors.accessPolicy = 'accessPolicy should not be null';\r\n      return errors;\r\n    }\r\n    \r\n\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit elasticSearch' : 'Add elasticSearch'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.domainName, item.version, item.instanceCount, \r\n                                 item.dedicatedMasterInstanceCount, item.storageType, \r\n                                 item.volumeType, item.volumeSize, item.snapshotConfiguration, item.nodeInstanceId, item.nodeMasterId, item.enableDedicatedMaster, \r\n                                 item.provisionedIops, item.accessPolicy, item.enableZoneAwareness, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/elasticSearchs\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let tri = item.vpcId || '';\r\n    item.vpcId = tri;\r\n\r\n\r\n    let optss = [];\r\n    if(item.subnetgroups && item.subnetgroups.length){\r\n      item.subnetgroups.map(s => {  \r\n          optss.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let sg = item.subnetgroupId || '';\r\n    item.subnetgroupId = sg;\r\n\r\n\r\n    let optsi = [];\r\n    if(item.instanceTypes && item.instanceTypes.length){\r\n      item.instanceTypes.map(i => {  \r\n          optsi.push(<option key={i.id} value={i.id}>{i.id} {i.family} {i.type}</option>);\r\n      });\r\n    }\r\n    let iti = item.nodeInstanceId || '';\r\n    item.nodeInstanceId = iti;\r\n\r\n    let itm = item.nodeMasterId || '';\r\n    item.nodeMasterId = itm;\r\n    \r\n    const prive = item.prive;\r\n    const vpcsr =  (prive) ? <FormGroup row>\r\n                <Label for=\"vpcId\" sm={2}>Vpcs (*)</Label>\r\n                <Col sm={10}>\r\n                <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')} \r\n                     valid={errors.vpcId === ''}\r\n                     invalid={errors.vpcId !== ''}\r\n                >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  {opts}\r\n                </Input>\r\n                \r\n                <FormFeedback>{errors.vpcId}</FormFeedback>\r\n                </Col>\r\n              </FormGroup> : ''\r\n             \r\n    const subnetgroupr = (prive) ? <FormGroup row>\r\n                <Label for=\"subnetgroupId\" sm={2}>Subnet group (*)</Label>\r\n                <Col sm={10}>\r\n                <Input type=\"select\" name=\"subnetgroupId\" id=\"subnetgroupId\"  value={sg} onChange={this.handleChange} onBlur={this.handleBlur('subnetgroupId')}\r\n                     valid={errors.subnetgroupId === ''}\r\n                     invalid={errors.subnetgroupId !== ''}\r\n                >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  {optss}\r\n                </Input>\r\n                \r\n                <FormFeedback>{errors.subnetgroupId}</FormFeedback>\r\n                </Col>\r\n              </FormGroup> : ''\r\n    \r\n    const dedicatedMasterInstanceType = (item.enableDedicatedMaster) ? <FormGroup row>\r\n              <Label for=\"nodeMasterId\" sm={2}>Instance Type (*)</Label>\r\n              <Col sm={10}>\r\n              <Input type=\"select\" name=\"nodeMasterId\" id=\"nodeMasterId\"  value={itm} onChange={this.handleChange} onBlur={this.handleBlur('nodeMasterId')} \r\n                   valid={errors.nodeMasterId === ''}\r\n                   invalid={errors.nodeMasterId !== ''}\r\n              >\r\n                <option value=\"\" disabled>Choose</option>\r\n                {optsi}\r\n              </Input>\r\n              \r\n              <FormFeedback>{errors.nodeMasterId}</FormFeedback>\r\n              </Col>\r\n            </FormGroup>  : '';\r\n\r\n    const dedicatedMasterInstanceCount = (item.enableDedicatedMaster) ? <FormGroup row>\r\n            <Label for=\"dedicatedMasterInstanceCount\" sm={2}>Dedicated Master InstanceCount (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"dedicatedMasterInstanceCount\" id=\"dedicatedMasterInstanceCount\" value={item.dedicatedMasterInstanceCount || ''} placeholder=\"Enter dedicatedMasterInstanceCount\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('dedicatedMasterInstanceCount')} autoComplete=\"dedicatedMasterInstanceCount\"\r\n                   valid={errors.dedicatedMasterInstanceCount === ''}\r\n                   invalid={errors.dedicatedMasterInstanceCount !== ''}\r\n                   >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  <option value=\"3\" >3</option>\r\n                  <option value=\"5\" >5</option>\r\n            </Input>\r\n          \r\n           <FormFeedback>{errors.dedicatedMasterInstanceCount}</FormFeedback>\r\n           </Col>\r\n          </FormGroup> : '';\r\n\r\n    const provisionedIops  = (item.volumeType === 'ISSD') ? <FormGroup row>\r\n            <Label for=\"provisionedIops\" sm={2}>Provisioned Iops (*)</Label>\r\n            <Col sm={10}>\r\n            <Input  type=\"number\" name=\"provisionedIops\" id=\"provisionedIops\" value={item.provisionedIops || ''} placeholder=\"Enter provisionedIops\" \r\n                   onChange={this.handleChange}   onBlur={this.handleBlur('provisionedIops')}\r\n                   valid={errors.provisionedIops === ''}\r\n                   invalid={errors.provisionedIops !== ''}\r\n                   />\r\n            \r\n            <FormFeedback>{errors.provisionedIops}</FormFeedback>\r\n            <FormText>The provisioned IOPS value must be an integer between 1000 and 16000.</FormText>\r\n            </Col>\r\n          </FormGroup> : '';\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup row>\r\n            <Label for=\"name\" sm={2}>Name (*)</Label>\r\n             <Col sm={10}>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n             \r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"accountId\" sm={2}>Account (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup tag=\"fieldset\">\r\n            <Label for=\"accessType\">Access Type (*)</Label>\r\n            \r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"prive\" checked={prive === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                VPC access (Recommended)\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"public\" checked={prive === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                Public access\r\n              </Label>\r\n            </FormGroup>\r\n            \r\n            <FormFeedback>{errors.accessType}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n            {vpcsr}\r\n            {subnetgroupr}\r\n          \r\n          <FormGroup row>\r\n            <Label for=\"domainName\" sm={2}>Domain Name (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"text\" name=\"domainName\" id=\"domainName\" value={item.domainName || ''} placeholder=\"Enter domainName\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('domainName')} autoComplete=\"domainName\" \r\n                   valid={errors.domainName === ''}\r\n                   invalid={errors.domainName !== ''}\r\n            />\r\n           <FormText>The name must start with a lowercase letter and must be between 3 and 28 characters. Valid characters are a-z (lowercase only), 0-9, and - (hyphen).</FormText>\r\n           <FormFeedback>{errors.domainName}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"version\" sm={2}>Version (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"version\" id=\"version\" value={item.version || ''} placeholder=\"Enter version\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('version')} autoComplete=\"version\"\r\n                   valid={errors.version === ''}\r\n                   invalid={errors.version !== ''}\r\n                  >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  <option value=\"6.3\" >6.3</option>\r\n                  <option value=\"6.2\" >6.2</option>\r\n                  <option value=\"6.0\" >6.0</option>\r\n            </Input>\r\n            \r\n           <FormFeedback>{errors.version}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"instanceCount\" sm={2}>Instance Count (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"number\" name=\"instanceCount\" id=\"instanceCount\" value={item.instanceCount || ''} placeholder=\"Enter instanceCount\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('instanceCount')} autoComplete=\"instanceCount\"\r\n                   valid={errors.instanceCount === ''}\r\n                   invalid={errors.instanceCount !== ''}\r\n            />\r\n            \r\n           <FormFeedback>{errors.instanceCount}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n              <Label for=\"nodeInstanceId\" sm={2}>Instance Type (*)</Label>\r\n              <Col sm={10}>\r\n              <Input type=\"select\" name=\"nodeInstanceId\" id=\"nodeInstanceId\"  value={iti} onChange={this.handleChange} onBlur={this.handleBlur('nodeInstanceId')} \r\n                   valid={errors.nodeInstanceId === ''}\r\n                   invalid={errors.nodeInstanceId !== ''}\r\n              >\r\n                <option value=\"\" disabled>Choose</option>\r\n                {optsi}\r\n              </Input>\r\n              \r\n              <FormFeedback>{errors.nodeInstanceId}</FormFeedback>\r\n              </Col>\r\n            </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"enableDedicatedMaster\">Enable Dedicated Master:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"enableDedicatedMaster\" id=\"enableDedicatedMaster\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('enableDedicatedMaster')} \r\n                    checked={item.enableDedicatedMaster === true}/>\r\n          </FormGroup>\r\n  \r\n          {dedicatedMasterInstanceType}   \r\n          {dedicatedMasterInstanceCount}\r\n\r\n          \r\n          <FormGroup>\r\n            <Label for=\"enableZoneAwareness\" >Enable Zone Awareness:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"enableZoneAwareness\" id=\"enableZoneAwareness\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('enableZoneAwareness')} \r\n                    checked={item.enableZoneAwareness === true}\r\n                    valid={errors.enableZoneAwareness === ''}\r\n                    invalid={errors.enableZoneAwareness !== ''}\r\n                    />\r\n            <FormText>Zone awareness requires the instance count to be an even number.</FormText>\r\n            <FormFeedback>{errors.enableZoneAwareness}</FormFeedback>\r\n          </FormGroup>\r\n    \r\n\r\n          <FormGroup row>\r\n            <Label for=\"storageType\" sm={2}>Storage Type (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"storageType\" id=\"storageType\" value={item.storageType || ''} placeholder=\"Enter storageType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('storageType')} autoComplete=\"storageType\"\r\n                   valid={errors.storageType === ''}\r\n                   invalid={errors.storageType !== ''}\r\n                   >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   <option value=\"EBS\">EBS</option>\r\n           </Input>\r\n           \r\n           <FormFeedback>{errors.storageType}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"volumeType\" sm={2}>Volume Type (*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"volumeType\" id=\"volumeType\" value={item.volumeType || ''} placeholder=\"Enter volumeType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('volumeType')} autoComplete=\"volumeType\"\r\n                   valid={errors.volumeType === ''}\r\n                   invalid={errors.volumeType !== ''}\r\n                   >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   <option value=\"SSD\">General Purpose (SSD)</option>\r\n                   <option value=\"ISSD\">Provisioned Iops (SSD)</option>\r\n                   <option value=\"MAG\">Magnetics</option>\r\n           </Input>\r\n           \r\n           <FormFeedback>{errors.volumeType}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"volumeSize\" sm={2}>Volume Size </Label>\r\n            <Col sm={10}>\r\n            <Input type=\"number\" name=\"volumeSize\" id=\"volumeSize\" value={item.volumeSize || ''} placeholder=\"Enter volumeSize\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('volumeSize')} autoComplete=\"volumeSize\"\r\n                   valid={errors.volumeSize === ''}\r\n                   invalid={errors.volumeSize !== ''}\r\n            />\r\n           <FormText>Volume size must be an integer between 10 and 512(*)</FormText>\r\n           <FormFeedback>{errors.volumeSize}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          {provisionedIops}\r\n\r\n          <FormGroup>\r\n            <Label for=\"enableEncrypt\">Enable Encrypt:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"enableEncrypt\" id=\"enableEncrypt\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('enableEncrypt')} \r\n                    checked={item.enableEncrypt === true}/>\r\n           \r\n          </FormGroup>\r\n    \r\n          <FormGroup row>\r\n            <Label for=\"snapshotConfiguration\" sm={2}>Snapshot Configuration : Automated snapshot start hour(*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"select\" name=\"snapshotConfiguration\" id=\"snapshotConfiguration\" value={item.snapshotConfiguration || ''} placeholder=\"Enter snapshotConfiguration\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('snapshotConfiguration')} autoComplete=\"snapshotConfiguration\"\r\n                   valid={errors.snapshotConfiguration === ''}\r\n                   invalid={errors.snapshotConfiguration !== ''}\r\n                  >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  <option value=\"00:00\">00:00 UTC (default)</option>\r\n                  <option value=\"01:00\">01:00 UTC</option>\r\n                  <option value=\"02:00\">02:00 UTC</option>\r\n                  <option value=\"03:00\">03:00 UTC</option>\r\n                  <option value=\"04:00\">04:00 UTC</option>\r\n                  <option value=\"05:00\">05:00 UTC</option>\r\n                  <option value=\"06:00\">06:00 UTC</option>\r\n                  <option value=\"07:00\">07:00 UTC</option>\r\n                  <option value=\"08:00\">08:00 UTC</option>\r\n                  <option value=\"09:00\">09:00 UTC</option>\r\n                  <option value=\"10:00\">10:00 UTC</option>\r\n                  <option value=\"11:00\">11:00 UTC</option>\r\n                  <option value=\"12:00\">12:00 UTC</option>\r\n                  <option value=\"13:00\">13:00 UTC</option>\r\n                  <option value=\"14:00\">14:00 UTC</option>\r\n                  <option value=\"15:00\">15:00 UTC</option>\r\n                  <option value=\"16:00\">16:00 UTC</option>\r\n                  <option value=\"17:00\">17:00 UTC</option>\r\n                  <option value=\"18:00\">18:00 UTC</option>\r\n                  <option value=\"19:00\">19:00 UTC</option>\r\n                  <option value=\"20:00\">20:00 UTC</option>\r\n                  <option value=\"21:00\">21:00 UTC</option>\r\n                  <option value=\"22:00\">22:00 UTC</option>\r\n                  <option value=\"23:00\">23:00 UTC</option>\r\n           </Input>\r\n           \r\n           <FormFeedback>{errors.snapshotConfiguration}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n\r\n          \r\n\r\n          <FormGroup>\r\n            <Label for=\"nodeToNodeEncryption\">Node To Node Encryption:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"nodeToNodeEncryption\" id=\"nodeToNodeEncryption\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('nodeToNodeEncryption')} \r\n                    checked={item.nodeToNodeEncryption === true}/>\r\n          </FormGroup>\r\n    \r\n          <FormGroup>\r\n          <Label for=\"l\">Advanced Options</Label>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"allowExplicitIndex\" sm={3}>rest.action.multi.allow_explicit_index</Label>\r\n            <Col sm={9}>\r\n            <Input type=\"select\" name=\"allowExplicitIndex\" id=\"allowExplicitIndex\" value={item.allowExplicitIndex || ''} placeholder=\"Enter allowExplicitIndex\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('allowExplicitIndex')} autoComplete=\"allowExplicitIndex\"\r\n                  >\r\n                  <option value=\"true\">TRUE</option>\r\n                  <option value=\"false\">FALSE</option>\r\n           </Input>\r\n           \r\n           <FormText>If you want to configure access to domain sub-resources, such as specific indices, you must set this property to \"false\". \r\n           Setting this property to \"false\" prevents users from bypassing access control for sub-resources. The default value for this setting is \"true\".</FormText>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"cacheSize\" sm={3}>indices.fielddata.cache.size</Label>\r\n            <Col sm={9}>\r\n            <Input type=\"number\" name=\"cacheSize\" id=\"cacheSize\" value={item.cacheSize || ''}\r\n                   onChange={this.handleChange} autoComplete=\"cacheSize\"/>\r\n            <FormText>Specifies the percentage of heap space that is allocated to fielddata. By default, this setting is unbounded.</FormText>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"maxClauseCount\" sm={3}>indices.query.bool.max_clause_count</Label>\r\n            <Col sm={9}>\r\n            <Input type=\"number\" name=\"maxClauseCount\" id=\"maxClauseCount\" value={item.maxClauseCount || ''}\r\n                   onChange={this.handleChange} autoComplete=\"maxClauseCount\"/>\r\n            \r\n            <FormText>Specifies the maximum number of allowed boolean clauses in a query. By default, this setting is 1024.</FormText>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"accessPolicy\" sm={2}>Access Policy(*)</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"textarea\" name=\"accessPolicy\" id=\"accessPolicy\" value={item.accessPolicy || ''} placeholder=\"Enter accessPolicy\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('accessPolicy')} autoComplete=\"accessPolicy\"\r\n                   valid={errors.accessPolicy === ''}\r\n                   invalid={errors.accessPolicy !== ''}\r\n            />\r\n            \r\n           <FormFeedback>{errors.accessPolicy}</FormFeedback>\r\n           </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label for=\"text\" sm={2}>Description</Label>\r\n            <Col sm={10}>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(ElasticSearchEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass ElasticCacheList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {elasticCaches: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/elasticCaches`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({elasticCaches: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/elasticCaches/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateElasticCache = [...this.state.elasticCaches].filter(i => i.id !== id);\r\n      this.setState({elasticCaches: updateElasticCache});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {elasticCaches, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const elasticCacheList = elasticCaches.map(elasticCache => {\r\n      \r\n    const link = API_BASE_URL + \"/vpcs/\" + elasticCache.vpc.id; \r\n    const linkAccount = API_BASE_URL + \"/accounts/\" + elasticCache.account.id; \r\n      \r\n    const sg = API_BASE_URL + \"/subnetgroups/\" + elasticCache.subnetgroup.id;\r\n    let sgs = '';\r\n    const eccSgs = elasticCache.sgs.map(sg => {\r\n      sgs = sgs + '|' + sg.id + ':' + sg.name;\r\n    })\r\n\r\n    return <tr key={elasticCache.id}>\r\n      <td style={{whiteSpace: 'nowrap'}}>{elasticCache.id}</td>\r\n\r\n\r\n      <td>{elasticCache.name}</td>\r\n      <td>{elasticCache.text}</td>\r\n\r\n      <td><a href={linkAccount}>{elasticCache.account.numAccount}</a></td>\r\n      <td><a href={link}>{elasticCache.vpc.name}</a></td>\r\n      <td><a href={sg}>{elasticCache.subnetgroup.name}</a></td>\r\n\r\n      <td>{sgs}</td>\r\n      \r\n\r\n      <td>\r\n        <ButtonGroup>\r\n          <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/elasticCaches/\" + elasticCache.id}>Edit</Button>\r\n          <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(elasticCache.vpc.id, elasticCache.id)}>Delete</Button>\r\n        </ButtonGroup>\r\n      </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/elasticCaches/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add ElasticCache</Button>\r\n          </div>\r\n          \r\n          <h3>ElasticCache</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Subnet Group</th>\r\n              <th width=\"5%\">Security Group</th>\r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {elasticCacheList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ElasticCacheList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass ElasticCacheEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    vpc: {},\r\n    vpcs: {},\r\n    vpcId : '',\r\n    subnetgroup: {},\r\n    subnetgroups: {},\r\n    subnetgroupId : '',\r\n    sgss: {},\r\n    sgs: [],\r\n    sgId: [],\r\n    touched: {\r\n      name: false,\r\n      vpcId: false,\r\n      subnetgroupId: false,\r\n      accountId: false,\r\n      sgId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const elasticCache = await (await fetch(`${API_BASE_URL}/elasticCaches/${this.props.match.params.id}`)).json();\r\n      elasticCache.touched = {\r\n        name: false,\r\n        vpcId: false,\r\n        subnetgroupId: false,\r\n        accountId: false,\r\n        sgId: false\r\n      };\r\n      this.setState({item: elasticCache});\r\n      \r\n      fetch(API_BASE_URL + '/vpcs/' + (elasticCache.vpc.id) + '/type/ECC' + '/subnetGroups',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetgroups = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n      await fetch(API_BASE_URL + '/accounts/' + (elasticCache.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      \r\n      \r\n      fetch(API_BASE_URL + '/vpcs/' + (elasticCache.vpc.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n\r\n\r\n      let item = {...this.state.item};\r\n      item.accountId = elasticCache.account.id;\r\n      item.vpcId = elasticCache.vpc.id;\r\n      item.subnetgroupId = elasticCache.subnetgroup.id;\r\n\r\n      var values = [];\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.sgs = values;\r\n\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const elasticCache = {\r\n        name: '',\r\n        text: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        subnetgroup: {},\r\n        subnetgroups: {},\r\n        subnetgroupId : '',\r\n        sgss: {},\r\n        sgs: [],\r\n        sgId: [],\r\n        touched: {\r\n          name: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          accountId: false,\r\n          sgId: false\r\n        }\r\n      };\r\n      elasticCache.touched = {\r\n          name: false,\r\n          vpcId: false,\r\n          subnetgroupId: false,\r\n          accountId: false,\r\n          sgId: false\r\n      };\r\n      this.setState({item: elasticCache});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      item.subnetgroupId = '';\r\n      item.subnetgroups = [];\r\n      item.sgId = '';\r\n      item.sgss = [];\r\n    }\r\n\r\n    if(name === 'vpcId')\r\n    {\r\n      \r\n      fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/type/ECC' + '/subnetGroups',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        item.subnetgroups = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/sgs',)\r\n      .then((result) => { \r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        item.sgss = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          vpcId: true,\r\n          subnetgroupId: true,\r\n          accountId: false,\r\n          sgId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.accountId, item.sgId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/elasticCaches'; \r\n\r\n    item.account={id: item.accountId};\r\n    item.vpc={id: item.vpcId};\r\n    item.subnetgroup={id: item.subnetgroupId};\r\n\r\n    var values = [];\r\n    if(item.sgs && item.sgs.length){\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.sg= values;\r\n    }\r\n\r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/elasticCaches/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/elasticCaches', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetgroupId, accountId, sgId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      vpcId: '',\r\n      subnetgroupId: '',\r\n      accountId: '',\r\n      sgId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.subnetgroupId && subnetgroupId.length === 0){\r\n      errors.subnetgroupId = 'Subnet group should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.sgId && sgId && this.state.item.sgs.length <= 0){\r\n      errors.sgId = 'sgId should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'sgId')\r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.sgss && item.sgss.length){\r\n              item.sgss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.sgs = values;\r\n      }\r\n      this.setState({item});\r\n  };\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit elasticCache' : 'Add elasticCache'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetgroupId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/elasticCaches\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let tri = item.vpcId || '';\r\n    item.vpcId = tri;\r\n\r\n\r\n    let optss = [];\r\n    if(item.subnetgroups && item.subnetgroups.length){\r\n      item.subnetgroups.map(s => {  \r\n          optss.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let sg = item.subnetgroupId || '';\r\n    item.subnetgroupId = sg;\r\n\r\n    let optsg = [];  \r\n    let optsgs = [];\r\n    if(item.sgss && item.sgss.length){\r\n      item.sgss.map(s => {  \r\n          if(item.sgs && item.sgs.length) item.sgs.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsgs.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsg.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n    const securityGroup = <FormGroup>\r\n            <Label for=\"sgId\">Security Group (*)</Label>\r\n            <Select name=\"sgId\" id=\"sgId\"  placeholder=\"Enter Security group\" isMulti isSearchable\r\n              value={optsgs}\r\n              onChange={e => this.onOptionChange(\"sgId\",e)}\r\n              onBlur={this.handleBlur('sgId')}\r\n              options={optsg}\r\n            />\r\n            <FormFeedback>{errors.sgId}</FormFeedback>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         <FormGroup>\r\n            <Label for=\"subnetgroupId\">Subnet group (*)</Label>\r\n            <Input type=\"select\" name=\"subnetgroupId\" id=\"subnetgroupId\"  value={sg} onChange={this.handleChange} onBlur={this.handleBlur('subnetgroupId')}\r\n                 valid={errors.subnetgroupId === ''}\r\n                 invalid={errors.subnetgroupId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optss}\r\n            </Input>\r\n            <FormFeedback>{errors.subnetgroupId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {securityGroup}\r\n\r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(ElasticCacheEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass NaclList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {nacls: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/nacls`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({nacls: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/nacls/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateNacl = [...this.state.nacls].filter(i => i.id !== id);\r\n      this.setState({nacls: updateNacl});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {nacls, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const naclList = nacls.map(nacl => {\r\n      \r\n    const link = API_BASE_URL + \"/vpcs/\" + nacl.vpc.id; \r\n    const linkAccount = API_BASE_URL + \"/accounts/\" + nacl.account.id;\r\n    const isdef= (nacl.def)? 'Yes': 'No';      \r\n    \r\n    let subs='';\r\n    if(nacl.subnets && nacl.subnets.length){\r\n        nacl.subnets.map(s => {  \r\n          subs = subs + s.id + \":\" + s.name + \":\" + s.az.name + \"| \";\r\n      });\r\n    }  \r\n\r\n      return <tr key={nacl.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{nacl.id}</td>\r\n        <td>{nacl.name}</td>\r\n        <td><a href={linkAccount}>{nacl.account.numAccount}</a></td>\r\n        <td>{isdef}</td>\r\n        <td>{nacl.text}</td>\r\n        <td><a href={link}>{nacl.vpc.name}</a></td>\r\n\t\t    <td>{subs}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/nacl/\" + nacl.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/nacl/\" + nacl.id + \"/rules\" }>Rules</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/nacls/\" + nacl.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(nacl.vpc.id, nacl.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/nacls/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Nacl</Button>\r\n          </div>\r\n          \r\n          <h3>Nacl</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Default</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Subnet association</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {naclList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NaclList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass NaclEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    text: '',\r\n\t  vpc: {},\r\n    vpcs: {},\r\n  \tvpcId : '',\r\n    def: false,\r\n    subnets: [],\r\n    subnetss: {},\r\n    subnetId: [],\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      subnetId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const nacl = await (await fetch(`${API_BASE_URL}/nacls/${this.props.match.params.id}`)).json();\r\n      nacl.touched = {\r\n        name: false,\r\n        vpcId: false,\r\n        accountId: false,\r\n        subnetId: false\r\n      };\r\n      this.setState({item: nacl});\r\n      \r\n      \r\n      await  fetch(API_BASE_URL + '/vpcs/' + (nacl.vpc.id) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      \r\n      await fetch(API_BASE_URL + '/accounts/' + (nacl.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      let item = {...this.state.item};\r\n\r\n      item.vpcId = nacl.vpc.id;\r\n      item.accountId = nacl.account.id;\r\n      var values = [];\r\n      item.subnets.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.subnets = values;\r\n\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const nacl = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        text: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        def: false,\r\n        subnets: [],\r\n        subnetss: {},\r\n        subnetId: [],\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetId: false\r\n        }\r\n      };\r\n      nacl.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetId: false\r\n      };\r\n      this.setState({item: nacl});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    if(name === 'accessType')\r\n    {\r\n      if(value === 'default'){\r\n       //hide \r\n        item.def = true;\r\n      }\r\n      else\r\n      {\r\n        //show\r\n        item.def = false;\r\n      }\r\n    }\r\n    \r\n    if(name === 'subnetId')\r\n    {\r\n      var options = event.target.options;\r\n      var values = [];\r\n      for (var i = 0, l = options.length; i < l; i++) {\r\n        if (options[i].selected) {\r\n            if(item.subnetss && item.subnetss.length){\r\n                item.subnetss.map(s => { \r\n                  if(s.id == options[i].value) {\r\n                      values.push({\"id\": s.id});\r\n                  }\r\n              });\r\n            }\r\n        }\r\n      }\r\n      item.subnets = values;\r\n      this.setState({item});\r\n    }\r\n\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      item.subnetId = '';\r\n      item.subnetss = [];\r\n      item.subnets = [];\r\n    }\r\n\r\n    if(name === 'vpcId')\r\n    {\r\n      \r\n        fetch(API_BASE_URL + '/vpcs/' + item.vpcId + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          vpcId: true,\r\n          subnetId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/nacls'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n    if(item.subnets && item.subnets.length) item.subnets.map(s => {  \r\n          //alert(\"subnet:\" + s.id + \" \" + item.subnets.length);\r\n    });\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/nacls/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/nacls', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetId, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      subnetId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.subnetId && subnetId && this.state.item.subnets.length === 0){\r\n      errors.subnetId = 'Add subnets to cover at least 2 availability zones.';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit nacl' : 'Add nacl'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/nacls\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n    const def = item.def;\r\n\r\n    let optss = [];\r\n    if(item.subnetss && item.subnetss.length){\r\n      item.subnetss.map(s => {\r\n      \r\n          let isSelected = false;\r\n          if(item.subnets && item.subnets.length) item.subnets.map(ss => {\r\n             if(s.id == ss.id) isSelected = true;\r\n          });\r\n          optss.push(<option value={s.id} selected={isSelected}>{s.id} {s.name} {s.az.name}</option>);\r\n      });\r\n    }\r\n    let sub = item.subnetId || {};\r\n    item.subnetId = sub;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"subnetId\">Subnets (*)</Label>\r\n            <Input type=\"select\" name=\"subnetId\" id=\"subnetId\"   onChange={this.handleChange} onBlur={this.handleBlur('subnetId')} multiple\r\n                 valid={errors.subnetId === ''}\r\n                 invalid={errors.subnetId !== ''}\r\n            >\r\n            <option value=\"\" disabled>Choose</option>\r\n              {optss}\r\n            </Input>\r\n            <FormFeedback>{errors.subnetId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         <FormGroup tag=\"fieldset\">\r\n            <Label for=\"accessType\">Default (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"default\" checked={def === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                Yes\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"nodefault\" checked={def === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                No\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.accessType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(NaclEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RuleList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {rules: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/nacls/${this.props.match.params.id}/rules`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({rules: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/nacls/${accId}/rules/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateRule = [...this.state.rules].filter(i => i.id !== id);\r\n      this.setState({rules: updateRule});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {rules, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const ruleList = rules.map(rule => {\r\n      \r\n      const link = API_BASE_URL + \"/nacls/\" + rule.nacl.id; \r\n      const allowdeny= (rule.allow)? 'Allow': 'Deny';\r\n      \r\n\r\n      return <tr key={rule.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{rule.id}</td>\r\n\r\n\r\n        <td>{rule.type}</td>\r\n        \r\n\r\n\r\n        <td>{rule.number}</td>\r\n        <td>{rule.ruleType}</td>\r\n        <td>{rule.protocol}</td>\r\n        <td>{rule.portRange}</td>\r\n        <td>{rule.cidr}</td>\r\n        <td>{allowdeny}</td>\r\n\r\n\r\n\r\n\r\n        <td>{rule.text}</td>\r\n        <td><a href={link}>{rule.nacl.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/nacl/\" + rule.nacl.id  + \"/rules/\" + rule.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(rule.nacl.id, rule.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/nacl/${this.props.match.params.id}/rules/new`;\r\n    const nacl = `${API_BASE_URL}/nacls`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={nacl}>Nacl</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Rule</Button>\r\n          </div>\r\n          \r\n          <h3>Rule</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">IN/OUT</th>\r\n              \r\n\r\n              <th width=\"5%\">Rule</th>\r\n              <th width=\"5%\">Type</th>\r\n              <th width=\"5%\">Protocol</th>\r\n              <th width=\"5%\">PortRange</th>\r\n              <th width=\"5%\">Source/Destination</th>\r\n              <th width=\"5%\">Allow/Deny</th>\r\n\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Nacl</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {ruleList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RuleList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass RuleEdit extends Component {\r\n\r\n  emptyItem = {\r\n    type: '',\r\n    number: '', \r\n    ruleType: '', \r\n    protocol:'', \r\n    portRange:'', \r\n    cidr: '',\r\n    allow:'',\r\n    text: '',\r\n    nacl: {},\r\n    touched: {\r\n      type: false,\r\n      number: false, \r\n      ruleType: false, \r\n      protocol: false, \r\n      portRange: false,\r\n      cidr: false,\r\n      allow:false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const rule = await (await fetch(`${API_BASE_URL}/rules/${this.props.match.params.id}`)).json();\r\n      rule.touched = {\r\n        type: false,\r\n        number: false, \r\n        ruleType: false, \r\n        protocol: false, \r\n        portRange: false, \r\n        cidr: false,\r\n        allow: false\r\n      };\r\n      this.setState({item: rule});\r\n      \r\n    }\r\n    else {\r\n      const nacl = await (await fetch(`${API_BASE_URL}/nacls/${this.props.match.params.idn}`)).json();\r\n      const rule = {\r\n        number: '', \r\n        ruleType: '', \r\n        protocol:'', \r\n        portRange:'', \r\n        cidr: '',\r\n        allow: '',\r\n        type: '',\r\n        text: '',\r\n        nacl: {},\r\n        touched: {\r\n          type: false,\r\n          number: false, \r\n          ruleType: false, \r\n          protocol: false, \r\n          portRange: false, \r\n          cidr: false,\r\n          allow: false\r\n        }\r\n      };\r\n      rule.nacl = nacl;\r\n      rule.touched = {\r\n          type: false,\r\n          number: false, \r\n          ruleType: false, \r\n          protocol: false, \r\n          portRange: false, \r\n          cidr: false,\r\n          allow: false\r\n      };\r\n      this.setState({item: rule});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          type: true,\r\n          number: true, \r\n          ruleType: true, \r\n          protocol: true, \r\n          portRange: true, \r\n          cidr: true,\r\n          allow: true\r\n    };\r\n    const errors = this.validate(item.type, item.number, item.ruleType, item.protocol, item.portRange, item.cidr, item.allow);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/nacl/' + item.nacl.id +'/rules'; \r\n\r\n    item.nacl={id: item.nacl.id};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/nacls/' + (item.nacl.id) + '/rules/'+(item.id) : API_BASE_URL + '/nacls/' + item.nacl.id + '/rules', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(type, number, ruleType, protocol, portRange, cidr, allow) {\r\n\r\n    const errors = {\r\n      type: '',\r\n      number: '', \r\n      ruleType: '', \r\n      protocol:'', \r\n      portRange:'', \r\n      cidr: '',\r\n      allow: ''\r\n    };\r\n    //console.log('type' + type);\r\n    \r\n    if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'Type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.number && number.length === 0){\r\n      errors.number = 'Rule should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.ruleType && ruleType.length === 0){\r\n      errors.ruleType = 'Type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.protocol && protocol.length === 0){\r\n      errors.protocol = 'Protocol should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.portRange && portRange.length === 0){\r\n      errors.portRange = 'Portrange should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.cidr && !cidrRegex({exact: true}).test(cidr)){\r\n      errors.cidr = 'Cidr should  be a cidr format';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.allow && allow.length === 0){\r\n      errors.allow = 'Deny/Allow should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit rule' : 'Add rule'}</h2>;\r\n\r\n    const errors = this.validate(item.type, item.number, item.ruleType, item.protocol, item.portRange, item.cidr, item.allow);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/nacl/\" + item.nacl.id + \"/rules\";\r\n\r\n    let nacl = null;\r\n    nacl = <FormGroup>\r\n            <Label for=\"naclId\">Nacl: {item.nacl.name}</Label>\r\n            <Input type=\"text\" name=\"naclId\" id=\"naclId\" value={item.nacl.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"type\">In/Out (*)</Label>\r\n            <Input type=\"select\" name=\"type\" id=\"type\" value={item.type || ''} onChange={this.handleChange} onBlur={this.handleBlur('type')} \r\n                 valid={errors.type === ''}\r\n                 invalid={errors.type !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"INBOUND\">INBOUND</option>\r\n              <option value=\"OUTBOUND\">OUTBOUND</option>\r\n            </Input>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n          {nacl}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"number\">Rule (*)</Label>\r\n            <Input type=\"text\" name=\"number\" id=\"number\" value={item.number || ''} placeholder=\"Enter rule\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('number')} autoComplete=\"number\"\r\n                   valid={errors.number === ''}\r\n                   invalid={errors.number !== ''}\r\n            />\r\n           <FormFeedback>{errors.number}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"ruleType\">Type (*)</Label>\r\n            <Input type=\"select\" name=\"ruleType\" id=\"ruleType\" value={item.ruleType || ''} onChange={this.handleChange} onBlur={this.handleBlur('ruleType')} \r\n                 valid={errors.ruleType === ''}\r\n                 invalid={errors.ruleType !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"ruleType1\">ruleType1</option>\r\n              <option value=\"ruleType2\">ruleType2</option>\r\n            </Input>\r\n            <FormFeedback>{errors.ruleType}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"protocol\">Protocol (*)</Label>\r\n            <Input type=\"select\" name=\"protocol\" id=\"protocol\" value={item.protocol || ''} onChange={this.handleChange} onBlur={this.handleBlur('protocol')} \r\n                 valid={errors.protocol === ''}\r\n                 invalid={errors.protocol !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"protocol1\">protocol1</option>\r\n              <option value=\"protocol2\">protocol2</option>\r\n            </Input>\r\n            <FormFeedback>{errors.protocol}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"portRange\">Port Range (*)</Label>\r\n            <Input type=\"text\" name=\"portRange\" id=\"portRange\" value={item.portRange || ''} placeholder=\"Enter portRange\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('portRange')} autoComplete=\"portRange\"\r\n                   valid={errors.portRange === ''}\r\n                   invalid={errors.portRange !== ''}\r\n            />\r\n           <FormFeedback>{errors.portRange}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"cidr\">Source/Destination (*)</Label>\r\n            <Input type=\"text\" name=\"cidr\" id=\"cidr\" value={item.cidr || ''} placeholder=\"Enter cidr\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('cidr')} autoComplete=\"cidr\"\r\n                   valid={errors.cidr === ''}\r\n                   invalid={errors.cidr !== ''}\r\n            />\r\n           <FormFeedback>{errors.cidr}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"allow\">Deny/Allow (*)</Label>\r\n            <Input type=\"select\" name=\"allow\" id=\"allow\" value={item.allow || ''} onChange={this.handleChange} onBlur={this.handleBlur('allow')} \r\n                 valid={errors.allow === ''}\r\n                 invalid={errors.allow !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"Deny\">Deny</option>\r\n              <option value=\"Allow\">Allow</option>\r\n            </Input>\r\n            <FormFeedback>{errors.allow}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(RuleEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/nacls/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/nacls/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTag = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTag});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/nacls/\" + tag.nacl.id; \r\n      //const allowdeny= (tag.allow)? 'Allow': 'Deny';\r\n      \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.nacl.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/nacl/\" + tag.nacl.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.nacl.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/nacl/${this.props.match.params.id}/tags/new`;\r\n    const nacl = `${API_BASE_URL}/nacls`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={nacl}>Nacl</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Tag</Button>\r\n          </div>\r\n          \r\n          <h3>Tag</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Nacl</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass TagEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    nacl: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const nacl = await (await fetch(`${API_BASE_URL}/nacls/${this.props.match.params.idn}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        nacl: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.nacl = nacl;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/nacl/' + item.nacl.id +'/tags'; \r\n\r\n    item.nacl={id: item.nacl.id};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/nacls/' + (item.nacl.id) + '/tags/'+(item.id) : API_BASE_URL + '/nacls/' + item.nacl.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/nacl/\" + item.nacl.id + \"/tags\";\r\n\r\n    let nacl = null;\r\n    nacl = <FormGroup>\r\n            <Label for=\"naclId\">Nacl: {item.nacl.name}</Label>\r\n            <Input type=\"text\" name=\"naclId\" id=\"naclId\" value={item.nacl.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {nacl}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RouteTableList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {routetables: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/routeTables`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({routetables: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/routeTables/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateRouteTable = [...this.state.routetables].filter(i => i.id !== id);\r\n      this.setState({routetables: updateRouteTable});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {routetables, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const routetableList = routetables.map(routetable => {\r\n      \r\n    const link = API_BASE_URL + \"/vpcs/\" + routetable.vpc.id; \r\n    const linkAccount = API_BASE_URL + \"/accounts/\" + routetable.account.id; \r\n    const isdef= (routetable.def)? 'Yes': 'No';      \r\n    \r\n    let subs='';\r\n    if(routetable.subnets && routetable.subnets.length){\r\n        routetable.subnets.map(s => {  \r\n          subs = subs + s.id + \":\" + s.name + \":\" + s.az.name + \"| \";\r\n      });\r\n    }  \r\n\r\n      return <tr key={routetable.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{routetable.id}</td>\r\n        <td>{routetable.name}</td>\r\n        <td><a href={linkAccount}>{routetable.account.numAccount}</a></td>\r\n        <td>{isdef}</td>\r\n        <td>{routetable.text}</td>\r\n        <td><a href={link}>{routetable.vpc.name}</a></td>\r\n\t\t    <td>{subs}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/routetable/\" + routetable.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={\"/routetable/\" + routetable.id + \"/routes\" }>Routes</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/routetables/\" + routetable.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(routetable.vpc.id, routetable.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/routetables/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add RouteTable</Button>\r\n          </div>\r\n          \r\n          <h3>RouteTable</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Main</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Subnet association</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {routetableList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RouteTableList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RouteTableEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    text: '',\r\n\t  vpc: {},\r\n    vpcs: {},\r\n  \tvpcId : '',\r\n    def: false,\r\n    subnets: [],\r\n    subnetss: {},\r\n    subnetId: [],\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      subnetId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const routetable = await (await fetch(`${API_BASE_URL}/routeTables/${this.props.match.params.id}`)).json();\r\n      routetable.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        subnetId: false\r\n      };\r\n      this.setState({item: routetable});\r\n      \r\n      await fetch(API_BASE_URL + '/accounts/' + (routetable.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await (await fetch(API_BASE_URL + '/vpcs/' + (routetable.vpc.id) + '/subnets',)\r\n        .then((result) => { \r\n          \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetss = jsonResult;\r\n          \r\n          this.setState({item: item});\r\n      }));\r\n      \r\n      let item = {...this.state.item};\r\n      item.vpcId = routetable.vpc.id;\r\n      item.accountId = routetable.account.id;\r\n      var values = [];\r\n      item.subnets.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n\r\n      item.subnets = values;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const routetable = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        text: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        def: false,\r\n        subnets: [],\r\n        subnetss: {},\r\n        subnetId: [],\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetId: false\r\n        }\r\n      };\r\n      routetable.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetId: false\r\n      };\r\n      this.setState({item: routetable});\r\n    }\r\n    \r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*\r\n    await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    if(name === 'accessType')\r\n    {\r\n      if(value === 'default'){\r\n       //hide \r\n        item.def = true;\r\n      }\r\n      else\r\n      {\r\n        //show\r\n        item.def = false;\r\n      }\r\n    }\r\n    \r\n    if(name === 'subnetId')\r\n    {\r\n      var options = event.target.options;\r\n      var values = [];\r\n      for (var i = 0, l = options.length; i < l; i++) {\r\n        if (options[i].selected) {\r\n            if(item.subnetss && item.subnetss.length){\r\n                item.subnetss.map(s => { \r\n                  if(s.id == options[i].value) {\r\n                      values.push({\"id\": s.id});\r\n                  }\r\n              });\r\n            }\r\n        }\r\n      }\r\n      item.subnets = values;\r\n      this.setState({item});\r\n    }\r\n    \r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n\r\n      item.subnetId = '';\r\n      item.subnets = [];\r\n      item.subnetss = [];\r\n    }\r\n    if(name === 'vpcId')\r\n    {\r\n      \r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          vpcId: true,\r\n          subnetId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/routetables'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n    /*if(item.subnets && item.subnets.length) item.subnets.map(s => {  \r\n          //alert(\"subnet:\" + s.id + \" \" + item.subnets.length);\r\n    });*/\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/routeTables/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/routeTables', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetId, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      subnetId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.subnetId && subnetId && this.state.item.subnets.length === 0){\r\n      errors.subnetId = 'Add subnets to cover at least 2 availability zones.';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Route Table' : 'Add Route Table'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/routetables\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n    const def = item.def;\r\n\r\n    let optss = [];\r\n    if(item.subnetss && item.subnetss.length){\r\n      item.subnetss.map(s => {\r\n      \r\n          let isSelected = false;\r\n          if(item.subnets && item.subnets.length) item.subnets.map(ss => {\r\n             if(s.id == ss.id) isSelected = true;\r\n          });\r\n          optss.push(<option key={s.id} value={s.id} selected={isSelected}>{s.id} {s.name} {s.az.name}</option>);\r\n      });\r\n    }\r\n    let sub = item.subnetId || {};\r\n    item.subnetId = sub;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"subnetId\">Subnets (*)</Label>\r\n            <Input type=\"select\" name=\"subnetId\" id=\"subnetId\"   onChange={this.handleChange} onBlur={this.handleBlur('subnetId')} multiple\r\n                 valid={errors.subnetId === ''}\r\n                 invalid={errors.subnetId !== ''}\r\n            >\r\n            <option value=\"\" disabled>Choose</option>\r\n              {optss}\r\n            </Input>\r\n            <FormFeedback>{errors.subnetId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         <FormGroup tag=\"fieldset\">\r\n            <Label for=\"accessType\">Main (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"default\" checked={def === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                Yes\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"nodefault\" checked={def === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                No\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.accessType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(RouteTableEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RouteList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {routes: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/routetables/${this.props.match.params.id}/routes`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({routes: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/routetables/${accId}/routes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateRoute = [...this.state.routes].filter(i => i.id !== id);\r\n      this.setState({routes: updateRoute});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {routes, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const routeList = routes.map(route => {\r\n      \r\n      const link = API_BASE_URL + \"/routetables/\" + route.routeTable.id; \r\n      const prop= (route.propagation)? 'Yes': 'No';\r\n      \r\n      let peering = (route.peering) ? route.peering.id + '|' + route.peering.name : '';\r\n      let endPoint = (route.endPoint) ? route.endPoint.id + '|' + route.endPoint.name : '';\r\n\r\n      return <tr key={route.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{route.id}</td>\r\n\r\n        <td>{route.destination}</td>\r\n        <td>{route.targetType}</td>\r\n        <td>{route.target}</td>\r\n        <td>{peering}</td>\r\n        <td>{endPoint}</td>\r\n        <td>{prop}</td>\r\n        <td>{route.text}</td>\r\n        <td><a href={link}>{route.routeTable.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/routetable/\" + route.routeTable.id  + \"/routes/\" + route.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(route.routeTable.id, route.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/routetable/${this.props.match.params.id}/routes/new`;\r\n    const routetable = `${API_BASE_URL}/routetables`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={routetable}>Route table</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Route</Button>\r\n          </div>\r\n          \r\n          <h3>Route</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Destination</th>\r\n              <th width=\"5%\">Target Type</th>\r\n              <th width=\"5%\">Target</th>\r\n              <th width=\"5%\">Peering</th>\r\n              <th width=\"5%\">End Point</th>\r\n              <th width=\"5%\">Propagated</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Route Table</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {routeList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RouteList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass RouteEdit extends Component {\r\n\r\n  emptyItem = {\r\n    destination: '',\r\n    propagation:'',\r\n    text: '',\r\n    targetType: 'L',\r\n    peering:{},\r\n    peerings:[],\r\n    peeringId:'',\r\n    endPoint:{},\r\n    endPoints:[],\r\n    endPointId:'',\r\n    target:'Local',\r\n    routeTable: {},\r\n    touched: {\r\n      destination: false,\r\n      propagation: false,\r\n      target: false,\r\n      peeringId: false,\r\n      endPointId: false,\r\n      targetType: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const route = await (await fetch(`${API_BASE_URL}/routes/${this.props.match.params.id}`)).json();\r\n      route.touched = {\r\n        destination: false,\r\n        propagation: false,\r\n        target: false,\r\n        peeringId: false,\r\n        endPointId: false,\r\n        targetType: false\r\n      };\r\n      this.setState({item: route});\r\n\r\n      let item = {...this.state.item};\r\n      if(route.peering) item.peeringId = route.peering.id;\r\n      if(route.endPoint) item.endPointId = route.endPoint.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const routeTable = await (await fetch(`${API_BASE_URL}/routeTables/${this.props.match.params.idr}`)).json();\r\n      const route = {\r\n        destination: '',\r\n        propagation:'',\r\n        text: '',\r\n        target: 'Local',\r\n        targetType: 'L',\r\n        peering:{},\r\n        peerings:[],\r\n        peeringId:'',\r\n        endPoint:{},\r\n        endPoints:[],\r\n        endPointId:'',\r\n        routeTable: {},\r\n        touched: {\r\n          destination: false,\r\n          propagation: false,\r\n          target: false,\r\n          peeringId: false,\r\n          endPointId: false,\r\n          targetType: false\r\n        }\r\n      };\r\n      route.routeTable = routeTable;\r\n      route.touched = {\r\n          destination: false,\r\n          propagation: false,\r\n          target: false,\r\n          peeringId: false,\r\n          endPointId: false,\r\n          targetType: false\r\n      };\r\n      this.setState({item: route});\r\n    }\r\n\r\n    let item = {...this.state.item};\r\n    await fetch(API_BASE_URL + '/vpcs/' + item.routeTable.vpc.id + '/endPoints',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.endPoints = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    await fetch(API_BASE_URL + '/vpcs/' + item.routeTable.vpc.id + '/peerings',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.peerings = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'propagation')\r\n    {\r\n      if(value === 'prop'){\r\n       //prop\r\n        item.propagation = true;\r\n      }\r\n      else\r\n      {\r\n        //noprop\r\n        item.propagation = false;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          destination: true,\r\n          propagation: true,\r\n          target: true,\r\n          peeringId: true,\r\n          endPointId: true,\r\n          targetType: true\r\n    };\r\n    const errors = this.validate(item.destination, item.peeringId, item.endPointId, item.target, item.propgation, item.targetType);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/routetable/' + item.routeTable.id +'/routes'; \r\n\r\n    item.routeTable={id: item.routeTable.id};\r\n    \r\n    if(item.targetType === 'L')\r\n    {\r\n      item.peering = null;\r\n      item.endPoint = null;\r\n    }\r\n    else if(item.targetType === 'P')\r\n    {\r\n\r\n      item.target = '';\r\n      item.endPoint = null;\r\n      item.peering={id: item.peeringId};\r\n    }\r\n    else if(item.targetType === 'E')\r\n    {\r\n\r\n      item.peering = null;\r\n      item.target = '';\r\n      item.endPoint={id: item.endPointId};\r\n    }\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/routetables/' + (item.routeTable.id) + '/routes/'+(item.id) : API_BASE_URL + '/routetables/' + item.routeTable.id + '/routes', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(destination, peeringId, endPointId, target, propgation, targetType) {\r\n\r\n    const errors = {\r\n      destination: '',\r\n      propgation: '',\r\n      target:'',\r\n      peeringId:'',\r\n      endPointId:'',\r\n      targetType: ''\r\n\r\n    };\r\n    \r\n    if(this.state.item.touched.destination && destination.length === 0){\r\n      errors.destination = 'Destination should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.targetType && targetType.length === 0){\r\n      errors.targetType = 'targetType should not be null';\r\n      return errors;\r\n    } \r\n    else if(targetType === 'L' && this.state.item.touched.target && target.length === 0){\r\n      errors.target = 'Target should not be null';\r\n      return errors;\r\n    } \r\n    else if(targetType === 'P' && this.state.item.touched.peeringId && peeringId.length === 0){\r\n      errors.peeringId = 'peeringId should not be null';\r\n      return errors;\r\n    } \r\n    else if(targetType === 'E' && this.state.item.touched.endPointId && endPointId.length === 0){\r\n      errors.endPointId = 'endPointId should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.propgation && propgation.length === 0){\r\n      errors.propgation = 'Propgation should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit route' : 'Add route'}</h2>;\r\n\r\n    const errors = this.validate(item.destination, item.peeringId, item.endPointId, item.target, item.propgation, item.targetType);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/routetable/\" + item.routeTable.id + \"/routes\";\r\n\r\n    const prop = item.propagation;\r\n\r\n    let routetable = null;\r\n    routetable = <FormGroup>\r\n            <Label for=\"routetableId\">Nacl: {item.routeTable.name}</Label>\r\n            <Input type=\"text\" name=\"routetableId\" id=\"routetableId\" value={item.routeTable.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n    let optps = [];\r\n    if(item.peerings && item.peerings.length){\r\n      item.peerings.map(s => {  \r\n          optps.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let peering = item.peeringId || '';\r\n    item.peeringId = peering;\r\n\r\n    let optes = [];\r\n    if(item.endPoints && item.endPoints.length){\r\n      item.endPoints.map(s => {  \r\n          optes.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let endPoint = item.endPointId || '';\r\n    item.endPointId = endPoint;\r\n    \r\n    item.target = 'Local';\r\n    let target = (item.targetType === 'L') ? <FormGroup>\r\n            <Label for=\"target\">Target (*):</Label>\r\n            <Input type=\"text\" name=\"target\" id=\"target\" value={item.target || ''} placeholder=\"Enter target\" disabled='true'\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('target')} autoComplete=\"target\"\r\n                   valid={errors.target === ''}\r\n                   invalid={errors.target !== ''}\r\n            />\r\n           <FormFeedback>{errors.target}</FormFeedback>\r\n          </FormGroup> : '';\r\n    \r\n    let peerings = (item.targetType === 'P') ? <FormGroup>\r\n            <Label for=\"peeringId\">Peering (*)</Label>\r\n            <Input type=\"select\" name=\"peeringId\" id=\"peeringId\"  value={peering} onChange={this.handleChange} onBlur={this.handleBlur('peeringId')}\r\n                 valid={errors.peeringId === ''}\r\n                 invalid={errors.peeringId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optps}\r\n            </Input>\r\n            <FormFeedback>{errors.peeringId}</FormFeedback>\r\n          </FormGroup> : '';\r\n\r\n\r\n    let endPoints = (item.targetType === 'E') ? <FormGroup>\r\n            <Label for=\"endPointId\">End Point (*)</Label>\r\n            <Input type=\"select\" name=\"endPointId\" id=\"endPointId\"  value={endPoint} onChange={this.handleChange} onBlur={this.handleBlur('endPointId')}\r\n                 valid={errors.endPointId === ''}\r\n                 invalid={errors.endPointId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optes}\r\n            </Input>\r\n            <FormFeedback>{errors.endPointId}</FormFeedback>\r\n          </FormGroup> : '';\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          {routetable}\r\n          <FormGroup>\r\n            <Label for=\"destination\">Destination (*)</Label>\r\n            <Input type=\"text\" name=\"destination\" id=\"destination\" value={item.destination || ''} placeholder=\"Enter destination\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('destination')} autoComplete=\"destination\"\r\n                   valid={errors.destination === ''}\r\n                   invalid={errors.destination !== ''}\r\n            />\r\n           <FormFeedback>{errors.destination}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"targetType\">Target Type (*)</Label>\r\n            <Input type=\"select\" name=\"targetType\" id=\"targetType\" value={item.targetType || ''} \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('targetType')} \r\n                   valid={errors.targetType === ''}\r\n                   invalid={errors.targetType !== ''}\r\n              >            \r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"L\">Local</option>\r\n              <option value=\"P\">Peering</option>\r\n              <option value=\"E\">EndPoint</option>\r\n            </Input>\r\n           <FormFeedback>{errors.targetType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          {target}\r\n          {peerings}\r\n          {endPoints}\r\n\r\n          <FormGroup tag=\"fieldset\">\r\n            <Label for=\"propagation\">Propagated (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"propagation\" id=\"propagation\" value=\"prop\" checked={prop === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('propagation')} autoComplete=\"propagation\"\r\n                       valid={errors.propagation === ''}\r\n                       invalid={errors.propagation !== ''}\r\n                />{' '}\r\n                Yes\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"propagation\" id=\"propagation\" value=\"noprop\" checked={prop === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('propagation')} autoComplete=\"propagation\"\r\n                       valid={errors.propagation === ''}\r\n                       invalid={errors.propagation !== ''}\r\n                />{' '}\r\n                No\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.accessType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(RouteEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagRouteTableList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/routeTables/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/routeTables/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTagRouteTable = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTagRouteTable});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/routetables/\" + tag.routeTable.id; \r\n      //const allowdeny= (tag.allow)? 'Allow': 'Deny';\r\n      \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.routeTable.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/routetable/\" + tag.routeTable.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.routeTable.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/routetable/${this.props.match.params.id}/tags/new`;\r\n    const routetable = `${API_BASE_URL}/routetables`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={routetable}>Route Table</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add TagRouteTable</Button>\r\n          </div>\r\n          \r\n          <h3>TagRouteTable</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Nacl</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagRouteTableList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass TagRouteTableEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    routeTable: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const routeTable = await (await fetch(`${API_BASE_URL}/routeTables/${this.props.match.params.idr}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        routeTable: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.routeTable = routeTable;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/routetable/' + item.routeTable.id +'/tags'; \r\n\r\n    item.routeTable={id: item.routeTable.id};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/routeTables/' + (item.routeTable.id) + '/tags/'+(item.id) : API_BASE_URL + '/routeTables/' + item.routeTable.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/routetable/\" + item.routeTable.id + \"/tags\";\r\n\r\n    let routetable = null;\r\n    routetable = <FormGroup>\r\n            <Label for=\"routeTableId\">Nacl: {item.routeTable.name}</Label>\r\n            <Input type=\"text\" name=\"routeTableId\" id=\"routeTableId\" value={item.routeTable.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {routetable}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagRouteTableEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TargetGroupList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {targetgroups: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/targetGroups`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({targetgroups: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/targetGroups/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTargetGroup = [...this.state.targetgroups].filter(i => i.id !== id);\r\n      this.setState({targetgroups: updateTargetGroup});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {targetgroups, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const targetgroupList = targetgroups.map(targetgroup => {\r\n      \r\n    const link = API_BASE_URL + \"/vpcs/\" + targetgroup.vpc.id; \r\n    const linkAccount = \"/accounts/\" + targetgroup.account.id;\r\n    const isOverride= (targetgroup.ahportoverride)? 'Yes': 'No';      \r\n    const listener = (targetgroup.listener) ? targetgroup.listener.id + '[' + targetgroup.listener.lb.name + ']': '';\r\n    const isListener = (targetgroup.listener) ? true : false;\r\n    const stickySession = (targetgroup.stickySession) ? 'Enabled' : 'Disabled';\r\n      return <tr key={targetgroup.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{targetgroup.id}</td>\r\n        <td>{targetgroup.name}</td>\r\n        <td><a href={linkAccount}>{targetgroup.account.numAccount}</a></td>\r\n        <td>{targetgroup.protocole}</td>\r\n        <td>{targetgroup.port}</td>\r\n        <td>{targetgroup.type}</td>\r\n        <td>{targetgroup.hcprotocole}</td>\r\n        <td>{targetgroup.hcpath}</td>\r\n        <td>{isOverride}</td>\r\n        <td>{targetgroup.ahport}</td>\r\n        <td>{targetgroup.ahhealthythreshold}</td>\r\n        <td>{targetgroup.ahuhealthythreshold}</td>\r\n        <td>{targetgroup.ahtimeout}</td>\r\n        <td>{targetgroup.ahtinterval}</td>\r\n        <td>{targetgroup.ahsucesscode}</td>\r\n        \r\n        <td>{targetgroup.deregistrationDelay}</td>\r\n        <td>{targetgroup.shortStartDuration}</td>\r\n        <td>{stickySession}</td>\r\n\r\n        <td><a href={link}>{targetgroup.vpc.name}</a></td>\r\n        <td>{listener}</td>\r\n        <td>{targetgroup.text}</td>\r\n\t\t    \r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/targetgroup/\" + targetgroup.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/targetgroup/\" + targetgroup.id + \"/targets\" }>Targets</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/targetgroups/\" + targetgroup.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(targetgroup.vpc.id, targetgroup.id)} disabled={isListener}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/targetgroups/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add TargetGroup</Button>\r\n          </div>\r\n          \r\n          <h3>TargetGroup</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n    \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Protocole</th>\r\n              <th width=\"5%\">Port</th>\r\n              <th width=\"5%\">Type</th>\r\n              <th width=\"5%\">Protocole</th>\r\n              <th width=\"5%\">Path</th>\r\n              <th width=\"5%\">Portocole Override</th>\r\n              <th width=\"5%\">Port Override</th>\r\n              <th width=\"5%\">Healthy Threshold</th>\r\n              <th width=\"5%\">Unhealthy Threshold</th>\r\n              <th width=\"5%\">Timeout</th>\r\n              <th width=\"5%\">Interval</th>\r\n              <th width=\"5%\">Sucess Code</th>\r\n\r\n              <th width=\"5%\">DDY</th>\r\n              <th width=\"5%\">SSD</th>\r\n              <th width=\"5%\">sticky</th>\r\n\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Listener</th> \r\n              <th width=\"5%\">Description</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {targetgroupList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TargetGroupList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\nclass TargetGroupEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    text: '',\r\n\t  vpc: {},\r\n    vpcs: {},\r\n  \tvpcId : '',\r\n    protocole : '', \r\n    port : '', \r\n    type : '', \r\n    hcprotocole : '', \r\n    hcpath : '', \r\n    ahport : '', \r\n    ahhealthythreshold : '', \r\n    ahuhealthythreshold : '', \r\n    ahtimeout : '', \r\n    ahtinterval : '', \r\n    ahsucesscode : '',\r\n    ahportoverride: false,\r\n    deregistrationDelay:'', \r\n    shortStartDuration:'', \r\n    stickySession: false,\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      protocole : false, \r\n      port : false, \r\n      type : false, \r\n      hcprotocole : false, \r\n      hcpath : false, \r\n      ahport : false, \r\n      ahhealthythreshold : false, \r\n      ahuhealthythreshold : false, \r\n      ahtimeout : false, \r\n      ahtinterval : false, \r\n      ahsucesscode : false,\r\n      deregistrationDelay: false, \r\n      shortStartDuration: false\r\n  \r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const targetgroup = await (await fetch(`${API_BASE_URL}/targetGroups/${this.props.match.params.id}`)).json();\r\n      targetgroup.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        protocole : false, \r\n        port : false, \r\n        type : false, \r\n        hcprotocole : false, \r\n        hcpath : false, \r\n        ahport : false, \r\n        ahhealthythreshold : false, \r\n        ahuhealthythreshold : false, \r\n        ahtimeout : false, \r\n        ahtinterval : false, \r\n        ahsucesscode : false,\r\n        deregistrationDelay: false, \r\n        shortStartDuration: false\r\n      };\r\n      this.setState({item: targetgroup});\r\n      \r\n       await fetch(API_BASE_URL + '/accounts/' + (targetgroup.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      \r\n      let item = {...this.state.item};\r\n      item.vpcId = targetgroup.vpc.id;\r\n      item.accountId = targetgroup.account.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const targetgroup = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        text: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        protocole : '', \r\n        port : '', \r\n        type : '', \r\n        hcprotocole : '', \r\n        hcpath : '', \r\n        ahport : '', \r\n        ahhealthythreshold : '', \r\n        ahuhealthythreshold : '', \r\n        ahtimeout : '', \r\n        ahtinterval : '', \r\n        ahsucesscode : '',\r\n        ahportoverride: false,\r\n        deregistrationDelay:'', \r\n        shortStartDuration:'', \r\n        stickySession: false,\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          protocole : false, \r\n          port : false, \r\n          type : false, \r\n          hcprotocole : false, \r\n          hcpath : false, \r\n          ahport : false, \r\n          ahhealthythreshold : false, \r\n          ahuhealthythreshold : false, \r\n          ahtimeout : false, \r\n          ahtinterval : false, \r\n          ahsucesscode : false,\r\n          deregistrationDelay: false, \r\n          shortStartDuration: false\r\n        }\r\n      };\r\n      targetgroup.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          protocole : false, \r\n          port : false, \r\n          type : false, \r\n          hcprotocole : false, \r\n          hcpath : false, \r\n          ahport : false, \r\n          ahhealthythreshold : false, \r\n          ahuhealthythreshold : false, \r\n          ahtimeout : false, \r\n          ahtinterval : false, \r\n          ahsucesscode : false,\r\n          deregistrationDelay: false, \r\n          shortStartDuration: false\r\n      };\r\n      this.setState({item: targetgroup});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*\r\n    await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    if(name === 'accessType')\r\n    {\r\n      if(value === 'override'){\r\n       //hide \r\n        item.ahportoverride = true;\r\n      }\r\n      else\r\n      {\r\n        //show\r\n        item.ahportoverride = false;\r\n      }\r\n    }\r\n    if(name === 'stickySession')\r\n    {\r\n      item.stickySession = (target.checked) ? true: false;\r\n    }\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          vpcId: true,\r\n          protocole : true, \r\n          port : true, \r\n          type : true, \r\n          hcprotocole : true, \r\n          hcpath : true, \r\n          ahport : true, \r\n          ahhealthythreshold : true, \r\n          ahuhealthythreshold : true, \r\n          ahtimeout : true, \r\n          ahtinterval : true, \r\n          ahsucesscode : true,\r\n          deregistrationDelay: true, \r\n          shortStartDuration: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.protocole, item.port, item.type, item.hcprotocole, item.hcpath, item.ahport, item.ahhealthythreshold, \r\n      item.ahuhealthythreshold, item.ahtimeout, item.ahtinterval, item.ahsucesscode, item.ahportoverride, item.deregistrationDelay, item.shortStartDuration, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/targetgroups'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n\r\n    if(!item.ahportoverride)  item.ahport = item.port;\r\n\r\n    if(item.listener) item.listener={id: item.listener.id};\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/targetGroups/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/targetGroups', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, protocole, port, type, hcprotocole, hcpath, ahport, ahhealthythreshold, ahuhealthythreshold, ahtimeout, \r\n    ahtinterval, ahsucesscode, ahportoverride, deregistrationDelay, shortStartDuration, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      protocole: '', \r\n      port: '', \r\n      type: '',\r\n      hcprotocole: '',\r\n      hcpath: '',\r\n      ahport: '',\r\n      ahhealthythreshold: '',\r\n      ahuhealthythreshold: '',\r\n      ahtimeout: '',\r\n      ahtinterval: '',\r\n      ahsucesscode: '',\r\n      deregistrationDelay: '', \r\n      shortStartDuration: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.port && port.length === 0){\r\n      errors.port = 'port should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.protocole && protocole.length === 0){\r\n      errors.protocole = 'protocole should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.hcprotocole && hcprotocole.length === 0){\r\n      errors.hcprotocole = 'protocole should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.hcpath && hcpath.length === 0){\r\n      errors.hcpath = 'path should not be null';\r\n      return errors;\r\n    }\r\n    else if(ahportoverride && this.state.item.touched.ahport && ahport.length === 0){\r\n      errors.ahport = 'port should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.ahhealthythreshold && ahhealthythreshold.length === 0){\r\n      errors.ahhealthythreshold = 'healthy threshold should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.ahuhealthythreshold && ahuhealthythreshold.length === 0){\r\n      errors.ahuhealthythreshold = 'unhealthy threshold should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.ahtimeout && ahtimeout.length === 0){\r\n      errors.ahtimeout = 'timeout should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.ahtinterval && ahtinterval.length === 0){\r\n      errors.ahtinterval = 'interval should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.ahsucesscode && ahsucesscode.length === 0){\r\n      errors.ahsucesscode = 'sucess code should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.deregistrationDelay && deregistrationDelay.length === 0){\r\n      errors.deregistrationDelay = 'deregistrationDelay should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.shortStartDuration && shortStartDuration.length === 0){\r\n      errors.shortStartDuration = 'shortStartDuration should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Target Group' : 'Add Target Group'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.protocole, item.port, item.type, item.hcprotocole, item.hcpath, item.ahport, item.ahhealthythreshold, \r\n      item.ahuhealthythreshold, item.ahtimeout, item.ahtinterval, item.ahsucesscode, item.ahportoverride, item.deregistrationDelay, item.shortStartDuration, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/targetgroups\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n    \r\n    let isLinkListener = (item.listener) ? true: false;\r\n\r\n    const def = item.ahportoverride;\r\n    const portover= (def) ? <FormGroup>\r\n            <Label for=\"ahport\">Port (*)</Label>\r\n            <Input type=\"number\" name=\"ahport\" id=\"ahport\" value={item.ahport || ''} placeholder=\"Enter Port\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ahport')} autoComplete=\"ahport\"\r\n                   valid={errors.ahport === ''}\r\n                   invalid={errors.ahport !== ''}\r\n            />\r\n           <FormFeedback>{errors.ahport}</FormFeedback>\r\n          </FormGroup> : '';\r\n    \r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n         <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"protocole\">Protocole (*)</Label>\r\n            <Input type=\"select\" name=\"protocole\" id=\"protocole\" value={item.protocole || ''} disabled={isLinkListener}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('protocole')} \r\n                   valid={errors.protocole === ''}\r\n                   invalid={errors.protocole !== ''}\r\n              >            \r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"HTTP\">HTTP</option>\r\n              <option value=\"HTTPS\">HTTPS</option>\r\n              <option value=\"TCP\">TCP</option>\r\n            </Input>\r\n           <FormFeedback>{errors.protocole}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"port\">Port (*)</Label>\r\n            <Input type=\"number\" name=\"port\" id=\"port\" value={item.port || ''} placeholder=\"Enter port\" disabled={isLinkListener}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('port')} autoComplete=\"port\"\r\n                   valid={errors.port === ''}\r\n                   invalid={errors.port !== ''}\r\n            />\r\n           <FormFeedback>{errors.port}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"type\">Target type (*)</Label>\r\n            <Input type=\"select\" name=\"type\" id=\"type\" value={item.type || ''} onChange={this.handleChange} onBlur={this.handleBlur('type')} \r\n                 valid={errors.type === ''}\r\n                 invalid={errors.type !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"instance\">Instance</option>\r\n            </Input>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <Label for=\"\">Health check settings</Label>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"hcprotocole\">Protocole (*)</Label>\r\n            <Input type=\"select\" name=\"hcprotocole\" id=\"hcprotocole\" value={item.hcprotocole || ''} \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('hcprotocole')} \r\n                   valid={errors.hcprotocole === ''}\r\n                   invalid={errors.hcprotocole !== ''}\r\n                   >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"HTTP\">HTTP</option>\r\n              <option value=\"HTTPS\">HTTPS</option>\r\n            </Input>\r\n           <FormFeedback>{errors.hcprotocole}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"hcpath\">Path (*)</Label>\r\n            <Input type=\"text\" name=\"hcpath\" id=\"hcpath\" value={item.hcpath || ''} placeholder=\"Enter Path\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('hcpath')} autoComplete=\"hcpath\"\r\n                   valid={errors.hcpath === ''}\r\n                   invalid={errors.hcpath !== ''}\r\n            />\r\n           <FormFeedback>{errors.hcpath}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n\r\n          <Label for=\"\">Advanced health check settings</Label>\r\n\r\n\r\n          <FormGroup tag=\"fieldset\">\r\n            <Label for=\"accessType\">Port(*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"nooverride\" checked={def === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                traffic port\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"override\" checked={def === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                 override\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.accessType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {portover}\r\n\r\n          <FormGroup>\r\n            <Label for=\"ahhealthythreshold\">Healthy threshold (*)</Label>\r\n            <Input type=\"number\" name=\"ahhealthythreshold\" id=\"ahhealthythreshold\" value={item.ahhealthythreshold || ''} placeholder=\"Enter Healthy threshold\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ahhealthythreshold')} autoComplete=\"ahhealthythreshold\"\r\n                   valid={errors.ahhealthythreshold === ''}\r\n                   invalid={errors.ahhealthythreshold !== ''}\r\n            />\r\n           <FormFeedback>{errors.ahhealthythreshold}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"ahuhealthythreshold\">Unhealthy threshold (*)</Label>\r\n            <Input type=\"number\" name=\"ahuhealthythreshold\" id=\"ahuhealthythreshold\" value={item.ahuhealthythreshold || ''} placeholder=\"Enter Unhealthy threshold\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ahuhealthythreshold')} autoComplete=\"ahuhealthythreshold\"\r\n                   valid={errors.ahuhealthythreshold === ''}\r\n                   invalid={errors.ahuhealthythreshold !== ''}\r\n            />\r\n           <FormFeedback>{errors.ahuhealthythreshold}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"ahtinterval\">Interval (*)</Label>\r\n            <Input type=\"number\" name=\"ahtinterval\" id=\"ahtinterval\" value={item.ahtinterval || ''} placeholder=\"Enter Interval\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ahtinterval')} autoComplete=\"ahtinterval\"\r\n                   valid={errors.ahtinterval === ''}\r\n                   invalid={errors.ahtinterval !== ''}\r\n            />\r\n           <FormFeedback>{errors.ahtinterval}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"ahtimeout\">Timeout (*)</Label>\r\n            <Input type=\"number\" name=\"ahtimeout\" id=\"ahtimeout\" value={item.ahtimeout || ''} placeholder=\"Enter Timeout\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ahtimeout')} autoComplete=\"ahtimeout\"\r\n                   valid={errors.ahtimeout === ''}\r\n                   invalid={errors.ahtimeout !== ''}\r\n            />\r\n           <FormFeedback>{errors.ahtimeout}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"ahsucesscode\">Sucess codes (*)</Label>\r\n            <Input type=\"text\" name=\"ahsucesscode\" id=\"ahsucesscode\" value={item.ahsucesscode || ''} placeholder=\"Enter Sucess code\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ahsucesscode')} autoComplete=\"ahsucesscode\"\r\n                   valid={errors.ahsucesscode === ''}\r\n                   invalid={errors.ahsucesscode !== ''}\r\n            />\r\n           <FormFeedback>{errors.ahsucesscode}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"deregistrationDelay\">deregistrationDelay (*)</Label>\r\n            <Input type=\"number\" name=\"deregistrationDelay\" id=\"deregistrationDelay\" value={item.deregistrationDelay || ''} placeholder=\"Enter deregistrationDelay\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('deregistrationDelay')} autoComplete=\"deregistrationDelay\"\r\n                   valid={errors.deregistrationDelay === ''}\r\n                   invalid={errors.deregistrationDelay !== ''}\r\n            />\r\n           <FormFeedback>{errors.deregistrationDelay}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"shortStartDuration\">shortStartDuration (*)</Label>\r\n            <Input type=\"number\" name=\"shortStartDuration\" id=\"shortStartDuration\" value={item.shortStartDuration || ''} placeholder=\"Enter shortStartDuration\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('shortStartDuration')} autoComplete=\"shortStartDuration\"\r\n                   valid={errors.shortStartDuration === ''}\r\n                   invalid={errors.shortStartDuration !== ''}\r\n            />\r\n           <FormFeedback>{errors.shortStartDuration}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup >\r\n            <Label for=\"stickySession\" >stickySession:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"stickySession\" id=\"stickySession\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('stickySession')} \r\n                    checked={item.stickySession === true}/>\r\n          </FormGroup>\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TargetGroupEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TargetList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {targets: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/targetGroups/${this.props.match.params.id}/targets`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({targets: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/targetGroups/${accId}/targets/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTarget = [...this.state.targets].filter(i => i.id !== id);\r\n      this.setState({targets: updateTarget});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {targets, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const targetList = targets.map(target => {\r\n      \r\n      const link = API_BASE_URL + \"/targetgroups/\" + target.targetGroup.id; \r\n      \r\n\r\n      return <tr key={target.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{target.id}</td>\r\n\r\n        <td>{target.ecc.id} {target.ecc.name}</td>\r\n        <td>{target.port}</td>\r\n        <td>{target.ecc.subnet.az.name}</td>\r\n        <td><a href={link}>{target.targetGroup.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/targetgroup/\" + target.targetGroup.id  + \"/targets/\" + target.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(target.targetGroup.id, target.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `/targetgroup/${this.props.match.params.id}/targets/new`;\r\n    const targetgroup = `/targetgroups`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={targetgroup}>Target Group</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Target</Button>\r\n          </div>\r\n          \r\n          <h3>Target</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Ec2</th>\r\n              <th width=\"5%\">Port</th>\r\n              <th width=\"5%\">Az</th>\r\n              <th width=\"5%\">Target Group</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {targetList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TargetList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\nconst cidrRegex = require('cidr-regex');\r\nclass TargetEdit extends Component {\r\n\r\n  emptyItem = {\r\n    \r\n    port: '',\r\n    targetGroup: {},\r\n    eccId:'',\r\n    ecc:{},\r\n    eccs:[],\r\n    touched: {\r\n      \r\n      port: false,\r\n      eccId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const target = await (await fetch(`${API_BASE_URL}/targets/${this.props.match.params.id}`)).json();\r\n      target.touched = {\r\n        port: false,\r\n        eccId: false\r\n      };\r\n      this.setState({item: target});\r\n      let item = {...this.state.item};\r\n      item.eccId = target.ecc.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const targetGroup = await (await fetch(`${API_BASE_URL}/targetGroups/${this.props.match.params.idt}`)).json();\r\n      const target = {\r\n          port: '',\r\n          targetGroup: {},\r\n          eccId:'',\r\n          ecc:{},\r\n          eccs:[],\r\n          touched: {\r\n            port: false,\r\n            eccId: false\r\n          }\r\n      };\r\n      target.targetGroup = targetGroup;\r\n      target.touched = {\r\n          port: false,\r\n          eccId: false\r\n      };\r\n      this.setState({item: target});\r\n    }\r\n\r\n    let item = {...this.state.item};\r\n    await fetch(API_BASE_URL + '/vpcs/'  + item.targetGroup.vpc.id + '/eccs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.eccs = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          port: true,\r\n          eccId: true\r\n    };\r\n    const errors = this.validate(item.port, item.eccId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n     item.port = Number(item.port);\r\n     item.ecc = {id: item.eccId};\r\n    //console.log(\"port\" + item.port);\r\n    //return;\r\n    const hist= API_BASE_URL + '/targetgroup/' + item.targetGroup.id +'/targets'; \r\n\r\n    item.targetGroup={id: item.targetGroup.id};\r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/targetGroups/' + (item.targetGroup.id) + '/targets/'+(item.id) : API_BASE_URL + '/targetGroups/' + (item.targetGroup.id) + '/targets', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(port, eccId) {\r\n\r\n    const errors = {\r\n      \r\n      port:'',\r\n      eccId:''\r\n    };\r\n    \r\n    if(this.state.item.touched.eccId && eccId.length === 0){\r\n      errors.eccId = 'Ec2 should not be null';\r\n      return errors;\r\n    } \r\n    if(this.state.item.touched.port && port.length === 0){\r\n      errors.port = 'port should not be null';\r\n      return errors;\r\n    } \r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit target' : 'Add target'}</h2>;\r\n\r\n    const errors = this.validate(item.port, item.eccId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/targetgroup/\" + item.targetGroup.id + \"/targets\";\r\n\r\n    const prop = item.propagation;\r\n\r\n    let targetgroup = null;\r\n    targetgroup = <FormGroup>\r\n            <Label for=\"targetgroupId\">Target Group: {item.targetGroup.name}</Label>\r\n            <Input type=\"text\" name=\"targetgroupId\" id=\"targetgroupId\" value={item.targetGroup.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n    let optEccs = [];\r\n    if(item.eccs && item.eccs.length){\r\n      item.eccs.map(s => {  \r\n          optEccs.push(<option value={s.id}>{s.id} {s.name} {s.subnet.az.name} </option>);\r\n      });\r\n    }\r\n    let ecc = item.eccId || '';\r\n    item.eccId = ecc;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          {targetgroup}\r\n\r\n          <FormGroup>\r\n            <Label for=\"eccId\">Ec2 (*)</Label>\r\n            <Input type=\"select\" name=\"eccId\" id=\"eccId\" value={item.eccId || ''} placeholder=\"Enter ecc\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('eccId')} autoComplete=\"eccId\"\r\n                   valid={errors.eccId === ''}\r\n                   invalid={errors.eccId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optEccs}\r\n            </Input>\r\n           <FormFeedback>{errors.eccId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"port\">Port (*)</Label>\r\n            <Input type=\"number\" name=\"port\" id=\"port\" value={item.port || ''} placeholder=\"Enter port\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('port')} autoComplete=\"port\"\r\n                   valid={errors.port === ''}\r\n                   invalid={errors.port !== ''}\r\n            />\r\n           <FormFeedback>{errors.port}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TargetEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagTargetGroupList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/targetGroups/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/targetGroups/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTagTargetGroup = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTagTargetGroup});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/targetgroups/\" + tag.targetGroup.id; \r\n      //const allowdeny= (tag.allow)? 'Allow': 'Deny';\r\n      \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.targetGroup.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/targetgroup/\" + tag.targetGroup.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.targetGroup.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/targetgroup/${this.props.match.params.id}/tags/new`;\r\n    const targetgroup = `${API_BASE_URL}/targetgroups`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={targetgroup}>Target Group</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add TagTargetGroup</Button>\r\n          </div>\r\n          \r\n          <h3>TagTargetGroup</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Target Group</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagTargetGroupList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass TagTargetGroupEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    targetGroup: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const targetGroup = await (await fetch(`${API_BASE_URL}/targetGroups/${this.props.match.params.idr}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        targetGroup: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.targetGroup = targetGroup;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/targetgroup/' + item.targetGroup.id +'/tags'; \r\n\r\n    item.targetGroup={id: item.targetGroup.id};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/targetGroups/' + (item.targetGroup.id) + '/tags/'+(item.id) : API_BASE_URL + '/targetGroups/' + item.targetGroup.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/targetgroup/\" + item.targetGroup.id + \"/tags\";\r\n\r\n    let targetgroup = null;\r\n    targetgroup = <FormGroup>\r\n            <Label for=\"targetGroupId\">Nacl: {item.targetGroup.name}</Label>\r\n            <Input type=\"text\" name=\"targetGroupId\" id=\"targetGroupId\" value={item.targetGroup.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {targetgroup}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagTargetGroupEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass LbList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {lbs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/lbs`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({lbs: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/lbs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateLb = [...this.state.lbs].filter(i => i.id !== id);\r\n      this.setState({lbs: updateLb});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {lbs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const lbList = lbs.map(lb => {\r\n      \r\n    const link = API_BASE_URL + \"/vpcs/\" + lb.vpc.id; \r\n    const linkAccount = API_BASE_URL + \"/accounts/\" + lb.account.id;\r\n    const isInternal= (lb.scheme)? 'internal': 'internet-facing';   \r\n    const ipType = (lb.ipType === 'ipv6')? 'dualstack': lb.ipType;  \r\n     \r\n    const deletionProtection = (lb.deletionProtection)? 'Enabled' : 'Disabled';\r\n    const crossZoneLoadBalancing = (lb.crossZoneLoadBalancing)? 'Enabled' : 'Disabled';\r\n    const http2 = (lb.http2)? 'Enabled' : 'Disabled';\r\n    const accessLogs = (lb.accessLogs)? 'Enabled' : 'Disabled';\r\n    \r\n    let subnets = '';\r\n    const lbSubnets = lb.subnets.map(subnet => {\r\n      subnets = subnets + '|' + subnet.id + ':' + subnet.name;\r\n    })\r\n    let sgs = '';\r\n    const lbSgs = lb.sgs.map(sg => {\r\n      sgs = sgs + '|' + sg.id + ':' + sg.name;\r\n    })\r\n\r\n      return <tr key={lb.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{lb.id}</td>\r\n        <td>{lb.name}</td>\r\n        <td><a href={linkAccount}>{lb.account.numAccount}</a></td>\r\n        <td>{isInternal}</td>\r\n        <td>{lb.type}</td>\r\n        <td>{ipType}</td>\r\n        <td><a href={link}>{lb.vpc.name}</a></td>\r\n         <td>{deletionProtection}</td>\r\n         <td>{crossZoneLoadBalancing}</td>\r\n         <td>{lb.idleTimeout}</td>\r\n         <td>{http2}</td>\r\n         <td>{accessLogs}</td>\r\n         <td>{lb.connectionDraining}</td>\r\n         <td>{subnets}</td>\r\n         <td>{sgs}</td>\r\n        <td>{lb.text}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/lb/\" + lb.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/lb/\" + lb.id + \"/listeners\" }>Listeners</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/lbs/\" + lb.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(lb.vpc.id, lb.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/lbs/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Lb</Button>\r\n          </div>\r\n          \r\n          <h3>Lb</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n    \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Scheme</th>\r\n              <th width=\"5%\">Type</th>\r\n              <th width=\"5%\">IP address type</th>\r\n              <th width=\"5%\">Vpc</th> \r\n\r\n              <th width=\"5%\">Deletion Protection</th>\r\n              <th width=\"5%\">Cross-Zone Load Balancing</th>\r\n              <th width=\"5%\">Idle timeout</th>\r\n              <th width=\"5%\">HTTP/2</th>\r\n              <th width=\"5%\">Access logs Disabled</th>\r\n              <th width=\"5%\">Connection Draining</th>\r\n              <th width=\"5%\">Subnets</th>\r\n              <th width=\"5%\">Security Group</th>\r\n              <th width=\"5%\">Description</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {lbList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LbList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass LbEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n\t  vpc: {},\r\n    vpcs: {},\r\n  \tvpcId : '',\r\n    type : '',\r\n    ipType: '',\r\n    scheme: true,\r\n    subnetss: {},\r\n    subnets: [],\r\n    subnetId: [],\r\n    sgss: {},\r\n    sgs: [],\r\n    sgId: [],\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      type : false,\r\n      ipType: false,\r\n      subnetId: false,\r\n      sgId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const lb = await (await fetch(`${API_BASE_URL}/lbs/${this.props.match.params.id}`)).json();\r\n      lb.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        type : false,\r\n        ipType: false,\r\n        subnetId: false,\r\n        sgId: false\r\n      };\r\n      this.setState({item: lb});\r\n      \r\n      let vp={};\r\n      \r\n      await fetch(API_BASE_URL + '/accounts/' + (lb.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await (await fetch(API_BASE_URL + '/vpcs/' + (lb.vpc.id) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      \r\n        await (await fetch(API_BASE_URL + '/vpcs/' + (lb.vpc.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      \r\n\r\n      let item = {...this.state.item};\r\n      item.vpcId = lb.vpc.id;\r\n      item.accountId = lb.account.id;\r\n      var values = [];\r\n      item.subnets.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.subnets = values;\r\n\r\n      values = [];\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.sgs = values;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const lb = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        text: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        type : '',\r\n        ipType: '',\r\n        scheme: true,\r\n        subnetss: {},\r\n        subnets: [],\r\n        subnetId: [],\r\n        sgss: {},\r\n        sgs: [],\r\n        sgId: [],\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          type : false,\r\n          ipType: false,\r\n          subnetId: false,\r\n          sgId: false\r\n        }\r\n      };\r\n      lb.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          type : false,\r\n          ipType: false,\r\n          subnetId: false,\r\n          sgId: false\r\n      };\r\n      this.setState({item: lb});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const name = target.name; \r\n    const value = target.value;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'accessType')\r\n    {\r\n      if(value === 'internal'){\r\n        item.scheme = true;\r\n      }\r\n      else\r\n      {\r\n        item.scheme = false;\r\n      }\r\n    }\r\n    else if(name === 'deletionProtection')\r\n    {\r\n      item.deletionProtection = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'crossZoneLoadBalancing')\r\n    {\r\n      item.crossZoneLoadBalancing = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'http2')\r\n    {\r\n      item.http2 = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'accessLogs')\r\n    {\r\n      item.accessLogs = (target.checked) ? true: false;\r\n    }\r\n\r\n    else if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      item.sgsId = '';\r\n      item.sgs = [];\r\n      item.sgss = [];\r\n      \r\n      item.subnetId = '';\r\n      item.subnets = [];\r\n      item.subnetss = [];\r\n      \r\n      \r\n    }\r\n\r\n    else if(name === 'vpcId')\r\n    {\r\n      let vp={};\r\n      \r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      \r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          vpcId: true,\r\n          type : true,\r\n          ipType: true,\r\n          subnetId: true,\r\n          sgId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.type, item.scheme, item.ipType, item.subnetId, item.subnets, item.sgId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/lbs'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n\r\n    if(item.scheme) \r\n    {\r\n      item.ipType='ipv4';\r\n    }\r\n    if(item.type !== 'ALB'){\r\n      item.sgs = [];\r\n    }\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/lbs/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/lbs', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, type, scheme, ipType, subnetId, subnets, sgId, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      type: '',\r\n      ipType: '',\r\n      subnetId: '',\r\n      sgId: ''\r\n    };\r\n    \r\n    //if(subnetId) console.log(\"subnets.length=\" + subnets.length);\r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'type should not be null';\r\n      return errors;\r\n    }\r\n    else if(!scheme && this.state.item.touched.ipType && ipType.length === 0){\r\n      errors.ipType = 'Ip type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.subnetId && subnetId && type === 'ALB' && subnets.length <= 1){\r\n      //alert('tttttt');\r\n      errors.subnetId = 'Add subnets to cover at least 2 availability zones.';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.subnetId && subnetId && type === 'NLB' && subnets.length <= 0){\r\n      errors.subnetId = 'Add subnets to cover at least 1 availability zones.';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.subnetId && subnetId && type === 'ELB' && subnets.length <= 0){\r\n      errors.subnetId = 'Add subnets to cover at least 1 availability zones.';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'sgId')\r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.sgss && item.sgss.length){\r\n              item.sgss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.sgs = values;\r\n      }\r\n      else if(selectName === 'subnetId')\r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {\r\n          if(item.subnetss && item.subnetss.length){\r\n              item.subnetss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.subnets = values;\r\n      }\r\n      this.setState({item});\r\n  };\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Target Group' : 'Add Target Group'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.type, item.scheme, item.ipType, item.subnetId, item.subnets, item.sgId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/lbs\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n\r\n    let isInternal = item.scheme;\r\n    \r\n    let iptype = (!item.scheme && item.type === 'ALB') ? <FormGroup>\r\n            <Label for=\"ipType\">IP address type (*)</Label>\r\n            <Input type=\"select\" name=\"ipType\" id=\"ipType\"  value={item.ipType || ''} onChange={this.handleChange} onBlur={this.handleBlur('ipType')}\r\n                 valid={errors.ipType === ''}\r\n                 invalid={errors.ipType !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"ipv4\" >ipv4</option>\r\n              <option value=\"ipv6\" >dualstack</option>\r\n            </Input>\r\n            <FormFeedback>{errors.ipType}</FormFeedback>\r\n          </FormGroup> : <FormGroup>\r\n            <Label for=\"ipType\">IP address type (*)</Label>\r\n            <Input type=\"select\" name=\"ipType\" id=\"ipType\"  value={item.ipType || ''} onChange={this.handleChange} onBlur={this.handleBlur('ipType')} disabled=\"true\"\r\n                 valid={errors.ipType === ''}\r\n                 invalid={errors.ipType !== ''}\r\n            >\r\n              <option value=\"ipv4\" >ipv4</option>\r\n            </Input>\r\n            <FormFeedback>{errors.ipType}</FormFeedback>\r\n          </FormGroup>;\r\n    \r\n    const connectionDraining = (item.type === 'ELB') ? <FormGroup>\r\n            <Label for=\"connectionDraining\">Connection Draining</Label>\r\n            <Input type=\"number\" name=\"connectionDraining\" id=\"connectionDraining\" value={item.connectionDraining || ''} placeholder=\"Enter connectionDraining\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('connectionDraining')} autoComplete=\"connectionDraining\"\r\n            />\r\n          </FormGroup> : '';\r\n    \r\n    const crossZoneLoadBalancing = (item.type !== 'ALB') ? <FormGroup check>\r\n            <Label for=\"crossZoneLoadBalancing\" check>Cross-Zone Load Balancing:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"crossZoneLoadBalancing\" id=\"crossZoneLoadBalancing\" onChange={this.handleChange} onBlur={this.handleBlur('crossZoneLoadBalancing')} \r\n                    checked={item.crossZoneLoadBalancing === true}/>\r\n          </FormGroup> : '';\r\n    \r\n    const idleTimeout = (item.type !== 'NLB') ? <FormGroup>\r\n            <Label for=\"idleTimeout\">Idle timeout</Label>\r\n            <Input type=\"number\" name=\"idleTimeout\" id=\"idleTimeout\" value={item.idleTimeout || ''} placeholder=\"Enter idleTimeout\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('idleTimeout')} autoComplete=\"idleTimeout\"\r\n            />\r\n          </FormGroup> : '';\r\n    const http2 = (item.type === 'ALB') ? <FormGroup check>\r\n            <Label for=\"http2\" check>HTTP/2:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"http2\" id=\"http2\" onChange={this.handleChange} onBlur={this.handleBlur('http2')} \r\n                    checked={item.http2 === true}/>\r\n          </FormGroup> : '';\r\n    const accessLogs = (item.type !== 'NLB') ? <FormGroup check>\r\n            <Label for=\"accessLogs\" check>Access logs:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"accessLogs\" id=\"accessLogs\" onChange={this.handleChange} onBlur={this.handleBlur('accessLogs')} \r\n                    checked={item.accessLogs === true}/>\r\n          </FormGroup> : '';\r\n\r\n    let optss = [];\r\n    let optsss = [];\r\n    if(item.subnetss && item.subnetss.length){\r\n      item.subnetss.map(s => {\r\n      \r\n          if(item.subnets && item.subnets.length) item.subnets.map(ss => {\r\n             if(s.id == ss.id) optsss.push({value: s.id, label: s.name + \"   \" + s.az.name});\r\n          });\r\n          optss.push({value: s.id, label: s.name + \"   \" + s.az.name});\r\n      });\r\n    }\r\n    const subnets = <FormGroup>\r\n            <Label for=\"subnetId\">Subnets (*)</Label>\r\n\r\n            <Select name=\"subnetId\" id=\"subnetId\"  placeholder=\"Enter Subnet\" isMulti isSearchable \r\n              value={optsss}\r\n              onChange={e => this.onOptionChange(\"subnetId\",e)}\r\n              onBlur={this.handleBlur('subnetId')}\r\n              options={optss}/>\r\n              <FormFeedback>{errors.subnetId}</FormFeedback>\r\n          </FormGroup>\r\n          ;\r\n    let sub = item.subnetId || {};\r\n    item.subnetId = sub;\r\n\r\n    let optsg = [];  \r\n    let optsgs = [];\r\n    if(item.sgss && item.sgss.length){\r\n      item.sgss.map(s => {  \r\n          if(item.sgs && item.sgs.length) item.sgs.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsgs.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsg.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n    const securityGroup = (item.type === 'ALB') ? <FormGroup>\r\n            <Label for=\"sgId\">Security Group (*)</Label>\r\n            <Select name=\"sgId\" id=\"sgId\"  placeholder=\"Enter Security group\" isMulti \r\n              value={optsgs}\r\n              onChange={e => this.onOptionChange(\"sgId\",e)}\r\n              onBlur={this.handleBlur('sgId')}\r\n              options={optsg}\r\n\r\n            />\r\n            <FormFeedback>{errors.sgId}</FormFeedback>\r\n          </FormGroup> : '';\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n         <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"type\">Target type (*)</Label>\r\n            <Input type=\"select\" name=\"type\" id=\"type\" value={item.type || ''} onChange={this.handleChange} onBlur={this.handleBlur('type')} \r\n                 valid={errors.type === ''}\r\n                 invalid={errors.type !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"ALB\">ALB</option>\r\n              <option value=\"NLB\">NLB</option>\r\n              <option value=\"ELB\">ELB (deprecated)</option>\r\n            </Input>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup tag=\"fieldset\">\r\n            <Label for=\"accessType\">Scheme(*)</Label>\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"internet\" checked={isInternal === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                internet-facing\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"internal\" checked={isInternal === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                 internal\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.accessType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {iptype}\r\n          \r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {subnets}\r\n      \r\n          {securityGroup}\r\n\r\n          <FormGroup check>\r\n            <Label for=\"deletionProtection\" check>Deletion Protection:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"deletionProtection\" id=\"deletionProtection\" onChange={this.handleChange} onBlur={this.handleBlur('deletionProtection')} \r\n                    checked={item.deletionProtection === true}/>\r\n          </FormGroup>\r\n          \r\n          {crossZoneLoadBalancing}\r\n          {http2}\r\n          {accessLogs}\r\n          {idleTimeout}\r\n          {connectionDraining}\r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(LbEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass ListenerList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {listeners: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/lbs/${this.props.match.params.id}/listeners`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({listeners: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/lbs/${accId}/listeners/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateListener = [...this.state.listeners].filter(i => i.id !== id);\r\n      this.setState({listeners: updateListener});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {listeners, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const listenerList = listeners.map(listener => {\r\n      \r\n      const link = API_BASE_URL + \"/lbs/\" + listener.lb.id; \r\n      const targetGroup = (listener.targetGroup !== null) ? listener.targetGroup.id : '';\r\n      \r\n\r\n      return <tr key={listener.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{listener.id}</td>\r\n\r\n        <td>{listener.protocole}</td>\r\n        <td>{listener.port}</td>\r\n        <td><a href={link}>{listener.lb.name}</a></td>\r\n        <td>{targetGroup}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/lb/\" + listener.lb.id  + \"/listeners/\" + listener.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(listener.lb.id, listener.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/lb/${this.props.match.params.id}/listeners/new`;\r\n    const listener = `${API_BASE_URL}/lbs`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={listener}>Lbs</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Listener</Button>\r\n          </div>\r\n          \r\n          <h3>Listener</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Protocole</th>\r\n\r\n              <th width=\"5%\">Port</th>\r\n              \r\n              <th width=\"5%\">Lb</th> \r\n              <th width=\"5%\">Target group</th>\r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {listenerList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListenerList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\n\r\nclass ListenerEdit extends Component {\r\n\r\n  emptyItem = {\r\n    protocole: '',\r\n    port:'',\r\n    lb: {},\r\n    targetGroup: {},\r\n    targetGroups: [],\r\n    targetGroupId : '',\r\n    touched: {\r\n      protocole: false,\r\n      port: false,\r\n      targetGroupId : false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let vpcId = 0;\r\n    let listenerId = -1;\r\n    if (this.props.match.params.id !== 'new') {\r\n      const listener = await (await fetch(`${API_BASE_URL}/listeners/${this.props.match.params.id}`)).json();\r\n      listener.touched = {\r\n        protocole: false,\r\n        port: false,\r\n        targetGroupId : false\r\n      };\r\n      this.setState({item: listener});\r\n      let item = {...this.state.item};\r\n      item.targetGroupId = listener.targetGroup.id;\r\n      vpcId = listener.lb.vpc.id;\r\n      listenerId = listener.id;\r\n      this.setState({item: item});\r\n    }\r\n    else {\r\n      const lb = await (await fetch(`${API_BASE_URL}/lbs/${this.props.match.params.idl}`)).json();\r\n      const listener = {\r\n        protocole: '',\r\n        port:'',\r\n        lb: {},\r\n        touched: {\r\n          protocole: false,\r\n          port: false,\r\n          targetGroupId : false\r\n        }\r\n      };\r\n      listener.lb = lb;\r\n      listener.touched = {\r\n          protocole: false,\r\n          port: false,\r\n          targetGroupId : false\r\n      };\r\n      vpcId = lb.vpc.id;\r\n      this.setState({item: listener});\r\n    }\r\n    \r\n    //await fetch('/targetGroups',) /vpcs/{vp}/listeners/{listenerId}/targetGroups\r\n    await fetch(API_BASE_URL + '/vpcs/' + (vpcId) + '/listeners/' + (listenerId) + '/targetGroups',) \r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.targetGroups = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          protocole: true,\r\n          port: true,\r\n          targetGroupId : true\r\n    };\r\n    const errors = this.validate(item.protocole, item.port, item.targetGroupId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/lb/' + item.lb.id +'/listeners'; \r\n\r\n    item.lb={id: item.lb.id};\r\n    item.targetGroup={id: item.targetGroupId};\r\n    //console.log(\"sma\" + item.targetGroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/lbs/' + (item.lb.id) + '/listeners/'+(item.id) : API_BASE_URL + '/lbs/' + item.lb.id + '/listeners', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(protocole, port, targetGroupId) {\r\n\r\n    const errors = {\r\n      protocole: '',\r\n      port: '',\r\n      targetGroupId: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.protocole && protocole.length === 0){\r\n      errors.protocole = 'protocole should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.port && port.length === 0){\r\n      errors.port = 'port should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.targetGroupId && targetGroupId.length === 0){\r\n      errors.targetGroupId = 'targetGroupId should not be null';\r\n      return errors;\r\n    } \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit listener' : 'Add listener'}</h2>;\r\n\r\n    const errors = this.validate(item.protocole, item.port, item.targetGroupId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/lb/\" + item.lb.id + \"/listeners\";\r\n\r\n    let opts = [];\r\n    if(item.targetGroups && item.targetGroups.length){\r\n      item.targetGroups.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let tg = item.targetGroupId || '';\r\n    item.targetGroupId = tg;\r\n\r\n    let lb = null;\r\n    lb = <FormGroup>\r\n            <Label for=\"lbId\">load Balancer: {item.lb.name}</Label>\r\n            <Input type=\"text\" name=\"lbId\" id=\"lbId\" value={item.lb.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n    const optionTcp = (item.lb.type !== 'ALB') ? <option value=\"TCP\">TCP</option> : '';\r\n    const optionHttp = (item.lb.type !== 'NLB') ? <option value=\"HTTP\">HTTP</option> : '';\r\n    const optionHttps = (item.lb.type !== 'NLB') ? <option value=\"HTTPS\">HTTPS</option> : '';\r\n    const optionHssl = (item.lb.type === 'ELB') ? <option value=\"SSL\">TCP SSL</option> : '';\r\n    \r\n    \r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          {lb}\r\n          \r\n          <FormGroup>\r\n            <Label for=\"type\">Protocole (*)</Label>\r\n            <Input type=\"select\" name=\"protocole\" id=\"protocole\" value={item.protocole || ''} onChange={this.handleChange} onBlur={this.handleBlur('protocole')} \r\n                 valid={errors.protocole === ''}\r\n                 invalid={errors.protocole !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optionTcp}{optionHttp}{optionHttps}{optionHssl}\r\n            </Input>\r\n            <FormFeedback>{errors.protocole}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"port\">Port (*)</Label>\r\n            <Input type=\"number\" name=\"port\" id=\"port\" value={item.port || ''} placeholder=\"Enter port\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('port')} autoComplete=\"port\"\r\n                   valid={errors.port === ''}\r\n                   invalid={errors.port !== ''}\r\n            />\r\n           <FormFeedback>{errors.port}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"targetGroupId\">Target Group (*)</Label>\r\n            <Input type=\"select\" name=\"targetGroupId\" id=\"targetGroupId\"  value={tg} onChange={this.handleChange} onBlur={this.handleBlur('targetGroupId')}\r\n                 valid={errors.targetGroupId === ''}\r\n                 invalid={errors.targetGroupId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.targetGroupId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(ListenerEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagLbList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/lbs/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data =>   this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/lbs/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTagLb = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTagLb});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/lbs/\" + tag.lb.id; \r\n      //const allowdeny= (tag.allow)? 'Allow': 'Deny';\r\n      \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.lb.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/lb/\" + tag.lb.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.lb.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/lb/${this.props.match.params.id}/tags/new`;\r\n    const lb = `${API_BASE_URL}/lbs`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={lb}>Lb</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Tag</Button>\r\n          </div>\r\n          \r\n          <h3>TagLb</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Lb</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagLbList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass TagLbEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    lb: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const lb = await (await fetch(`${API_BASE_URL}/lbs/${this.props.match.params.idl}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        lb: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.lb = lb;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/lb/' + item.lb.id +'/tags'; \r\n\r\n    item.lb={id: item.lb.id};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/lbs/' + (item.lb.id) + '/tags/'+(item.id) : API_BASE_URL + '/lbs/' + item.lb.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/lb/\" + item.lb.id + \"/tags\";\r\n\r\n    let lb = null;\r\n    lb = <FormGroup>\r\n            <Label for=\"lbId\">Lb: {item.lb.name}</Label>\r\n            <Input type=\"text\" name=\"lbId\" id=\"lbId\" value={item.lb.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {lb}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagLbEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass PeeringList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {peerings: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    //fetch(`/trigrammes/${this.props.match.params.id}/products`)\r\n    fetch(`${API_BASE_URL}/peerings`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({peerings: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/peerings/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updatePeering = [...this.state.peerings].filter(i => i.id !== id);\r\n      this.setState({peerings: updatePeering});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {peerings, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const peeringList = peerings.map(peering => {\r\n      \r\n    const link = API_BASE_URL + \"/vpcs/\" + peering.vpc.id; \r\n    const linkAccount = API_BASE_URL + \"/accounts/\" + peering.account.id; \r\n          \r\n    const rVpc = peering.vpc.cidr.cidr;\r\n    const rOwner = peering.vpc.account.numAccount;\r\n    const rRegion  = peering.vpc.cidr.region.name;\r\n\r\n    const aVpc = (peering.type === 'External') ? peering.peeringAccepterExternal.vpcId : peering.peeringAccepterInternal.vpc.cidr.cidr;\r\n    const aOwner = (peering.type === 'External') ? peering.peeringAccepterExternal.owner : peering.peeringAccepterInternal.vpc.account.numAccount;\r\n    const aRegion  = (peering.type === 'External') ? peering.peeringAccepterExternal.region.name : peering.peeringAccepterInternal.vpc.cidr.region.name;\r\n\r\n    let routeTables = '';\r\n      if(peering.routes)peering.routes.map(s => {  \r\n        routeTables = routeTables + s.routeTable.id + \":\" + s.routeTable.name + \"| \"; \r\n    });\r\n\r\n    return <tr key={peering.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{peering.id}</td>\r\n        <td>{peering.name}</td>\r\n        <td><a href={linkAccount}>{peering.account.numAccount}</a></td>\r\n        <td>{peering.type}</td>\r\n        <td>{peering.text}</td>\r\n        \r\n        <td>{rVpc}</td>\r\n        <td>{rOwner}</td>\r\n        <td>{rRegion}</td>\r\n        <td>{aVpc}</td>\r\n        <td>{aOwner}</td>\r\n        <td>{aRegion}</td>\r\n        <td>{routeTables}</td>\r\n        <td><a href={link}>{peering.vpc.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/peering/\" + peering.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/peerings/\" + peering.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(peering.vpc.id, peering.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/peerings/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Peering</Button>\r\n          </div>\r\n          \r\n          <h3>Peering</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Type</th>\r\n              <th width=\"5%\">Description</th>\r\n\r\n              <th width=\"10%\">requester Vpc</th>\r\n              <th width=\"10%\">requester Owner</th>\r\n              <th width=\"10%\">requester region</th>\r\n               \r\n              <th width=\"10%\">Accepter Vpc</th>\r\n              <th width=\"10%\">Accepter Owner</th>\r\n              <th width=\"10%\">Accepter region</th>\r\n               \r\n              <th width=\"10%\">Route table</th>\r\n              <th width=\"5%\">Vpc</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {peeringList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PeeringList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass PeeringEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    text: '',\r\n    type:'',\r\n    owner: '',\r\n\t  vpc: {},\r\n    vpcs: {},\r\n  \tvpcId : '',\r\n    peeringAccepterExternal: {},\r\n    peeringAccepterInternal: {},\r\n    region: {},\r\n    regions:[],\r\n    regionId:'',\r\n    vpc2: {},\r\n    vpc2s: {},\r\n    vpc2Id : '',\r\n    vpceId: '',\r\n    touched: {\r\n      name: false,\r\n      vpcId: false,\r\n      type: false,\r\n      regionId: false,\r\n      owner: false,\r\n      vpc2Id: false,\r\n      vpceId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const peering = await (await fetch(`${API_BASE_URL}/peerings/${this.props.match.params.id}`)).json();\r\n      peering.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        type:false,\r\n        regionId: false,\r\n        owner: false,\r\n        vpc2Id: false,\r\n        vpceId: false\r\n      };\r\n      this.setState({item: peering});\r\n\r\n      await fetch(API_BASE_URL + '/accounts/' + (peering.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      let item = {...this.state.item};\r\n\r\n\r\n      item.vpcId = peering.vpc.id;\r\n      item.accountId = peering.account.id;\r\n\r\n      if(peering.type === 'External')\r\n      {\r\n        //item.peeringAccepterExternalId = peering.peeringAccepterExternalId.id;\r\n        item.regionId = peering.peeringAccepterExternal.region.id;\r\n        item.vpceId = peering.peeringAccepterExternal.vpcId;\r\n        item.owner = peering.peeringAccepterExternal.owner;\r\n        \r\n      }\r\n      else\r\n      {\r\n        await await(fetch(API_BASE_URL + '/accounts/' + (peering.peeringAccepterInternal.vpc.account.id) + '/vpcs',)\r\n        .then((result) => {\r\n          //console.log('change2');\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.vpc2s = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n\r\n        //item.peeringAccepterInternalId = peering.peeringAccepterInternalId.id;\r\n        item.regionId = peering.peeringAccepterInternal.vpc.cidr.region.id;\r\n        item.vpc2Id = peering.peeringAccepterInternal.vpc.id;\r\n        \r\n      }\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const peering = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        text: '',\r\n        type:'',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        owner:'',\r\n        peeringAccepterExternal: {},\r\n        peeringAccepterInternal: {},\r\n        region: {},\r\n        regionId:'',\r\n        vpc2: {},\r\n        vpc2s: {},\r\n        vpc2Id : '',\r\n        vpceId: '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          type:false,\r\n          regionId: false,\r\n          owner: false,\r\n          vpc2Id: false,\r\n          vpceId: false\r\n        }\r\n      };\r\n      peering.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          type:false,\r\n          regionId: false,\r\n          owner: false,\r\n          vpc2Id: false,\r\n          vpceId: false\r\n      };\r\n      peering.type = 'External';\r\n      this.setState({item: peering});\r\n    }\r\n\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    });*/\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    await fetch(API_BASE_URL + '/regions',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.regions = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n\r\n      item.vpc2Id = '';\r\n      item.vpc2s = [];\r\n    }\r\n\r\n    if(name === 'vpcId')\r\n    {\r\n\r\n      fetch(API_BASE_URL + '/vpcs/' + item.vpcId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        \r\n        let vp = jsonResult;\r\n        fetch(API_BASE_URL + '/accounts/' + (vp.account.id) + '/vpcs',)\r\n        .then((result) => {\r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.vpc2s = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n      });\r\n    }\r\n    if(name === 'type' && value === 'Internal')\r\n    {\r\n      fetch(API_BASE_URL + '/vpcs/' + item.vpcId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        \r\n        let vp = jsonResult;\r\n        \r\n        if(vp.account)\r\n        {\r\n          fetch(API_BASE_URL + '/accounts/' + (vp.account.id) + '/vpcs',)\r\n          .then((result) => {\r\n            return result.json();\r\n          }).then((jsonResult) => {\r\n            item.vpc2s = jsonResult;\r\n            this.setState({item: item});\r\n          });\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          vpcId: true,\r\n          type: true,\r\n          regionId: true,\r\n          owner: true,\r\n          vpc2Id: true,\r\n          vpceId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.type, item.regionId, item.owner, item.vpc2Id, item.vpceId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/peerings'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    \r\n    if(item.type === 'External')\r\n    {\r\n      item.peeringAccepterExternal = {\"owner\": item.owner, \"vpcId\": item.vpceId};\r\n      item.peeringAccepterExternal.region = {\"id\": item.regionId};\r\n      item.peeringAccepterInternal = null;\r\n    }\r\n    else\r\n    {\r\n      item.peeringAccepterInternal = {};\r\n      //console.log('vpc2=' + item.vpc2Id);\r\n      item.peeringAccepterInternal.vpc = {\"id\": item.vpc2Id};\r\n      item.peeringAccepterExternal = null;\r\n\r\n    }\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/peerings/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/peerings', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, type, regionId, owner, vpc2Id, vpceId, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      vpc2Id: '',\r\n      type: '',\r\n      regionId: '',\r\n      owner: '',\r\n      vpceId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc Requester should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'type should not be null';\r\n      return errors;\r\n    }\r\n  \r\n    if(type === 'Internal')\r\n    {\r\n      if(this.state.item.touched.vpc2Id && (!vpc2Id || vpc2Id.length === 0)){\r\n        errors.vpc2Id = 'Vpc Accepter should not be null';\r\n        return errors;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if(this.state.item.touched.vpceId && (!vpceId  || vpceId.length === 0)){\r\n        errors.vpceId = 'Vpc Accepter should not be null';\r\n        return errors;\r\n      }\r\n      else if(this.state.item.touched.regionId && (!regionId  || regionId.length === 0)){\r\n        errors.regionId = 'region should not be null';\r\n        return errors;\r\n      }\r\n      else if(this.state.item.touched.owner && (!owner  || owner.length === 0)){\r\n        errors.owner = 'owner should not be null';\r\n        return errors;\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Peering' : 'Add Peering'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.type, item.regionId, item.owner, item.vpc2Id, item.vpceId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/peerings\";\r\n    const def = (item.type === 'External') ? true : false;\r\n    const modif = (item.id) ? true : false;\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let optsr = [];\r\n    if(item.regions && item.regions.length){\r\n          item.regions.map(s => {  \r\n          optsr.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let reg = item.regionId || '';\r\n    item.regionId = reg;\r\n  \r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n    \r\n//\r\n    let optss = [];\r\n    if(item.vpc2s && item.vpc2s.length){\r\n      item.vpc2s.map(s => {    \r\n          let isSelected = false;\r\n          /*if(item.subnets && item.subnets.length) item.subnets.map(ss => {\r\n             if(s.id == ss.id) isSelected = true;\r\n          }); selected={isSelected}*/\r\n          optss.push(<option key={s.id} value={s.id} >{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc2 = item.vpc2Id || ''; \r\n    item.vpc2Id = vpc2;\r\n\r\n    const rregion = (item.type === 'External') ? <FormGroup>\r\n            <Label for=\"regionId\">Region (*)</Label>\r\n            <Input type=\"select\" name=\"regionId\" id=\"regionId\"  value={reg} onChange={this.handleChange} onBlur={this.handleBlur('regionId')}\r\n                 valid={errors.regionId === ''}\r\n                 invalid={errors.regionId !== ''}>\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsr}\r\n            </Input>\r\n            <FormFeedback>{errors.regionId}</FormFeedback>\r\n          </FormGroup> : '';\r\n    const rowner = (item.type === 'External') ? <FormGroup>\r\n            <Label for=\"owner\">Owner (*)</Label>\r\n            <Input type=\"text\" name=\"owner\" id=\"owner\" value={item.owner || ''} placeholder=\"Enter owner\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('owner')} autoComplete=\"owner\"\r\n                   valid={errors.owner === ''}\r\n                   invalid={errors.owner !== ''}/>\r\n           <FormFeedback>{errors.owner}</FormFeedback>\r\n           </FormGroup> : '';\r\n    const rvpc = (item.type === 'External') ? <FormGroup>\r\n            <Label for=\"vpceId\">VPC Accepter (*)</Label>\r\n            <Input type=\"text\" name=\"vpceId\" id=\"vpceId\" value={item.vpceId || ''} placeholder=\"Enter Vpc\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('vpceId')} autoComplete=\"vpceId\"\r\n                   valid={errors.vpceId === ''}\r\n                   invalid={errors.vpceId !== ''}/>\r\n           <FormFeedback>{errors.vpceId}</FormFeedback>\r\n          </FormGroup> : '';\r\n  \r\n   const rvpc2 = (item.type === 'Internal') ? <FormGroup>\r\n            <Label for=\"vpc2Id\">VPC Accepter (*)</Label>\r\n            <Input type=\"select\" name=\"vpc2Id\" id=\"vpc2Id\"   value={vpc2} onChange={this.handleChange} onBlur={this.handleBlur('vpc2Id')}\r\n                 valid={errors.vpc2Id === ''}\r\n                 invalid={errors.vpc2Id !== ''}\r\n            >\r\n            <option value=\"\" disabled>Choose</option>\r\n              {optss}\r\n            </Input>\r\n            <FormFeedback>{errors.vpc2Id}</FormFeedback>\r\n          </FormGroup> : '';\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n         <FormGroup tag=\"fieldset\">\r\n            <Label for=\"type\">External/ Internal (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"External\" checked={def === true} disabled = {modif}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                External\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"Internal\" checked={def === false} disabled = {modif}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                Internal\r\n              </Label>\r\n              </FormGroup>\r\n              <FormFeedback>{errors.type}</FormFeedback>\r\n            </FormGroup>\r\n\r\n          {rregion} {rowner} {rvpc}\r\n\r\n          {rvpc2} \r\n\r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(PeeringEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagPeeringList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/peerings/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data =>   this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/peerings/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTagPeering = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTagPeering});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/peerings/\" + tag.peering.id; \r\n      //const allowdeny= (tag.allow)? 'Allow': 'Deny';\r\n      \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.peering.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/peering/\" + tag.peering.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.peering.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/peering/${this.props.match.params.id}/tags/new`;\r\n    const peering = `${API_BASE_URL}/peerings`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={peering}>Peering</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add TagPeering</Button>\r\n          </div>\r\n          \r\n          <h3>TagPeering</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Peering</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagPeeringList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass TagPeeringEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    peering: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const peering = await (await fetch(`${API_BASE_URL}/peerings/${this.props.match.params.idp}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        peering: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.peering = peering;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/peering/' + item.peering.id +'/tags'; \r\n\r\n    item.peering={id: item.peering.id};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/peerings/' + (item.peering.id) + '/tags/'+(item.id) : API_BASE_URL + '/peerings/' + item.peering.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/peering/\" + item.peering.id + \"/tags\";\r\n\r\n    let peering = null;\r\n    peering = <FormGroup>\r\n            <Label for=\"peeringId\">Peering: {item.peering.name}</Label>\r\n            <Input type=\"text\" name=\"peeringId\" id=\"peeringId\" value={item.peering.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {peering}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagPeeringEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SgList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {sgs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/sgs`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({sgs: data, isLoading: false}));\r\n\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/sgs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateSg = [...this.state.sgs].filter(i => i.id !== id);\r\n      this.setState({sgs: updateSg});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {sgs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const sgList = sgs.map(sg => {\r\n      \r\n      const link = API_BASE_URL + \"/vpcs/\" + sg.vpc.id; \r\n      const linkAccount = API_BASE_URL + \"/accounts/\" + sg.account.id;  \r\n          \r\n      let lbs = '';\r\n      const sgLbs = sg.lbs.map(lb => {\r\n        lbs = lbs + '|' + lb;\r\n      })\r\n      \r\n      let eccs = '';\r\n      const sgEccs = sg.eccs.map(ecc => {\r\n        eccs = eccs + '|' + ecc ;\r\n      })\r\n\r\n      let rdss = '';\r\n      const sgRdss = sg.rdss.map(rds => {\r\n        rdss = rdss + '|' + rds ;\r\n      })\r\n\r\n      let elasticaches = '';\r\n      const sgElasticcaches = sg.elasticaches.map(e => {\r\n        elasticaches = elasticaches + '|' + e ;\r\n      })\r\n\r\n      let launchConfigurations = '';\r\n      const sglaunchConfigurations = sg.launchConfigurations.map(e => {\r\n        launchConfigurations = launchConfigurations + '|' + e ;\r\n      })\r\n\r\n      const isRds = (sg.rdss && sg.rdss.length !== 0) ? true : false;\r\n      const isElasticcaches = (sg.elasticaches && sg.elasticaches.length !== 0) ? true : false;\r\n      const isLb = (sg.lbs && sg.lbs.length !== 0) ? true : false;\r\n      const isEcc = (sg.eccs && sg.eccs.length !== 0) ? true : false;\r\n      const isLaunchConfiguration = (sg.launchConfigurations && sg.launchConfigurations.length !== 0) ? true : false;\r\n\r\n      return <tr key={sg.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{sg.id}</td>\r\n\r\n\r\n        <td>{sg.nameTag}</td>\r\n        <td>{sg.name}</td>\r\n        <td><a href={linkAccount}>{sg.account.numAccount}</a></td>\r\n        <td>{sg.text}</td>\r\n\r\n        <td>{rdss}</td>\r\n        <td>{elasticaches}</td>\r\n        <td>{lbs}</td>\r\n        <td>{eccs}</td>\r\n        <td>{launchConfigurations}</td>\r\n        <td><a href={link}>{sg.vpc.name}</a></td>\r\n\t\t    \r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/sg/\" + sg.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/sg/\" + sg.id + \"/ruleSgs\" }>Rules</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/sgs/\" + sg.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(sg.vpc.id, sg.id)} disabled={isRds || isLb || isEcc || isElasticcaches || isLaunchConfiguration}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/sgs/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Sg</Button>\r\n          </div>\r\n          \r\n          <h3>Sg</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name Tag</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Description</th>\r\n\r\n\r\n              <th width=\"5%\">Rds</th> \r\n              <th width=\"5%\">Elc</th> \r\n              <th width=\"5%\">Lb</th>               \r\n              <th width=\"5%\">Ec2</th>\r\n              <th width=\"5%\">Launch Conf</th>\r\n\r\n\r\n\r\n              <th width=\"5%\">Vpc</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {sgList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SgList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SgEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    nameTag: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    text: '',\r\n\t  vpc: {},\r\n    vpcs: {},\r\n  \tvpcId : '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const sg = await (await fetch(`${API_BASE_URL}/sgs/${this.props.match.params.id}`)).json();\r\n      sg.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false\r\n      };\r\n      this.setState({item: sg});\r\n      \r\n      await fetch(API_BASE_URL + '/accounts/' + (sg.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      }); \r\n\r\n      let item = {...this.state.item};\r\n      item.vpcId = sg.vpc.id;\r\n      item.accountId = sg.account.id;\r\n      \r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const sg = {\r\n        name: '',\r\n        accountId: false,\r\n        nameTag: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        text: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        touched: {\r\n          name: false,\r\n          vpcId: false\r\n        }\r\n      };\r\n      sg.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false\r\n      };\r\n      this.setState({item: sg});\r\n    }\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*\r\n    await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    \r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: true,\r\n          vpcId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/sgs'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    \r\n    let lbs = [];\r\n    if(item.lbs && item.lbs.length !== 0)\r\n    {\r\n      const sgLbs = item.lbs.map(lb => {\r\n          lbs.push({id: lb.id});\r\n      });\r\n      item.lbs = lbs;\r\n    }\r\n\r\n    let rdss = [];\r\n    if(item.rdss && item.rdss.length !== 0)\r\n    {\r\n      const sgRdss = item.rdss.map(rds => {\r\n          rdss.push({id: rds.id});\r\n      });\r\n      item.rdss = rdss;\r\n    }\r\n\r\n    let eccs = [];\r\n    if(item.eccs && item.eccs.length !== 0)\r\n    {\r\n      const sgEccs = item.eccs.map(ecc => {\r\n          eccs.push({id: ecc.id});\r\n      });\r\n      item.eccs = eccs;\r\n    }\r\n\r\n    let elasticaches = [];\r\n    if(item.elasticaches && item.elasticaches.length !== 0)\r\n    {\r\n      const sgElasticcachess = item.elasticaches.map(e => {\r\n          elasticaches.push({id: e.id});\r\n      });\r\n      item.elasticaches = elasticaches;\r\n    }\r\n\r\n     let launchConfigurations = [];\r\n    if(item.launchConfigurations && item.launchConfigurations.length !== 0)\r\n    {\r\n      const sglaunchConfigurations = item.launchConfigurations.map(e => {\r\n          launchConfigurations.push({id: e.id});\r\n      });\r\n      item.launchConfigurations = launchConfigurations;\r\n    }\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/sgs/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/sgs', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit sg' : 'Add sg'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/sgs\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n    \r\n    const isLb = (item.lbs && item.lbs.length !== 0) ? true : false;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          <FormGroup>\r\n            <Label for=\"nameTag\">Name tag (*)</Label>\r\n            <Input type=\"text\" name=\"nameTag\" id=\"nameTag\" value={item.nameTag || ''} placeholder=\"Enter nameTag\"\r\n                   onChange={this.handleChange} autoComplete=\"nameTag\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')} disabled={isLb}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')} disabled={isLb}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         \r\n\t\t      <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(SgEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RuleSgList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {ruleSgs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/sgs/${this.props.match.params.id}/ruleSgs`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ruleSgs: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/sgs/${accId}/ruleSgs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateRuleSg = [...this.state.ruleSgs].filter(i => i.id !== id);\r\n      this.setState({ruleSgs: updateRuleSg});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {ruleSgs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const ruleSgList = ruleSgs.map(ruleSg => {\r\n      \r\n      const link = API_BASE_URL + \"/sgs/\" + ruleSg.sg.id; \r\n      const allowdeny= (ruleSg.allow)? 'Allow': 'Deny';\r\n      \r\n\r\n      return <tr key={ruleSg.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{ruleSg.id}</td>\r\n\r\n\r\n        <td>{ruleSg.type}</td>\r\n        \r\n        <td>{ruleSg.ruleType}</td>\r\n        <td>{ruleSg.protocol}</td>\r\n        <td>{ruleSg.portRange}</td>\r\n        <td>{ruleSg.cidr}</td>\r\n\r\n\r\n\r\n\r\n        <td>{ruleSg.text}</td>\r\n        <td><a href={link}>{ruleSg.sg.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/sg/\" + ruleSg.sg.id  + \"/ruleSgs/\" + ruleSg.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(ruleSg.sg.id, ruleSg.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/sg/${this.props.match.params.id}/ruleSgs/new`;\r\n    const sg = `${API_BASE_URL}/sgs`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={sg}>Sg</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add RuleSg</Button>\r\n          </div>\r\n          \r\n          <h3>RuleSg</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">IN/OUT</th>\r\n              \r\n              <th width=\"5%\">Type</th>\r\n              <th width=\"5%\">Protocol</th>\r\n              <th width=\"5%\">PortRange</th>\r\n              <th width=\"5%\">Source/Destination</th>\r\n              \r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Sg</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {ruleSgList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RuleSgList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass RuleSgEdit extends Component {\r\n\r\n  emptyItem = {\r\n    type: '',\r\n    ruleType: '', \r\n    protocol:'', \r\n    portRange:'', \r\n    cidr: '',\r\n    text: '',\r\n    sg: {},\r\n    touched: {\r\n      type: false,\r\n      ruleType: false, \r\n      protocol: false, \r\n      portRange: false,\r\n      cidr: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const ruleSg = await (await fetch(`${API_BASE_URL}/ruleSgs/${this.props.match.params.id}`)).json();\r\n      ruleSg.touched = {\r\n        type: false, \r\n        ruleType: false, \r\n        protocol: false, \r\n        portRange: false, \r\n        cidr: false\r\n      };\r\n      this.setState({item: ruleSg});\r\n      \r\n    }\r\n    else {\r\n      const sg = await (await fetch(`${API_BASE_URL}/sgs/${this.props.match.params.ids}`)).json();\r\n      const ruleSg = {\r\n        ruleType: '', \r\n        protocol:'', \r\n        portRange:'', \r\n        cidr: '',\r\n        type: '',\r\n        text: '',\r\n        sg: {},\r\n        touched: {\r\n          type: false, \r\n          ruleType: false, \r\n          protocol: false, \r\n          portRange: false, \r\n          cidr: false\r\n        }\r\n      };\r\n      ruleSg.sg = sg;\r\n      ruleSg.touched = {\r\n          type: false, \r\n          ruleType: false, \r\n          protocol: false, \r\n          portRange: false, \r\n          cidr: false\r\n      };\r\n      this.setState({item: ruleSg});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          type: true, \r\n          ruleType: true, \r\n          protocol: true, \r\n          portRange: true, \r\n          cidr: true\r\n    };\r\n    const errors = this.validate(item.type, item.ruleType, item.protocol, item.portRange, item.cidr);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/sg/' + item.sg.id +'/ruleSgs'; \r\n\r\n    item.sg={id: item.sg.id};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/sgs/' + (item.sg.id) + '/ruleSgs/'+(item.id) : API_BASE_URL + '/sgs/' + item.sg.id + '/ruleSgs', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(type, ruleType, protocol, portRange, cidr) {\r\n\r\n    const errors = {\r\n      type: '', \r\n      ruleType: '', \r\n      protocol:'', \r\n      portRange:'', \r\n      cidr: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'Type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.ruleType && ruleType.length === 0){\r\n      errors.ruleType = 'Type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.protocol && protocol.length === 0){\r\n      errors.protocol = 'Protocol should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.portRange && portRange.length === 0){\r\n      errors.portRange = 'Portrange should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.cidr && !cidrRegex({exact: true}).test(cidr)){\r\n      errors.cidr = 'Cidr should  be a cidr format';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit ruleSg' : 'Add ruleSg'}</h2>;\r\n\r\n    const errors = this.validate(item.type, item.ruleType, item.protocol, item.portRange, item.cidr);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/sg/\" + item.sg.id + \"/ruleSgs\";\r\n\r\n    let sg = null;\r\n    sg = <FormGroup>\r\n            <Label for=\"sgId\">Sg: {item.sg.name}</Label>\r\n            <Input type=\"text\" name=\"sgId\" id=\"sgId\" value={item.sg.id || ''} disabled={true}/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          <FormGroup>\r\n            <Label for=\"type\">In/Out (*)</Label>\r\n            <Input type=\"select\" name=\"type\" id=\"type\" value={item.type || ''} onChange={this.handleChange} onBlur={this.handleBlur('type')} \r\n                 valid={errors.type === ''}\r\n                 invalid={errors.type !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"INBOUND\">INBOUND</option>\r\n              <option value=\"OUTBOUND\">OUTBOUND</option>\r\n            </Input>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup>\r\n          {sg}\r\n\r\n          <FormGroup>\r\n            <Label for=\"ruleType\">Type (*)</Label>\r\n            <Input type=\"select\" name=\"ruleType\" id=\"ruleType\" value={item.ruleType || ''} onChange={this.handleChange} onBlur={this.handleBlur('ruleType')} \r\n                 valid={errors.ruleType === ''}\r\n                 invalid={errors.ruleType !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"ruleSgType1\">ruleSgType1</option>\r\n              <option value=\"ruleSgType2\">ruleSgType2</option>\r\n            </Input>\r\n            <FormFeedback>{errors.ruleType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"protocol\">Protocol (*)</Label>\r\n            <Input type=\"select\" name=\"protocol\" id=\"protocol\" value={item.protocol || ''} onChange={this.handleChange} onBlur={this.handleBlur('protocol')} \r\n                 valid={errors.protocol === ''}\r\n                 invalid={errors.protocol !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"protocol1\">protocol1</option>\r\n              <option value=\"protocol2\">protocol2</option>\r\n            </Input>\r\n            <FormFeedback>{errors.protocol}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"portRange\">Port Range (*)</Label>\r\n            <Input type=\"text\" name=\"portRange\" id=\"portRange\" value={item.portRange || ''} placeholder=\"Enter portRange\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('portRange')} autoComplete=\"portRange\"\r\n                   valid={errors.portRange === ''}\r\n                   invalid={errors.portRange !== ''}\r\n            />\r\n           <FormFeedback>{errors.portRange}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"cidr\">Source/Destination (*)</Label>\r\n            <Input type=\"text\" name=\"cidr\" id=\"cidr\" value={item.cidr || ''} placeholder=\"Enter cidr\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('cidr')} autoComplete=\"cidr\"\r\n                   valid={errors.cidr === ''}\r\n                   invalid={errors.cidr !== ''}\r\n            />\r\n           <FormFeedback>{errors.cidr}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(RuleSgEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagSgList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/sgs/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/sgs/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTag = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTag});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/sgs/\" + tag.sg.id; \r\n      \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.sg.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/sg/\" + tag.sg.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.sg.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/sg/${this.props.match.params.id}/tags/new`;\r\n    const sg = `${API_BASE_URL}/sgs`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={sg}>Sg</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Tag</Button>\r\n          </div>\r\n          \r\n          <h3>TagSg</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Sg</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagSgList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass TagSgEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    sg: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const sg = await (await fetch(`${API_BASE_URL}/sgs/${this.props.match.params.ids}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        sg: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.sg = sg;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/sg/' + item.sg.id +'/tags'; \r\n\r\n    item.sg={id: item.sg.id};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/sgs/' + (item.sg.id) + '/tags/'+(item.id) : API_BASE_URL + '/sgs/' + item.sg.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/sg/\" + item.sg.id + \"/tags\";\r\n\r\n    let sg = null;\r\n    sg = <FormGroup>\r\n            <Label for=\"sgId\">Sg: {item.sg.name}</Label>\r\n            <Input type=\"text\" name=\"sgId\" id=\"sgId\" value={item.sg.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {sg}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagSgEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nlet order = 'desc';\r\nclass VpcManageList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {cidrs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(API_BASE_URL + '/cidrs')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({cidrs: data, isLoading: false}));\r\n\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`${API_BASE_URL}/cidrs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateCidr = [...this.state.cidrs].filter(i => i.id !== id);\r\n      this.setState({cidrs: updateCidr});\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n   const {cidrs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const defaultSorted = [{\r\n      dataField: 'id',\r\n      order: 'desc'\r\n    }];\r\n\r\n    const columns = [\r\n    {\r\n      dataField: 'id',\r\n      text: 'ID',\r\n      filter: textFilter({\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Id'\r\n      }),\r\n      /*headerStyle: (column, colIndex) => {\r\n        if (colIndex % 2 === 0) {\r\n          return {\r\n            backgroundColor: '#81c784'\r\n          };\r\n        }\r\n        return {\r\n          backgroundColor: '#c8e6c9'\r\n        };\r\n      },*/\r\n      sort: true\r\n      /*sortCaret: (order, column) => {\r\n        if (!order) return (<span>&nbsp;&nbsp;d/a</span>);\r\n        else if (order === 'asc') return (<span>&nbsp;&nbsp;d/<font color=\"blue\">a</font></span>);\r\n        else if (order === 'desc') return (<span>&nbsp;&nbsp;<font color=\"blue\">d</font>/a</span>);\r\n        return null;\r\n      }*/\r\n    }, \r\n    {\r\n      dataField: 'cidr',\r\n      text: 'Cidr',\r\n      filter: textFilter({\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Cidr'\r\n      }),\r\n      sort: true\r\n    }, \r\n    \r\n    {\r\n      dataField: 'env',\r\n      text: 'Env',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Env'\r\n      }),\r\n      sort: true\r\n    }, \r\n    {\r\n      dataField: 'text',\r\n      text: 'Description',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Description'\r\n      }),\r\n      sort: true\r\n    },\r\n\r\n    {\r\n      dataField: 'region.name',\r\n      text: 'Region',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Region'\r\n      }),\r\n      sort: true,\r\n      \r\n      formatter: (cellContent, row) => {\r\n          if (row.region && row.region.id) {\r\n            let reg = '';\r\n            reg=API_BASE_URL + '/regions/' + row.region.id ;\r\n      \r\n            let regc = '';\r\n            regc = row.region.name;\r\n\r\n            return (\r\n              <a href={reg}>{regc}</a>\r\n            );\r\n          }\r\n        }\r\n    }, \r\n    \r\n    /*, \r\n    {\r\n      dataField: 'vpc',\r\n      text: 'Vpc',\r\n      isDummyField: true,\r\n        formatter: (cellContent, row) => {\r\n          if (row.vpc && row.vpc.id) {\r\n            let vpc = '';\r\n            vpc='/account/' + row.vpc.account.id + '/vpcs/' + row.vpc.id; \r\n      \r\n            let vpcc = '';\r\n            vpcc = \"[Vpc:\" + row.vpc.id + \" Acc:\" + row.vpc.account.numAccount + \" Prd:\" + row.vpc.account.product.name  + \" Tri:\" + row.vpc.account.product.trigramme.name +\"]\";\r\n\r\n            return (\r\n              <a href={vpc}>{vpcc}</a>\r\n            );\r\n          }\r\n        }\r\n    }*/, \r\n    {\r\n      dataField: 'vpc.name',\r\n      text: 'Vpc',\r\n      //isDummyField: true,\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Vpc'\r\n      }),\r\n      sort: true,\r\n\r\n        formatter: (cellContent, row) => {\r\n          if (row.vpc && row.vpc.id) {\r\n            let vpc = '';\r\n            vpc=API_BASE_URL + '/account/' + row.vpc.account.id + '/vpcs/' + row.vpc.id; \r\n      \r\n            let vpcc = '';\r\n            vpcc = row.vpc.name;\r\n\r\n            return (\r\n              <a href={vpc}>{vpcc}</a>\r\n            );\r\n          }\r\n        }\r\n    }, \r\n    {\r\n      dataField: 'vpc.account.numAccount',\r\n      text: 'Account',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Account'\r\n      }),\r\n      sort: true,\r\n      isDummyField: true,\r\n        formatter: (cellContent, row) => {\r\n          if (row.vpc && row.vpc.id) {\r\n            let vpc = '';\r\n            vpc=API_BASE_URL + '/product/' + row.vpc.account.product.id + '/accounts/' + row.vpc.account.id; \r\n      \r\n            let vpcc = '';\r\n            vpcc = row.vpc.account.numAccount;\r\n\r\n            return (\r\n              <a href={vpc}>{vpcc}</a>\r\n            );\r\n          }\r\n        }\r\n    },\r\n    {\r\n      dataField: 'vpc.account.product.name',\r\n      text: 'Product',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Product'\r\n      }),\r\n      sort: true,\r\n      isDummyField: true,\r\n        formatter: (cellContent, row) => {\r\n          if (row.vpc && row.vpc.id) {\r\n            let vpc = '';\r\n            vpc=API_BASE_URL + '/trigramme/' + row.vpc.account.product.trigramme.id + '/products/' + row.vpc.account.product.id; \r\n      \r\n            let vpcc = '';\r\n            vpcc = row.vpc.account.product.name ;\r\n\r\n            return (\r\n              <a href={vpc}>{vpcc}</a>\r\n            );\r\n          }\r\n        }\r\n    }, \r\n    {\r\n      dataField: 'vpc.account.product.trigramme.name',\r\n      text: 'Trigramme',\r\n      filter: textFilter({\r\n        caseSensitive: true,\r\n        delay: 1000, // default is 500ms\r\n        style: {\r\n          backgroundColor: 'white'\r\n        },\r\n        className: 'test-classname',\r\n        placeholder: 'Trigramme'\r\n      }),\r\n      sort: true,\r\n      isDummyField: true,\r\n        formatter: (cellContent, row) => {\r\n          if (row.vpc && row.vpc.id) {\r\n            let vpc = '';\r\n            vpc=API_BASE_URL + '/trigrammes/' + row.vpc.account.product.trigramme.id; \r\n      \r\n            let vpcc = '';\r\n            vpcc = row.vpc.account.product.trigramme.name ;\r\n\r\n            return (\r\n              <a href={vpc}>{vpcc}</a>\r\n            );\r\n          }\r\n        }\r\n    }, \r\n    {\r\n        dataField: 'vpc',\r\n        text: 'Action',\r\n        \r\n        isDummyField: true,\r\n          formatter: (cellContent, row) => {\r\n          \r\n            let isDisabled = false;\r\n            if(row.vpc) isDisabled=true;\r\n\r\n            return (\r\n                   <ButtonGroup>\r\n                    <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/vpcmanages/\" + row.id + \"/subnetmanage\" }>Subnets Cidr</Button>&nbsp;&nbsp;\r\n                    <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/vpcmanage/\" + row.id}>Edit</Button>\r\n                    <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(row.id)}  disabled={isDisabled}>Delete</Button>\r\n                  </ButtonGroup>\r\n\r\n            );\r\n          }    \r\n    }\r\n    ];\r\n    \r\n    return (\r\n      \r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={API_BASE_URL + \"/vpcmanage/new\"}>Add Cidr</Button>\r\n          </div>\r\n          <h3>Cidr</h3>\r\n          <BootstrapTable  \r\n            headerClasses=\"header-class\" \r\n            keyField='id' \r\n            data={ cidrs } \r\n            columns={ columns }  \r\n            bordered={ false } \r\n            defaultSorted={ defaultSorted } \r\n            filter={ filterFactory() } \r\n            pagination={ paginationFactory() }\r\n            \r\n            hover\r\n\r\n          />\r\n        </Container>\r\n\r\n      </div>\r\n      \r\n    );\r\n    \r\n    /*\r\n    const cidrList = cidrs.map(cidr => {\r\n      \r\n      let vpc = '';\r\n      if(cidr.vpc) vpc='/account/' + cidr.vpc.account.id + '/vpcs/' + cidr.vpc.id; \r\n      let vpcc = '';\r\n      if(cidr.vpc) vpcc = \"[Vpc:\" + cidr.vpc.id + \" Acc:\" + cidr.vpc.account.numAccount + \" Prd:\" + cidr.vpc.account.product.name  + \" Tri:\" + cidr.vpc.account.product.trigramme.name +\"]\";\r\n\r\n      let isDisabled = false;\r\n      if(cidr.vpc) isDisabled=true;\r\n\r\n      /*return <tr key={cidr.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{cidr.id}</td>\r\n\r\n\t\t    <td>{cidr.cidr}</td>\r\n        <td>{cidr.env}</td>\r\n\t\t    <td>{cidr.text}</td>\r\n        <td><a href={vpc}>{vpcc}</a></td>\r\n\t\t\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/vpcmanage/\" + cidr.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(cidr.id)}  disabled={isDisabled}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n      \r\n    });\r\n    \r\n    \r\n\r\n    return (\r\n      \r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to=\"/vpcmanage/new\">Add Cidr</Button>\r\n          </div>\r\n          <h3>Cidr</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"5%\">Id</th> \r\n              <th width=\"5%\">Cidr</th> \r\n              <th width=\"5%\">Env</th>\r\n\t\t\t        <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Vpc</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {cidrList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n    */\r\n  }\r\n}\r\n\r\nexport default VpcManageList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\nclass VpcManageEdit extends Component {\r\n\r\n  emptyItem = {\r\n    cidr: '',\r\n    text: '',\r\n    env: '',\r\n    vpc: {id: ''},\r\n    regions: {},\r\n    region: {},\r\n    regionId: '',\r\n    touched: {\r\n      cidr: false,\r\n      env: false,\r\n      regionId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const cidr = await (await fetch(`${API_BASE_URL}/cidrs/${this.props.match.params.id}`)).json();\r\n      \r\n      cidr.touched = {\r\n        cidr: false,\r\n        env: false,\r\n        regionId: false\r\n      };\r\n      \r\n      this.setState({item: cidr});\r\n      let item = {...this.state.item};\r\n      item.regionId = cidr.region.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const cidr = {\r\n        cidr: '',\r\n        text: '',\r\n        env: '',\r\n        vpc: {id: ''},\r\n        regions: {},\r\n        region: {},\r\n        regionId: '',\r\n        touched: {\r\n          cidr: false,\r\n          env: false,\r\n          regionId: false\r\n        }\r\n      };\r\n      this.setState({item: cidr});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/regions',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.regions = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n        cidr: true,\r\n        env: true\r\n    };\r\n    const errors = this.validate(item.cidr, item.env);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n      alert(errors.cidr + \"  \" + errors.env);\r\n      return;\r\n    }\r\n    let cidrs;\r\n\r\n    let ip ='';\r\n    ip = item.cidr;\r\n    let newIp = ip.replace('/', '@');\r\n\r\n    item.region={id: item.regionId};\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/cidr/' + newIp + '/env/' + item.env + '/cidrId/' + item.id : API_BASE_URL + '/cidr/' + newIp + '/env/' + item.env + '/cidrId/0',)\r\n    .then((result) => {\r\n      // Get the result\r\n      // If we want text, call result.text()\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      // Do something with the result\r\n      cidrs = jsonResult.length;\r\n      console.log(jsonResult.length);\r\n    })\r\n    if(cidrs !== 0) {\r\n      errors.cidr=\"Cidr should be unique by env\";\r\n      alert(errors.cidr);\r\n      return ;\r\n    }\r\n    \r\n    \r\n    if(!item.id) item.vpc=null; \r\n    const hist= API_BASE_URL + '/vpcmanage';\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/cidrs/'+(item.id) : API_BASE_URL + '/cidr', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(cidr, env, regionId) {\r\n\r\n    const errors = {\r\n      cidr: '',\r\n      env: '',\r\n      regionId:''\r\n    };\r\n\r\n    if(this.state.item.touched.cidr && cidr.length === 0){\r\n      errors.cidr = 'cidr should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.cidr && !cidrRegex({exact: true}).test(cidr))\r\n    {\r\n      errors.cidr = 'cidr should  be a cidr format';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.env && env.length === 0){\r\n      errors.env = 'env should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.regionId && regionId.length === 0){\r\n      errors.regionId = 'Region should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Cidr' : 'Add Cidr'}</h2>;\r\n\r\n\r\n    const errors = this.validate(item.cidr, item.env, item.regionId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/vpcmanage\";\r\n    \r\n    let isDisabledd = false;\r\n    if(item.vpc && item.vpc.id) isDisabledd = true;\r\n\r\n    \r\n    let optsr = [];\r\n    if(item.regions && item.regions.length){\r\n          item.regions.map(s => {  \r\n          optsr.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n\r\n    let reg = item.regionId || '';\r\n    item.regionId = reg;\r\n    \r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"cidr\">CIDR (*)</Label>\r\n            <Input type=\"text\" name=\"cidr\" id=\"cidr\" value={item.cidr || ''}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('cidr')} autoComplete=\"cidr\"\r\n                   valid={errors.cidr === ''}\r\n                   invalid={errors.cidr !== ''}\r\n                   disabled={isDisabledd}\r\n            />\r\n            <FormFeedback>{errors.cidr}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"regionId\">Region (*)</Label>\r\n            <Input type=\"select\" name=\"regionId\" id=\"regionId\"  value={reg} onChange={this.handleChange} onBlur={this.handleBlur('regionId')}\r\n                 valid={errors.regionId === ''}\r\n                 invalid={errors.regionId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsr}\r\n            </Input>\r\n            <FormFeedback>{errors.regionId}</FormFeedback>\r\n          </FormGroup>\r\n      \r\n          <FormGroup>\r\n            <Label for=\"env\">Env (*)</Label>\r\n            <Input type=\"select\" name=\"env\" id=\"env\" value={item.env || ''} onChange={this.handleChange} onBlur={this.handleBlur('env')}\r\n                 valid={errors.env === ''}\r\n                 invalid={errors.env !== ''}\r\n                 disabled={isDisabledd}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"DEV\">DEV</option>\r\n              <option value=\"HML\">HML</option>\r\n              <option value=\"PRD\">PRD</option>\r\n              <option value=\"SDB\">SDB</option>\r\n            </Input>\r\n            <FormFeedback>{errors.env}</FormFeedback>\r\n          </FormGroup>\r\n\r\n      \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"env\"\r\n            />\r\n          </FormGroup>\r\n      \r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(VpcManageEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass SubnetManageList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {subnetcidrs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/cidrs/${this.props.match.params.id}/subnetcidrs`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({subnetcidrs: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(cidrId, id) {\r\n    await fetch(`${API_BASE_URL}/cidrs/${cidrId}/subnetcidrs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateSubnetCidr = [...this.state.subnetcidrs].filter(i => i.id !== id);\r\n      this.setState({subnetcidrs: updateSubnetCidr});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {subnetcidrs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const subnetCidrList = subnetcidrs.map(subnetCidr => {\r\n      \r\n      const link = API_BASE_URL + \"/vpcmanage/\" + subnetCidr.cidr.id; ///vpcmanages/:idc/subnetmanage/:id   /vpcmanage/:id\r\n\r\n      let sub = '';\r\n      let subsub ='';\r\n      if(subnetCidr.subnet) {\r\n        sub = subnetCidr.subnet.id + \":\" + subnetCidr.subnet.name ;///vpc/1000/subnets/1000\r\n        subsub = API_BASE_URL + \"/vpc/\" + subnetCidr.subnet.vpc.id + \"/subnets/\" + subnetCidr.subnet.id;\r\n      }\r\n      let isDisabled = false;\r\n      if(subnetCidr.subnet) isDisabled=true;\r\n\r\n      return <tr key={subnetCidr.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{subnetCidr.id}</td>\r\n\r\n\t\t    <td>{subnetCidr.subnetCidr}</td>\r\n         \r\n        <td><a href={link}>{subnetCidr.cidr.cidr}</a></td>\r\n\r\n        <td><a href={subsub}>{sub}</a></td>\r\n\r\n\r\n\t\t    <td>{subnetCidr.text}</td>\r\n\t\t\r\n\t\t\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/vpcmanages/\" + subnetCidr.cidr.id + \"/subnetmanage/\" + subnetCidr.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(subnetCidr.cidr.id, subnetCidr.id)}  disabled={isDisabled}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n   const add = `${API_BASE_URL}/vpcmanages/${this.props.match.params.id}/subnetmanage/new`;\r\n   const trig = `${API_BASE_URL}/vpcmanage`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={trig}>Cidrs</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Subnet Cidr</Button>\r\n          </div>\r\n          <h3>Subnet</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"20%\">Id</th> \r\n              <th width=\"20%\">subnet</th> \r\n              <th width=\"20%\">Cidr</th>\r\n\r\n              <th width=\"20%\">Subnet vpc</th>\r\n\r\n\r\n\t\t\t        <th width=\"20%\">Description</th>\r\n\t\t\t        <th width=\"10%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {subnetCidrList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubnetManageList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nconst cidrRegex = require('cidr-regex');\r\n//also npm install range_check\r\nclass SubnetManageEdit extends Component {\r\n\r\n  emptyItem = {\r\n    subnetCidr: '',\r\n    text: '',\r\n\t  cidr: '',\r\n    subnet: {},\r\n    touched: {\r\n      subnetCidr: false,\r\n      cidrId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const subnetCidr = await (await fetch(`${API_BASE_URL}/subnetcidrs/${this.props.match.params.id}`)).json();\r\n      subnetCidr.touched = {\r\n        subnetCidr: false,\r\n        cidrId: false\r\n      };\r\n\r\n      this.setState({item: subnetCidr});\r\n    }\r\n    else {\r\n      const cidr = await (await fetch(`${API_BASE_URL}/cidrs/${this.props.match.params.idc}`)).json();\r\n      const subnetCidr = {\r\n        subnetCidr: '',\r\n        text: '',\r\n        cidr: '',\r\n        subnet: {},\r\n        touched: {\r\n          subnetCidr: false,\r\n          cidrId: false\r\n        }\r\n      };\r\n      subnetCidr.cidr = cidr;\r\n      subnetCidr.touched = {\r\n        subnetCidr: false,\r\n        cidrId: false\r\n      };\r\n      this.setState({item: subnetCidr});\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n        subnetCidr: true,\r\n        cidrId: true\r\n    };\r\n    const errors = this.validate(item.subnetCidr, item.cidrId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) \r\n    {\r\n      this.forceUpdate();\r\n      return;\r\n    }\r\n    const hist= API_BASE_URL + '/vpcmanages/' + item.cidr.id + '/subnetmanage'; // /vpcmanages/:idc/subnetmanage/:id\r\n\r\n    \r\n    \r\n    let t = 0;\r\n\r\n    if(item.id && item.subnet && item.subnet.id) {\r\n        //console.log(\"subnet\");\r\n        t = item.subnet.id;\r\n        item.subnet= {};\r\n    }else {\r\n      item.subnet= null;\r\n    }\r\n    //console.log(\"subnet\" + item.subnet.id);\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/cidrs/' + (item.cidr.id) + '/subnetcidrs/'+(item.id) + '/subnet/' + (t) : API_BASE_URL + '/cidrs/' + item.cidr.id + '/subnetcidrs', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(subnetCidr, cidrId) {\r\n\r\n    const errors = {\r\n      subnetCidr: '',\r\n      cidrId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.subnetCidr && subnetCidr.length === 0){\r\n      errors.subnetCidr = 'subnet should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.subnetCidr && !cidrRegex({exact: true}).test(subnetCidr))\r\n    {\r\n      errors.subnetCidr = 'subnet should  be a cidr format';\r\n      return errors;\r\n    }\r\n    /*if(!this.state.item.id && this.state.item.touched.trigrammeId && trigrammeId.length === 0){\r\n      errors.trigrammeId = 'trigramme should not be null';\r\n      return errors;\r\n    }*/\r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Subnet Cidr' : 'Add Subnet Cidr'}</h2>;\r\n    \r\n    const errors = this.validate(item.subnetCidr, item.cidrId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/vpcmanages/\" + item.cidr.id + \"/subnetmanage\"; // /vpcmanages/:idc/subnetmanage/:id\r\n\r\n    let cidrs = null;\r\n    cidrs = <FormGroup>\r\n            <Label for=\"cidrId\">Cidr: {item.cidr.cidr}</Label>\r\n            <Input type=\"text\" name=\"cidrId\" id=\"cidrId\" value={item.cidr.id || ''} disabled={true}/>\r\n          </FormGroup>;\r\n\r\n    let isDisabledd = false;\r\n    if(item.subnet && item.subnet.id) isDisabledd = true;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"subnetCidr\">Subnet</Label>\r\n            <Input type=\"text\" name=\"subnetCidr\" id=\"subnetCidr\" value={item.subnetCidr || ''}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('subnetCidr')} autoComplete=\"subnetCidr\"\r\n                    valid={errors.subnetCidr === ''}\r\n                   invalid={errors.subnetCidr !== ''}\r\n                   disabled={isDisabledd}\r\n            />\r\n            <FormFeedback>{errors.subnetCidr}</FormFeedback>\r\n          </FormGroup>\r\n\t\t  \r\n\t\t  {cidrs}\r\n\t\t  \r\n\t\t     <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\t\t  \r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(SubnetManageEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RegionList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {regions: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch('regions')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({regions: data, isLoading: false}));\r\n\r\n    //si account rattach?\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`${API_BASE_URL}/regions/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateRegion = [...this.state.regions].filter(i => i.id !== id);\r\n      this.setState({regions: updateRegion});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {regions, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const regionList = regions.map(region => {\r\n      \r\n      let isDisabled = false;\r\n      if(region.cidrs.length !== 0) isDisabled=true;\r\n      //if(region.amis.length !== 0) isDisabled=true;\r\n      //if(region.cidrs.length !== 0) isDisabled=true;\r\n\r\n      return <tr key={region.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{region.id}</td>\r\n\t\t    <td>{region.name}</td>\r\n\t\t    <td>{region.description}</td>\r\n        \r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={`${API_BASE_URL}/region/${region.id}/azs`}>Azs</Button>&nbsp;\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={`${API_BASE_URL}/region/${region.id}/amis`}>Amis</Button>\r\n          </ButtonGroup>          \r\n        </td>\r\n        \r\n        <td>\r\n          \r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={`${API_BASE_URL}/regions/${region.id}`}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(region.id)} disabled={isDisabled}>Delete</Button>\r\n          </ButtonGroup>\r\n          \r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={`${API_BASE_URL}/regions/new`}>Add Region</Button>\r\n          </div>\r\n          <h3>Region</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n\t\t\t        <th width=\"10%\">Id</th>\r\n              <th width=\"10%\">Name</th>\r\n              <th width=\"10%\">Description</th>\r\n              <th width=\"10%\">Components</th>\r\n              <th width=\"10%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {regionList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegionList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RegionEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    description: '',\r\n    touched: {\r\n        name: false\r\n      }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const region = await (await fetch(`${API_BASE_URL}/regions/${this.props.match.params.id}`)).json();\r\n      region.touched = {\r\n        name: false\r\n      };\r\n      this.setState({item: region});\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n    \r\n    item.touched = {\r\n        name: true\r\n    };\r\n    const errors = this.validate(item.name);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    //console.log('error=' + errors.name);\r\n\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    await fetch((item.id) ? API_BASE_URL + '/regions/'+(item.id) : API_BASE_URL + '/regions', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(API_BASE_URL + '/regions');\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n  \r\n  validate(name, mailList, owner, irtCode) {\r\n\r\n    const errors = {\r\n      name: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should be = 3 characters';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Region' : 'Add Region'}</h2>;\r\n    \r\n    const errors = this.validate(item.name);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n    let accs = null;\r\n    if(item.id) accs = <Button size=\"sm\" color=\"secondary\" tag={Link} to={`${API_BASE_URL}/region/${item.id}/azs`}>Azs</Button>;\r\n\r\n    let isDisabledd = false;\r\n    if(item.id && item.cidrs.length !== 0) isDisabledd = true\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter text\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\" \r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n                   disabled={isDisabledd}\r\n                   />\r\n            <FormFeedback>{errors.name}</FormFeedback>\r\n         </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"description\">Description</Label>\r\n            <Input type=\"text\" name=\"description\" id=\"description\" value={item.description || ''}\r\n                   onChange={this.handleChange} autoComplete=\"description\"/>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            \r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={`${API_BASE_URL}/regions`}>Cancel</Button>\r\n\r\n            &nbsp;&nbsp;&nbsp;&nbsp;{accs}\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(RegionEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass AzList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {azs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/regions/${this.props.match.params.id}/azs`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({azs: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(regId, id) {\r\n    await fetch(`${API_BASE_URL}/regions/${regId}/azs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateAz = [...this.state.azs].filter(i => i.id !== id);\r\n      this.setState({azs: updateAz});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {azs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n    \r\n    const azList = azs.map(az => {\r\n      \r\n      const link = API_BASE_URL + \"/regions/\" + az.region.id; \r\n\r\n      let isDisabled = false;\r\n      if(az.subnets.length !== 0) isDisabled=true;\r\n\r\n      return <tr key={az.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{az.id}</td>\r\n\r\n        <td>{az.name}</td>\r\n        <td>{az.description}</td>\r\n        <td><a href={link}>{az.region.name}</a></td>\r\n\t\t    \r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/region/\" + az.region.id +\"/azs/\" + az.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(az.region.id, az.id)} disabled={isDisabled}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/region/${this.props.match.params.id}/azs/new`;\r\n    const reg = `${API_BASE_URL}/regions`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={reg}>Regions</Button>\r\n            &nbsp;&nbsp;&nbsp;<Button color=\"success\" tag={Link} to={add}>Add Az</Button>\r\n          </div>\r\n          \r\n          <h3>Az</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"20%\">Id</th>\r\n              <th width=\"20%\">Name</th>\r\n              <th width=\"20%\">Description</th>\r\n              <th width=\"20%\">Region</th>\r\n\t\t\t        <th width=\"20%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {azList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AzList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass AzEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n\t  region: '',\r\n  \tregionId : '',\r\n    touched: {\r\n      name: false,\r\n      regionId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const az = await (await fetch(`${API_BASE_URL}/azs/${this.props.match.params.id}`)).json();\r\n      az.touched = {\r\n        name: false,\r\n        regionId: false\r\n      };\r\n      this.setState({item: az});\r\n    }\r\n    else {\r\n      //alert(`/regions/${this.props.match.params.idt}`);      \r\n      const region = await (await fetch(`${API_BASE_URL}/regions/${this.props.match.params.idr}`)).json();\r\n      const az = {\r\n        name: '',\r\n        text: '',\r\n        region: '',\r\n        regionId : '',\r\n        touched: {\r\n          name: false,\r\n          regionId: false\r\n        }\r\n      };\r\n      az.region = region;\r\n      az.touched = {\r\n          name: false,\r\n          regionId: false\r\n      };\r\n      this.setState({item: az});\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          regionId: true\r\n    };\r\n    const errors = this.validate(item.name, item.mailList, item.regionId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/region/' + item.region.id + '/azs'; \r\n\r\n    item.region = {id: item.region.id};\r\n    var values = [];\r\n    item.subnets=[];\r\n    if(item.subnets && item.subnets.length){\r\n      item.subnets.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.subnets= values;\r\n    }\r\n\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/regions/' + (item.region.id) + '/azs/'+(item.id) : API_BASE_URL + '/regions/' + item.region.id + '/azs', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, mailList, type, bastion, regionId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      regionId: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    /*if(!this.state.item.id && this.state.item.touched.regionId && regionId.length === 0){\r\n      errors.regionId = 'region should not be null';\r\n      return errors;\r\n    }*/\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Az' : 'Add Az'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.mailList, item.regionId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/region/\" + item.region.id + \"/azs\";\r\n\r\n    let regs = null;\r\n    regs = <FormGroup>\r\n            <Label for=\"regionId\">Region: {item.region.name}</Label>\r\n            <Input type=\"text\" name=\"regionId\" id=\"regionId\" value={item.region.id || ''} disabled={true}/>\r\n          </FormGroup>;\r\n\r\n    let isDisabledd = false;\r\n    if(item.id && item.subnets.length !== 0) isDisabledd = true\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n                   disabled={isDisabledd}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          {regs}\r\n\t\t      <FormGroup>\r\n            <Label for=\"description\">Description</Label>\r\n            <Input type=\"description\" name=\"description\" id=\"description\" value={item.description || ''}\r\n                   onChange={this.handleChange} autoComplete=\"description\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(AzEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass AmiList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {amis: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/regions/${this.props.match.params.id}/amis`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({amis: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(regId, id) {\r\n    await fetch(`${API_BASE_URL}/regions/${regId}/amis/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateAmi = [...this.state.amis].filter(i => i.id !== id);\r\n      this.setState({amis: updateAmi});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {amis, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n    \r\n    const amiList = amis.map(ami => {\r\n      \r\n      const link = API_BASE_URL + \"/regions/\" + ami.region.id; \r\n\r\n      let isDisabled = false;\r\n      //if(ami.subnets.length !== 0) isDisabled=true;\r\n\r\n      return <tr key={ami.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{ami.id}</td>\r\n\r\n        <td>{ami.name}</td>\r\n        <td>{ami.amiId}</td>\r\n        <td>{ami.text}</td>\r\n        <td><a href={link}>{ami.region.name}</a></td>\r\n        \r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/region/\" + ami.region.id +\"/amis/\" + ami.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(ami.region.id, ami.id)} disabled={isDisabled}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/region/${this.props.match.params.id}/amis/new`;\r\n    const reg = `${API_BASE_URL}/regions`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={reg}>Regions</Button>\r\n            &nbsp;&nbsp;&nbsp;<Button color=\"success\" tag={Link} to={add}>Add Ami</Button>\r\n          </div>\r\n          \r\n          <h3>Ami</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"20%\">Id</th>\r\n              <th width=\"20%\">Name</th>\r\n              <th width=\"20%\">Ami Id</th>\r\n              <th width=\"20%\">Description</th>\r\n              <th width=\"20%\">Region</th>\r\n              <th width=\"20%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {amiList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmiList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass AmiEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    text: '',\r\n    region: '',\r\n    regionId : '',\r\n    amiId:'',\r\n    touched: {\r\n      name: false,\r\n      regionId: false,\r\n      amiId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const ami = await (await fetch(`${API_BASE_URL}/amis/${this.props.match.params.id}`)).json();\r\n      ami.touched = {\r\n        name: false,\r\n        regionId: false,\r\n        amiId: false\r\n      };\r\n      this.setState({item: ami});\r\n    }\r\n    else {\r\n      //alert(`/regions/${this.props.match.params.idt}`);      \r\n      const region = await (await fetch(`${API_BASE_URL}/regions/${this.props.match.params.idr}`)).json();\r\n      const ami = {\r\n        name: '',\r\n        text: '',\r\n        region: '',\r\n        regionId : '',\r\n        amiId:'',\r\n        touched: {\r\n          name: false,\r\n          regionId: false,\r\n          amiId: false\r\n        }\r\n      };\r\n      ami.region = region;\r\n      ami.touched = {\r\n          name: false,\r\n          regionId: false,\r\n          amiId: false\r\n      };\r\n      this.setState({item: ami});\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          regionId: true,\r\n          amiId: true\r\n    };\r\n    const errors = this.validate(item.name, item.regionId, item.amiId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/region/' + item.region.id + '/amis'; \r\n\r\n    item.region = {id: item.region.id};\r\n    \r\n    await fetch((item.id) ? API_BASE_URL + '/regions/' + (item.region.id) + '/amis/'+(item.id) : API_BASE_URL + '/regions/' + item.region.id + '/amis', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, regionId, amiId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      regionId: '',\r\n      amiId:''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.amiId && amiId.length === 0){\r\n      errors.amiId = 'amiId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Ami' : 'Add Ami'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.regionId, item.amiId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/region/\" + item.region.id + \"/amis\";\r\n\r\n    let regs = null;\r\n    regs = <FormGroup>\r\n            <Label for=\"regionId\">Region: {item.region.name}</Label>\r\n            <Input type=\"text\" name=\"regionId\" id=\"regionId\" value={item.region.id || ''} disabled={true}/>\r\n          </FormGroup>;\r\n\r\n    let isDisabledd = false;\r\n    //if(item.id && item.subnets.length !== 0) isDisabledd = true\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n                   disabled={isDisabledd}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"amiId\">Ami Id</Label>\r\n            <Input type=\"text\" name=\"amiId\" id=\"amiId\" value={item.amiId || ''} placeholder=\"Enter amiId\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('amiId')} autoComplete=\"amiId\"\r\n                   valid={errors.amiId === ''}\r\n                   invalid={errors.amiId !== ''}\r\n                   disabled={isDisabledd}\r\n            />\r\n           <FormFeedback>{errors.amiId}</FormFeedback>\r\n          </FormGroup>\r\n          {regs}\r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(AmiEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass InstanceTypeList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {instanceTypes: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(API_BASE_URL + 'instanceTypes')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({instanceTypes: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`${API_BASE_URL}/instanceTypes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateInstanceType = [...this.state.instanceTypes].filter(i => i.id !== id);\r\n      this.setState({instanceTypes: updateInstanceType});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {instanceTypes, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const instanceTypeList = instanceTypes.map(instanceType => {\r\n    const ebsOptimized = (instanceType.ebsOptimized) ? 'Yes':'-';\r\n\r\n      return <tr key={instanceType.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{instanceType.id}</td>\r\n\r\n\t\t    <td>{instanceType.family}</td>  \r\n        <td>{instanceType.type}</td>\r\n        <td>{instanceType.vcpus}</td>\r\n        <td>{instanceType.memory}</td>\r\n\t\t    <td>{instanceType.instanceStorage}</td>\r\n        <td>{ebsOptimized}</td> \r\n        <td>{instanceType.networkPerformance}</td>\r\n        \r\n        <td>  \r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/instancetypes/\" + instanceType.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(instanceType.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={API_BASE_URL + \"/instancetypes/new\"}>Add Instance Type</Button>\r\n          </div>\r\n          <h3>InstanceType</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n\t\t\t        <th width=\"10%\">Id</th>\r\n              <th width=\"10%\">Family</th>\r\n              <th width=\"10%\">Type</th>\r\n              <th width=\"10%\">vCPUs</th>\r\n              <th width=\"10%\">Memory (GiB)</th>\r\n              <th width=\"10%\">Instance Storage (GB)</th>\r\n              <th width=\"10%\">EBS-Optimized Available</th>\r\n              <th width=\"10%\">Network Performance</th>\r\n               \r\n              <th width=\"10%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {instanceTypeList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InstanceTypeList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass InstanceTypeEdit extends Component {\r\n\r\n  emptyItem = {\r\n    family:'', \r\n    type:'', \r\n    vcpus:'', \r\n    memory:'', \r\n    instanceStorage:'', \r\n    ebsOptimized: true, \r\n    networkPerformance:'',\r\n    touched: {\r\n      family: false, \r\n      type: false,\r\n      vcpus: false,\r\n      memory: false,\r\n      instanceStorage: false, \r\n      networkPerformance: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const instanceType = await (await fetch(`${API_BASE_URL}/instanceTypes/${this.props.match.params.id}`)).json();\r\n      instanceType.touched = {\r\n        family: false, \r\n        type: false,\r\n        vcpus: false,\r\n        memory: false,\r\n        instanceStorage: false, \r\n        networkPerformance: false\r\n      };\r\n      this.setState({item: instanceType});\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'ebsOptimized')\r\n    {\r\n      item.ebsOptimized = (target.checked) ? true: false;\r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n    \r\n    item.touched = { \r\n      family: true, \r\n      type: true,\r\n      vcpus: true,\r\n      memory: true,\r\n      instanceStorage: true, \r\n      networkPerformance: true\r\n    };\r\n    const errors = this.validate(item.family, item.type, item.vcpus, item.memory, item.instanceStorage, item.networkPerformance);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    var values = [];\r\n    item.eccs=[];\r\n    if(item.eccs && item.eccs.length){\r\n      item.eccs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.eccs= values;\r\n    }\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/instanceTypes/'+(item.id) : API_BASE_URL + '/instanceType', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n\r\n    \r\n    this.props.history.push(API_BASE_URL + '/instanceTypes');\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n  \r\n  validate(family, type, vcpus, memory, instanceStorage, networkPerformance) {\r\n\r\n    const errors = {\r\n      family: '', \r\n      type: '',\r\n      vcpus: '',\r\n      memory: '',\r\n      instanceStorage: '', \r\n      networkPerformance: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.family && family.length === 0){\r\n      errors.family = 'family should not be null';\r\n      return errors;\r\n    } else if(this.state.item.touched.type && type.length === 0){\r\n      errors.type = 'type should not be null';\r\n      return errors;\r\n    } else if(this.state.item.touched.vcpus && vcpus.length === 0){\r\n      errors.vcpus = 'vcpus should not be null';\r\n      return errors;\r\n    }else if(this.state.item.touched.memory && memory.length === 0){\r\n      errors.memory = 'memory should not be null';\r\n      return errors;\r\n    } else if(this.state.item.touched.instanceStorage && instanceStorage.length === 0){\r\n      errors.instanceStorage = 'instanceStorage should not be null';\r\n      return errors;\r\n    } else if(this.state.item.touched.networkPerformance && networkPerformance.length === 0){\r\n      errors.networkPerformance = 'networkPerformance should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    \r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Instance Type' : 'Add Instance Type'}</h2>;\r\n    \r\n    const errors = this.validate(item.family, item.type, item.vcpus, item.memory, item.instanceStorage, item.networkPerformance);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"family\">Family (*)</Label>\r\n            <Input type=\"text\" name=\"family\" id=\"family\" value={item.family || ''} placeholder=\"Enter family\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('family')} autoComplete=\"family\" \r\n                   valid={errors.family === ''}\r\n                   invalid={errors.family !== ''}\r\n                   />\r\n            <FormFeedback>{errors.family}</FormFeedback>\r\n         </FormGroup>\r\n         \r\n         <FormGroup>\r\n            <Label for=\"type\">Type (*)</Label>\r\n            <Input type=\"text\" name=\"type\" id=\"type\" value={item.type || ''} placeholder=\"Enter type\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\" \r\n                   valid={errors.type === ''}\r\n                   invalid={errors.type !== ''}\r\n                   />\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n         </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"vcpus\">vCPUs (*)</Label>\r\n            <Input type=\"number\" name=\"vcpus\" id=\"vcpus\" value={item.vcpus || ''} placeholder=\"Enter vcpus\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('vcpus')} autoComplete=\"vcpus\" \r\n                   valid={errors.vcpus === ''}\r\n                   invalid={errors.vcpus !== ''}\r\n                   />\r\n            <FormFeedback>{errors.vcpus}</FormFeedback>\r\n         </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"memory\">Memory (GiB) (*)</Label>\r\n            <Input type=\"number\" name=\"memory\" id=\"memory\" value={item.memory || ''} placeholder=\"Enter memory\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('memory')} autoComplete=\"memory\" \r\n                   valid={errors.memory === ''}\r\n                   invalid={errors.memory !== ''}\r\n                   />\r\n            <FormFeedback>{errors.memory}</FormFeedback>\r\n         </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"instanceStorage\">Instance Storage (GB) (*)</Label>\r\n            <Input type=\"text\" name=\"instanceStorage\" id=\"instanceStorage\" value={item.instanceStorage || ''} placeholder=\"Enter instanceStorage\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('instanceStorage')} autoComplete=\"instanceStorage\" \r\n                   valid={errors.instanceStorage === ''}\r\n                   invalid={errors.instanceStorage !== ''}\r\n                   />\r\n            <FormFeedback>{errors.instanceStorage}</FormFeedback>\r\n         </FormGroup>\r\n\r\n         <FormGroup >\r\n            <Label for=\"ebsOptimized\" >EBS-Optimized Available:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"ebsOptimized\" id=\"ebsOptimized\" onChange={this.handleChange} onBlur={this.handleBlur('ebsOptimized')} \r\n                    checked={item.ebsOptimized === true}/>\r\n          </FormGroup>\r\n\r\n\r\n         <FormGroup>\r\n            <Label for=\"networkPerformance\">Network Performance (*)</Label>\r\n            <Input type=\"text\" name=\"networkPerformance\" id=\"networkPerformance\" value={item.networkPerformance || ''} placeholder=\"Enter networkPerformance\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('networkPerformance')} autoComplete=\"networkPerformance\" \r\n                   valid={errors.networkPerformance === ''}\r\n                   invalid={errors.networkPerformance !== ''}\r\n                   />\r\n            <FormFeedback>{errors.networkPerformance}</FormFeedback>\r\n         </FormGroup>\r\n\r\n          <FormGroup>   \r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to=\"/instanceTypes\">Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(InstanceTypeEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\nclass EccList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {eccs: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n    fetch(`${API_BASE_URL}/eccs`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({eccs: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`${API_BASE_URL}/eccs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateEcc = [...this.state.eccs].filter(i => i.id !== id);\r\n      this.setState({eccs: updateEcc});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {eccs, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const eccList = eccs.map(ecc => {\r\n      \r\n    const link = API_BASE_URL + \"/vpcs/\" + ecc.vpc.id; \r\n    const links = API_BASE_URL + \"/subnets/\" + ecc.subnet.id; \r\n    const linkAccount = API_BASE_URL + \"/accounts/\" + ecc.account.id;\r\n    \r\n    //autoAssignPublicIp shutdownBehaviour enableTerminationProtection encoded64 instanceType ami\r\n    //monitoring useData useDataText\r\n\r\n    const enableTerminationProtection = (ecc.enableTerminationProtection)? 'Yes': 'No';\r\n    const encoded64 = (ecc.encoded64)? 'Yes': 'No';\r\n    const userData = (ecc.userData)? 'Yes': 'No';\r\n    const monitoring = (ecc.monitoring)? 'Yes': 'No';\r\n    let sgs = '';\r\n    const eccSgs = ecc.sgs.map(sg => {\r\n      sgs = sgs + '|' + sg.id + ':' + sg.name;\r\n    })\r\n\r\n    let role = (ecc.role) ? ecc.role.id : '';\r\n\r\n    let ts= '';\r\n    let targets = ecc.targets.map(target => {\r\n      ts = ts + '|' + target.id;\r\n    });\r\n    let isUsed = false;\r\n    isUsed = (ts === '') ? false : true;\r\n\r\n      return <tr key={ecc.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{ecc.id}</td>\r\n\r\n        <td>{ecc.name}</td>\r\n        <td><a href={linkAccount}>{ecc.account.numAccount}</a></td>\r\n        <td>{ecc.ami.id}</td>\r\n        <td>{ecc.instanceType.id}</td>\r\n        <td>{ecc.autoAssignPublicIp}</td>\r\n        <td>{ecc.shutdownBehaviour}</td>\r\n        <td>{enableTerminationProtection}</td>\r\n        <td>{monitoring}</td>\r\n        <td>{userData}</td>\r\n        <td>{encoded64}</td>\r\n        <td>{ecc.userDataText}</td>\r\n        <td><a href={link}>{ecc.vpc.name}</a></td>\r\n        <td><a href={links}>{ecc.subnet.name}</a></td>\r\n        <td>{sgs}</td>\r\n        <td>{role}</td>\r\n        <td>{ts}</td>\r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/ecc/\" + ecc.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            \r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/ecc/\" + ecc.id + \"/eccStorages\" }>Storages</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/ecc/\" + ecc.id + \"/eccNetworkinterfaces\" }>Network Interfaces</Button>&nbsp;&nbsp;\r\n\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/eccs/\" + ecc.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(ecc.id)} disabled={isUsed}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/eccs/new`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Ecc</Button>\r\n          </div>\r\n          \r\n          <h3>Ecc</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n    \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Ami</th>\r\n              <th width=\"5%\">Instance Type</th>\r\n              <th width=\"5%\">Auto Assign Public Ip</th>\r\n              <th width=\"5%\">Shutdown Behaviour</th>\r\n              <th width=\"5%\">Enable Termination Protection</th>\r\n              <th width=\"5%\">Monitoring</th>\r\n              <th width=\"5%\">user Data</th>\r\n              <th width=\"5%\">Encoded64</th>\r\n              <th width=\"5%\">User Data Text</th>\r\n              <th width=\"5%\">Vpc</th>\r\n              <th width=\"5%\">Subnet</th>\r\n              <th width=\"5%\">Sg</th>\r\n              <th width=\"5%\">Role</th>\r\n              <th width=\"5%\">Target</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {eccList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EccList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\nclass EccEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    autoAssignPublicIp: '', \r\n    shutdownBehaviour: '', \r\n    enableTerminationProtection: false, \r\n    encoded64: false, \r\n    instanceType: '', \r\n    amiId: '',\r\n    amis: [],\r\n    monitoring: false, \r\n    userData: false, \r\n    userDataText: '',\r\n    instanceTypes: [],\r\n    instanceTypeId: '',\r\n    vpcs: [],\r\n    vpcId : '',\r\n    subnets: [],\r\n    subnetId : '',\r\n    sgss: {},\r\n    sgs: [],\r\n    sgId: [],\r\n    roles: [],\r\n    roleId : '',\r\n    touched: {\r\n      autoAssignPublicIp: false, \r\n      shutdownBehaviour: false, \r\n      instanceTypeId: false, \r\n      amiId: false, \r\n      userDataText: false,\r\n      vpcId: false,\r\n      subnetId: false,\r\n      sgId: false,\r\n      name: false,\r\n      accountId: false,\r\n      roleId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const ecc = await (await fetch(`${API_BASE_URL}/eccs/${this.props.match.params.id}`)).json();\r\n      ecc.touched = {\r\n        autoAssignPublicIp: false, \r\n        shutdownBehaviour: false, \r\n        instanceTypeId: false, \r\n        amiId: false, \r\n        userDataText: false,\r\n        vpcId: false,\r\n        subnetId: false,\r\n        sgId: false,\r\n        name: false,\r\n        accountId: false,\r\n        roleId: false\r\n      };\r\n      this.setState({item: ecc});\r\n\r\n      let item = {...this.state.item};\r\n      item.instanceTypeId = ecc.instanceType.id;\r\n      item.amiId = ecc.ami.id;\r\n      item.vpcId = ecc.vpc.id;\r\n      item.accountId = ecc.account.id;\r\n      item.subnetId = ecc.subnet.id;\r\n      if(ecc.role) item.roleId = ecc.role.id;\r\n      else item.roleId = '';\r\n\r\n      await fetch(API_BASE_URL + '/accounts/' + (ecc.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        //let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await (await  fetch(API_BASE_URL + '/regions/' + (ecc.vpc.cidr.region.id) + '/amis',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.amis = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      await (await  fetch(API_BASE_URL + '/vpcs/' + (ecc.vpc.id) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.subnets = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      await (await  fetch(API_BASE_URL + '/vpcs/' + (ecc.vpc.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      await (await  fetch(API_BASE_URL + '/accounts/' + (ecc.account.id) + '/roles',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.roles = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n    \r\n      \r\n\r\n      var values = [];\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.sgs = values;\r\n      this.setState({item: item});\r\n      /*\r\n      */\r\n    }\r\n    else {\r\n      const ecc = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        autoAssignPublicIp: '', \r\n        shutdownBehaviour: '', \r\n        enableTerminationProtection: false, \r\n        encoded64: false, \r\n        instanceType: '', \r\n        instanceType:'',\r\n        amiId: '',\r\n        amis: [],\r\n        monitoring: false, \r\n        userData: false, \r\n        userDataText: '',\r\n        vpcs: [],\r\n        vpcId : '',\r\n        sgss: {},\r\n        sgs: [],\r\n        sgId: [],\r\n        roles: [],\r\n        roleId : '',\r\n        touched: {\r\n          autoAssignPublicIp: false, \r\n          shutdownBehaviour: false, \r\n          instanceTypeId: false, \r\n          amiId: false, \r\n          userDataText: false,\r\n          vpcId: false,\r\n          subnetId: false,\r\n          sgId: false,\r\n          name: false,\r\n          accountId: false,\r\n          roleId: false\r\n        }\r\n      };\r\n      ecc.touched = {\r\n          autoAssignPublicIp: false, \r\n          shutdownBehaviour: false, \r\n          instanceTypeId: false, \r\n          amiId: false, \r\n          userDataText: false,\r\n          vpcId: false,\r\n          subnetId: false,\r\n          sgId: false,\r\n          name: false,\r\n          accountId: false,\r\n          roleId: false\r\n      };\r\n      this.setState({item: ecc});\r\n    }\r\n    \r\n    await fetch(API_BASE_URL + '/instanceTypes',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.instanceTypes = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    });*/\r\n    \r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const name = target.name; \r\n    const value = target.value;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    //enableTerminationProtection monitoring userData encoded64\r\n    if(name === 'enableTerminationProtection')\r\n    {\r\n      item.enableTerminationProtection = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'monitoring')\r\n    {\r\n      item.monitoring = (target.checked) ? true: false;\r\n    } else if(name === 'userData')\r\n    {\r\n      item.userData = (target.checked) ? true: false;\r\n    }else if(name === 'encoded64')\r\n    {\r\n      item.encoded64 = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      item.vpcId = '';\r\n\r\n      item.amis = [];\r\n      item.amiId = '';\r\n      item.ami = {};\r\n\r\n      item.subnetId = '';\r\n      item.subnets = [];\r\n      item.subnet = {};\r\n      \r\n      item.roleId = '';\r\n      item.roles = [];\r\n      item.role = {};\r\n\r\n      item.sgId = '';\r\n      item.sgs = [];\r\n      item.sgss = [];\r\n    }\r\n    else if(name === 'vpcId')\r\n    {\r\n      let vp={};\r\n      fetch(API_BASE_URL + \"/vpcs/\" + item.vpcId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        vp = jsonResult;\r\n        fetch(API_BASE_URL + '/regions/' + (vp.cidr.region.id) + '/amis',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.amis = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/vpcs/' + (vp.id) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnets = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/vpcs/' + (vp.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/accounts/' + (vp.account.id) + '/roles',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.roles = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      });\r\n     \r\n    }\r\n  }\r\n\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      autoAssignPublicIp: true, \r\n      shutdownBehaviour: true, \r\n      instanceTypeId: true, \r\n      amiId: true, \r\n      userDataText: true,\r\n      vpcId: true,\r\n      subnetId: true,\r\n      sgId: true,\r\n      name: true,\r\n      accountId: true,\r\n      roleId: true\r\n    };\r\n    const errors = this.validate(item.name, item.autoAssignPublicIp, item.shutdownBehaviour, item.instanceTypeId, item.amiId, item.userDataText, \r\n      item.userData, item.vpcId, item.subnetId, item.sgId, item.roleId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/eccs'; \r\n\r\n    if(!item.userData) {\r\n      item.userDataText = '';\r\n      item.encoded64 = false;\r\n    }\r\n    item.instanceType = {id: item.instanceTypeId};\r\n    item.ami = {id: item.amiId};\r\n    item.vpc = {id: item.vpcId};\r\n    item.account = {id: item.accountId};\r\n    item.subnet = {id: item.subnetId};\r\n\r\n    \r\n    if(item.roleId !== \"\") item.role = {id: item.roleId};\r\n    else {\r\n      item.role = null;\r\n\r\n    }\r\n    var values = [];\r\n    if(item.sgs && item.sgs.length){\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n        console.log('item.sg=' + s.id);\r\n      });\r\n      item.sg= values;\r\n    }\r\n    \r\n    await fetch((item.id) ? API_BASE_URL + '/eccs/'+(item.id) : API_BASE_URL + '/ecc', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, autoAssignPublicIp, shutdownBehaviour, instanceTypeId, amiId, userDataText, userData, vpcId, subnetId, sgId, roleId, accountId) {\r\n\r\n    const errors = {\r\n      autoAssignPublicIp: '', \r\n      shutdownBehaviour: '', \r\n      instanceTypeId: '', \r\n      amiId: '', \r\n      userDataText: '',\r\n      vpcId : '',\r\n      subnetId: '',\r\n      sgId: '', \r\n      name:'',\r\n      accountId: '',\r\n      roleId: ''\r\n    };\r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'name type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'vpc type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.subnetId && (!subnetId || subnetId.length === 0)){\r\n      errors.subnetId = 'subnet type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.amiId && amiId.length === 0){\r\n      errors.amiId = 'ami type should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.instanceTypeId && instanceTypeId.length === 0){\r\n      errors.instanceTypeId = 'instanceType should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.autoAssignPublicIp && autoAssignPublicIp.length === 0){\r\n      errors.autoAssignPublicIp = 'autoAssignPublicIp should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.shutdownBehaviour && shutdownBehaviour.length === 0){\r\n      errors.shutdownBehaviour = 'shutdownBehaviour should not be null';\r\n      return errors;\r\n    }\r\n    else if(userData && this.state.item.touched.userDataText && userDataText.length === 0){\r\n      errors.userDataText = 'userDataText type should not be null';\r\n      return errors;\r\n    }\r\n    /*else if(this.state.item.touched.roleId && roleId.length === 0){\r\n      errors.roleId = 'roleId should not be null';\r\n      return errors;\r\n    }*/\r\n        \r\n    return errors;\r\n  }\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'sgId')\r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.sgss && item.sgss.length){\r\n              item.sgss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.sgs = values;\r\n      }\r\n      this.setState({item});\r\n  };\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Ecc' : 'Add Ecc'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.autoAssignPublicIp, item.shutdownBehaviour, item.instanceTypeId, item.amiId, \r\n      item.userDataText, item.userData, item.vpcId, item.subnetId, item.sgId, item.roleId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/eccs\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let isUsed = false;\r\n    if(item.id !== '' && (item.targets && item.targets.length !== 0) ) isUsed = true;\r\n\r\n    const encoded64 = (item.userData) ? <FormGroup >\r\n            <Label for=\"encoded64\" >Encoded64:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"encoded64\" id=\"encoded64\" disabled = {isUsed}\r\n                    onChange={this.handleChange} onBlur={this.handleBlur('encoded64')} \r\n                    checked={item.encoded64 === true}/>\r\n          </FormGroup> : '';\r\n    const userDataText = (item.userData) ? <FormGroup>\r\n            <Label for=\"userDataText\">User Data Text(*)</Label>\r\n            <Input type=\"textarea\" name=\"userDataText\" id=\"userDataText\" value={item.userDataText || ''} placeholder=\"Enter userDataText\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('userDataText')} autoComplete=\"userDataText\"\r\n                   valid={errors.userDataText === ''}\r\n                   invalid={errors.userDataText !== ''}\r\n            />\r\n           <FormFeedback>{errors.userDataText}</FormFeedback>\r\n          </FormGroup> : '';\r\n          \r\n    let optVpcs = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          optVpcs.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n    \r\n    let optAmis = [];\r\n    if(item.amis && item.amis.length){\r\n      item.amis.map(s => {  \r\n          optAmis.push(<option key={s.id} value={s.id}>{s.id} {s.name} {s.amiId}</option>);\r\n      });\r\n    }\r\n    let ami = item.amiId || '';\r\n    item.amiId = ami;\r\n\r\n    let optInstanceTypes = [];\r\n    if(item.instanceTypes && item.instanceTypes.length){\r\n      item.instanceTypes.map(s => {  \r\n          optInstanceTypes.push(<option key={s.id} value={s.id}>{s.id} {s.type}</option>);\r\n      });\r\n    }\r\n    let instanceType = item.instanceTypeId || '';\r\n    item.instanceTypeId = instanceType;\r\n\r\n    let optSubnets = [];\r\n    if(item.subnets && item.subnets.length){\r\n      item.subnets.map(s => {  \r\n          optSubnets.push(<option key={s.id} value={s.id}>{s.id} {s.name} </option>);\r\n      });\r\n    }\r\n    let sub = item.subnetId || '';\r\n    item.subnetId = sub;\r\n\r\n    let optsg = [];  \r\n    let optsgs = [];\r\n    if(item.sgss && item.sgss.length){\r\n      item.sgss.map(s => {  \r\n          if(item.sgs && item.sgs.length) item.sgs.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsgs.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsg.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n    const securityGroup = <FormGroup>\r\n            <Label for=\"sgId\">Security Group (*)</Label>\r\n            <Select name=\"sgId\" id=\"sgId\"  placeholder=\"Enter Security group\" isMulti disabled = {isUsed}\r\n              value={optsgs}\r\n              onChange={e => this.onOptionChange(\"sgId\",e)}\r\n              onBlur={this.handleBlur('sgId')}\r\n              options={optsg}\r\n\r\n            />\r\n            <FormFeedback>{errors.sgId}</FormFeedback>\r\n          </FormGroup>;\r\n\r\n    let optRoles = [];\r\n    if(item.roles && item.roles.length){\r\n      item.roles.map(s => {  \r\n          optRoles.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let role = item.RoleId || '';\r\n    item.RoleId = role;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n         <Form onSubmit={this.handleSubmit}>\r\n      \r\n         <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')} disabled = {isUsed}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpc (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\" value={item.vpcId || ''} placeholder=\"Enter vpc\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('vpcId')} autoComplete=\"vpcId\"\r\n                   valid={errors.vpcId === ''}\r\n                   invalid={errors.vpcId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optVpcs}\r\n            </Input>\r\n           <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"subnetId\">Subnet (*)</Label>\r\n            <Input type=\"select\" name=\"subnetId\" id=\"subnetId\" value={item.subnetId || ''} placeholder=\"Enter subnet\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('subnetId')} autoComplete=\"subnetId\"\r\n                   valid={errors.subnetId === ''}\r\n                   invalid={errors.subnetId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optSubnets}\r\n            </Input>\r\n           <FormFeedback>{errors.subnetId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"amiId\">Ami(*)</Label>\r\n            <Input type=\"select\" name=\"amiId\" id=\"amiId\" value={item.amiId || ''} placeholder=\"Enter amiId\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('amiId')} autoComplete=\"amiId\"\r\n                   valid={errors.amiId === ''}\r\n                   invalid={errors.amiId !== ''}>\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optAmis}\r\n            </Input>\r\n           <FormFeedback>{errors.amiId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"instanceTypeId\">Instance Type (*)</Label>\r\n            <Input type=\"select\" name=\"instanceTypeId\" id=\"instanceTypeId\" value={item.instanceTypeId || ''} placeholder=\"Enter instanceType\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('instanceTypeId')} autoComplete=\"instanceTypeId\"\r\n                   valid={errors.instanceTypeId === ''}\r\n                   invalid={errors.instanceTypeId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optInstanceTypes}\r\n            </Input>\r\n           <FormFeedback>{errors.instanceTypeId}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          {securityGroup}\r\n\r\n          <FormGroup>\r\n            <Label for=\"autoAssignPublicIp\">Auto Assign Public Ip (*)</Label>\r\n            <Input type=\"select\" name=\"autoAssignPublicIp\" id=\"autoAssignPublicIp\" value={item.autoAssignPublicIp || ''} disabled = {isUsed}\r\n                 onChange={this.handleChange} onBlur={this.handleBlur('autoAssignPublicIp')} \r\n                 valid={errors.autoAssignPublicIp === ''}\r\n                 invalid={errors.autoAssignPublicIp !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"Disable\">Disable</option>\r\n              <option value=\"Enable\">Enable</option>\r\n            </Input>\r\n            <FormFeedback>{errors.autoAssignPublicIp}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"shutdownBehaviour\">Shutdown Behaviour (*)</Label>\r\n            <Input type=\"select\" name=\"shutdownBehaviour\" id=\"shutdownBehaviour\" value={item.shutdownBehaviour || ''} disabled = {isUsed}\r\n                 onChange={this.handleChange} onBlur={this.handleBlur('shutdownBehaviour')} \r\n                 valid={errors.shutdownBehaviour === ''}\r\n                 invalid={errors.shutdownBehaviour !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"Stop\">Stop</option>\r\n              <option value=\"Terminate\">Terminate</option>\r\n            </Input>\r\n            <FormFeedback>{errors.shutdownBehaviour}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup >\r\n            <Label for=\"enableTerminationProtection\" >Enable Termination Protection:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"enableTerminationProtection\" id=\"enableTerminationProtection\" disabled = {isUsed}\r\n                    onChange={this.handleChange} onBlur={this.handleBlur('enableTerminationProtection')} \r\n                    checked={item.enableTerminationProtection === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"monitoring\" >Monitoring:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"monitoring\" id=\"monitoring\" disabled = {isUsed}\r\n                    onChange={this.handleChange} onBlur={this.handleBlur('monitoring')} \r\n                    checked={item.monitoring === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup >\r\n            <Label for=\"userData\" >User Data:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"userData\" id=\"userData\" disabled = {isUsed}\r\n                    onChange={this.handleChange} onBlur={this.handleBlur('userData')} \r\n                    checked={item.userData === true}/>\r\n          </FormGroup>\r\n\r\n          {encoded64}\r\n          {userDataText}\r\n\r\n          <FormGroup>\r\n            <Label for=\"roleId\">Role (*)</Label>\r\n            <Input type=\"select\" name=\"roleId\" id=\"roleId\" value={item.roleId || ''} placeholder=\"Enter roleId\" disabled = {isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('roleId')} autoComplete=\"roleId\"\r\n                   valid={errors.roleId === ''}\r\n                   invalid={errors.roleId !== ''} >\r\n                   <option value=\"\" >Choose</option>\r\n                   {optRoles}\r\n            </Input>\r\n           <FormFeedback>{errors.roleId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled || isUsed}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(EccEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\nclass EccStorageList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {eccStorages: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/eccs/${this.props.match.params.id}/eccStorages`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({eccStorages: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/eccs/${accId}/eccStorages/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateEccStorage = [...this.state.eccStorages].filter(i => i.id !== id);\r\n      this.setState({eccStorages: updateEccStorage});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {eccStorages, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const eccStorageList = eccStorages.map(eccStorage => {\r\n      \r\n      const link = API_BASE_URL + \"/eccs/\" + eccStorage.ecc.id; \r\n      const deleteOnTermination= (eccStorage.deleteOnTermination)? 'Yes': 'No';\r\n      \r\n\r\n      return <tr key={eccStorage.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{eccStorage.id}</td>\r\n\r\n\r\n        <td>{eccStorage.volumeType}</td>\r\n        <td>{eccStorage.device}</td>\r\n        <td>{eccStorage.snapshot}</td>\r\n        <td>{eccStorage.size}</td>\r\n        <td>{eccStorage.volume}</td>\r\n        <td>{eccStorage.iops}</td>\r\n        <td>{eccStorage.throughput}</td>\r\n        <td>{deleteOnTermination}</td>\r\n        <td>{eccStorage.encrypted}</td>\r\n\r\n        <td><a href={link}>{eccStorage.ecc.id}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/ecc/\" + eccStorage.ecc.id  + \"/eccStorages/\" + eccStorage.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(eccStorage.ecc.id, eccStorage.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/ecc/${this.props.match.params.id}/eccStorages/new`;\r\n    const ecc = `${API_BASE_URL}/eccs`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={ecc}>Ec2</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Ec2 Storage</Button>\r\n          </div>\r\n          \r\n          <h3>Ec2 Storage</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n                    \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Volume Type</th>\r\n              <th width=\"5%\">Device</th>\r\n              <th width=\"5%\">Snapshot</th>\r\n              <th width=\"5%\">Size</th>\r\n              <th width=\"5%\">Volume</th>\r\n              <th width=\"5%\">Iops</th>\r\n              <th width=\"5%\">Throughput</th>\r\n              <th width=\"5%\">DeleteOnTermination</th>\r\n              <th width=\"5%\">Encrypted</th>\r\n\r\n              <th width=\"5%\">Ecc</th> \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {eccStorageList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EccStorageList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass EccStorageEdit extends Component {\r\n\r\n  emptyItem = {\r\n    volumeType: '',\r\n    device: '',\r\n    snapshot: '',\r\n    size: '',\r\n    volume: '', \r\n    iops: '', \r\n    throughput: '', \r\n    deleteOnTermination: true, \r\n    encrypted: '',\r\n    ecc: {},\r\n    touched: {\r\n      volumeType:false,\r\n      device: false,\r\n      snapshot: false,\r\n      volume: false, \r\n      iops: false,\r\n      throughput: false,  \r\n      encrypted: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const eccStorage = await (await fetch(`${API_BASE_URL}/eccStorages/${this.props.match.params.id}`)).json();\r\n      eccStorage.touched = {\r\n        volumeType:false,\r\n        device: false,\r\n        snapshot: false,\r\n        volume: false, \r\n        iops: false,\r\n        throughput: false,  \r\n        encrypted: false\r\n      };\r\n      this.setState({item: eccStorage});\r\n      \r\n    }\r\n    else {\r\n      const ecc = await (await fetch(`${API_BASE_URL}/eccs/${this.props.match.params.ide}`)).json();\r\n      const eccStorage = {\r\n        volumeType: '',\r\n        device: '',\r\n        snapshot: '',\r\n        size: '',\r\n        volume: '', \r\n        iops: '', \r\n        throughput: '', \r\n        deleteOnTermination: true, \r\n        encrypted: '',\r\n        ecc: {},\r\n        touched: {\r\n          volumeType:false,\r\n          device: false,\r\n          snapshot: false,\r\n          volume: false, \r\n          iops: false,\r\n          throughput: false,  \r\n          encrypted: false\r\n        }\r\n      };\r\n      eccStorage.ecc = ecc;\r\n      eccStorage.touched = {\r\n          volumeType:false,\r\n          device: false,\r\n          snapshot: false,\r\n          volume: false,  \r\n          iops: false,\r\n          throughput: false,  \r\n          encrypted: false\r\n      };\r\n      this.setState({item: eccStorage});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      volumeType:true, \r\n      device: true,\r\n      snapshot: true,\r\n      volume: true, \r\n      iops: true,\r\n      throughput: true,  \r\n      encrypted: true\r\n    };\r\n    const errors = this.validate(item.volumeType, item.device, item.snapshot, item.volume,  item.iops, item.throughput, item.encrypted);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/ecc/' + item.ecc.id +'/eccStorages'; \r\n\r\n    item.ecc={id: item.ecc.id};\r\n    \r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/eccs/' + (item.ecc.id) + '/eccStorages/'+(item.id) : API_BASE_URL + '/eccs/' + item.ecc.id + '/eccStorages', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(volumeType, device, snapshot,  volume,  iops, throughput, encrypted) {\r\n\r\n    const errors = {\r\n      volumeType:'', \r\n      device: '',\r\n      snapshot: '',\r\n      volume: '', \r\n      iops: '',\r\n      throughput: '',  \r\n      encrypted: ''\r\n    };\r\n\r\n    \r\n    if(this.state.item.touched.volumeType && volumeType.length === 0){\r\n      errors.volumeType = 'volumeType should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.device && device.length === 0){\r\n      errors.device = 'device should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.snapshot && snapshot.length === 0){\r\n      errors.snapshot = 'snapshot should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.volume && volume.length === 0){\r\n      errors.volume = 'volume should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.iops && iops.length === 0){\r\n      errors.iops = 'iops should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.throughput && throughput.length === 0){\r\n      errors.throughput = 'throughput should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.encrypted && encrypted.length === 0){\r\n      errors.encrypted = 'encrypted should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Ec2 Storage' : 'Add Ec2 Storage'}</h2>;\r\n\r\n    const errors = this.validate(item.volumeType, item.device, item.snapshot, item.volume, item.iops, item.throughput, item.encrypted);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/ecc/\" + item.ecc.id + \"/eccStorages\";\r\n\r\n    let ecc = null;\r\n    ecc = <FormGroup>\r\n            <Label for=\"eccId\">Ec2: {item.ecc.id}</Label>\r\n            <Input type=\"text\" name=\"eccId\" id=\"eccId\" value={item.ecc.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n    let device = null;\r\n    device = (item.volumeType === 'Root') ?  <FormGroup>\r\n            <Label for=\"device\">Device (*)</Label>            \r\n            <Input type=\"select\" name=\"device\" id=\"device\" value={item.device || ''} placeholder=\"Enter device\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('device')} \r\n                   valid={errors.device === ''}\r\n                   invalid={errors.device !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"/dev/xvda\">/dev/xvda</option>\r\n            </Input>\r\n           <FormFeedback>{errors.device}</FormFeedback>\r\n          </FormGroup> : <FormGroup> <Label for=\"device\">Device (*)</Label>            \r\n            <Input type=\"select\" name=\"device\" id=\"device\" value={item.device || ''} placeholder=\"Enter device\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('device')} \r\n                   valid={errors.device === ''}\r\n                   invalid={errors.device !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"/dev/sdb\">/dev/sdb</option>\r\n              <option value=\"/dev/sdc\">/dev/sdc</option>\r\n              <option value=\"/dev/sdd\">/dev/sdd</option>\r\n              <option value=\"/dev/sde\">/dev/sde</option>\r\n              <option value=\"/dev/sdf\">/dev/sdf</option>\r\n              <option value=\"/dev/sdg\">/dev/sdg</option>\r\n              <option value=\"/dev/sdh\">/dev/sdh</option>\r\n              <option value=\"/dev/sdi\">/dev/sdi</option>\r\n              <option value=\"/dev/sdj\">/dev/sdj</option>\r\n              <option value=\"/dev/sdk\">/dev/sdk</option>\r\n              <option value=\"/dev/sdl\">/dev/sdl</option>\r\n            </Input>\r\n           <FormFeedback>{errors.device}</FormFeedback>\r\n          </FormGroup>;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          \r\n          {ecc}\r\n\r\n\r\n           <FormGroup>\r\n            <Label for=\"volumeType\">Volume Type (*)</Label>  \r\n            <Input type=\"select\" name=\"volumeType\" id=\"volumeType\" value={item.volumeType || ''} placeholder=\"Enter volumeType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('volumeType')} \r\n                   valid={errors.volumeType === ''}\r\n                   invalid={errors.volumeType !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"Root\">Root</option>\r\n              <option value=\"EBS\">EBS</option>\r\n            </Input>\r\n           <FormFeedback>{errors.volumeType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {device}\r\n\r\n          <FormGroup>\r\n            <Label for=\"snapshot\">Snapshot (*)</Label>\r\n            <Input type=\"text\" name=\"snapshot\" id=\"snapshot\" value={item.snapshot || ''} placeholder=\"Enter snapshot\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('snapshot')} autoComplete=\"snapshot\"\r\n                   valid={errors.snapshot === ''}\r\n                   invalid={errors.snapshot !== ''}\r\n            />\r\n           <FormFeedback>{errors.snapshot}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"size\">Size (*)</Label>\r\n            <Input type=\"number\" name=\"size\" id=\"size\" value={item.size || ''} placeholder=\"Enter size\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('size')} autoComplete=\"size\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"volume\">Volume Type(*)</Label>           \r\n            <Input type=\"select\" name=\"volume\" id=\"volume\" value={item.volume || ''} placeholder=\"Enter volume\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('volume')} autoComplete=\"volume\"\r\n                   valid={errors.volume === ''}\r\n                   invalid={errors.volume !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"gp2\">General Purpose SSD (gp2)</option>\r\n              <option value=\"io1\">Provisioned IOPS SSD (io1)</option>\r\n              <option value=\"standard\">Magnetic (standard)</option>\r\n            </Input>\r\n           <FormFeedback>{errors.volume}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"iops\">Iops (*)</Label>\r\n            <Input type=\"text\" name=\"iops\" id=\"iops\" value={item.iops || ''} placeholder=\"Enter iops\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('iops')} autoComplete=\"iops\"\r\n                    valid={errors.iops === ''}\r\n                   invalid={errors.iops !== ''}\r\n            />\r\n           <FormFeedback>{errors.iops}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"throughput\">Throughput (*)</Label>\r\n            <Input type=\"text\" name=\"throughput\" id=\"throughput\" value={item.throughput || ''} placeholder=\"Enter throughput\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('throughput')} autoComplete=\"throughput\"\r\n                   valid={errors.throughput === ''}\r\n                   invalid={errors.throughput !== ''}\r\n            />\r\n           <FormFeedback>{errors.throughput}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"encrypted\">Encrypted (*)</Label>\r\n            <Input type=\"text\" name=\"encrypted\" id=\"encrypted\" value={item.encrypted || ''} placeholder=\"Enter encrypted\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('encrypted')} autoComplete=\"encrypted\"\r\n                   valid={errors.encrypted === ''}\r\n                   invalid={errors.encrypted !== ''}\r\n            />\r\n           <FormFeedback>{errors.encrypted}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(EccStorageEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\nclass EccNetworkInterfaceList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {eccNetworkInterfaces: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/eccs/${this.props.match.params.id}/eccNetworkInterfaces`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({eccNetworkInterfaces: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/eccs/${accId}/eccNetworkInterfaces/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateEccNetworkInterface = [...this.state.eccNetworkInterfaces].filter(i => i.id !== id);\r\n      this.setState({eccNetworkInterfaces: updateEccNetworkInterface});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {eccNetworkInterfaces, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const eccNetworkInterfaceList = eccNetworkInterfaces.map(eccNetworkInterface => {\r\n      \r\n      const link = API_BASE_URL + \"/eccs/\" + eccNetworkInterface.ecc.id; \r\n      const deleteOnTermination= (eccNetworkInterface.deleteOnTermination)? 'Yes': 'No';\r\n      \r\n\r\n      return <tr key={eccNetworkInterface.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{eccNetworkInterface.id}</td>\r\n\r\n\r\n        <td>{eccNetworkInterface.device}</td>\r\n        <td>{eccNetworkInterface.networkInterface}</td>\r\n        <td>{eccNetworkInterface.primaryIp}</td>\r\n        <td>{eccNetworkInterface.secondaryIp}</td>\r\n        <td>{eccNetworkInterface.ipv6Ips}</td>\r\n        \r\n\r\n        <td><a href={link}>{eccNetworkInterface.ecc.id}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/ecc/\" + eccNetworkInterface.ecc.id  + \"/eccNetworkInterfaces/\" + eccNetworkInterface.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(eccNetworkInterface.ecc.id, eccNetworkInterface.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/ecc/${this.props.match.params.id}/eccNetworkInterfaces/new`;\r\n    const ecc = `${API_BASE_URL}/eccs`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={ecc}>Ec2</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Ec2 Network Interface</Button>\r\n          </div>\r\n          \r\n          <h3>Ec2 Network Interface</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n                    \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Device</th>\r\n              <th width=\"5%\">NetworkInterface</th>\r\n              <th width=\"5%\">PrimaryIp</th>\r\n              <th width=\"5%\">SecondaryIp</th>\r\n              <th width=\"5%\">Ipv6Ips</th>\r\n              \r\n              <th width=\"5%\">Ecc</th> \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {eccNetworkInterfaceList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EccNetworkInterfaceList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n//const cidrRegex = require('cidr-regex');\r\nvar ipaddr = require('ipaddr.js');\r\nclass EccNetworkInterfaceEdit extends Component {\r\n\r\n  emptyItem = {\r\n    device: '',\r\n    networkInterface: '',\r\n    primaryIp: '',\r\n    secondaryIp: '',\r\n    ipv6Ips: '', \r\n    ecc: {},\r\n    subnet: {},\r\n    touched: {\r\n      device:false,\r\n      networkInterface: false,\r\n      primaryIp: false,\r\n      secondaryIp:false,\r\n      ipv6Ips:false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const eccNetworkInterface = await (await fetch(`${API_BASE_URL}/eccNetworkInterfaces/${this.props.match.params.id}`)).json();\r\n      eccNetworkInterface.touched = {\r\n        device:false,\r\n        networkInterface: false,\r\n        primaryIp: false,\r\n        secondaryIp:false,\r\n        ipv6Ips:false\r\n      };\r\n      this.setState({item: eccNetworkInterface});\r\n      let item = {...this.state.item};\r\n      item.subnet = eccNetworkInterface.ecc.subnet;\r\n      //console.log('subnet');\r\n      //if(eccNetworkInterface.ecc.subnet) console.log('subnet=' + eccNetworkInterface.ecc.subnet.id + ' ' +eccNetworkInterface.ecc.subnet.name);\r\n      this.setState({item: item});\r\n      \r\n\r\n    }\r\n    else {\r\n      const ecc = await (await fetch(`${API_BASE_URL}/eccs/${this.props.match.params.ide}`)).json();\r\n      const eccNetworkInterface = {\r\n        device: '',\r\n        networkInterface: '',\r\n        primaryIp: '',\r\n        secondaryIp: '',\r\n        ipv6Ips: '', \r\n        ecc: {},\r\n        subnet:{},\r\n        touched: {\r\n          device:false,\r\n          networkInterface: false,\r\n          primaryIp: false,\r\n          secondaryIp:false,\r\n          ipv6Ips:false\r\n        }\r\n      };\r\n      eccNetworkInterface.ecc = ecc;\r\n\r\n      eccNetworkInterface.touched = {\r\n          device:false,\r\n          networkInterface: false,\r\n          primaryIp: false,\r\n          secondaryIp:false,\r\n          ipv6Ips:false\r\n      };\r\n      this.setState({item: eccNetworkInterface});\r\n      let item = {...this.state.item};\r\n      item.subnet = ecc.subnet;\r\n      this.setState({item: item});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      device:true,\r\n      networkInterface: true,\r\n      primaryIp: true,\r\n      secondaryIp:true,\r\n      ipv6Ips:true\r\n    };\r\n    const errors = this.validate(item.device, item.networkInterface, item.primaryIp, item.secondaryIp, item.ipv6Ips, item.subnet);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/ecc/' + item.ecc.id +'/eccNetworkInterfaces'; \r\n\r\n    item.ecc={id: item.ecc.id};\r\n    \r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/eccs/' + (item.ecc.id) + '/eccNetworkInterfaces/'+(item.id) : API_BASE_URL + '/eccs/' + item.ecc.id + '/eccNetworkInterfaces', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(device, networkInterface, primaryIp, secondaryIp, ipv6Ips, subnet) {\r\n\r\n    const errors = { \r\n      device: '',\r\n      networkInterface: '',\r\n      primaryIp: '',\r\n      secondaryIp:'', \r\n      ipv6Ips:''\r\n    };\r\n    var sub = '';\r\n    var iprange = '';\r\n    var ip = '';\r\n    if(subnet && subnet.sCidr) \r\n    {\r\n      sub = subnet.sCidr.subnetCidr.split(\"/\");\r\n      iprange = sub[1];\r\n      ip = sub[0];\r\n    }\r\n    \r\n    if(this.state.item.touched.device && device.length === 0){\r\n      errors.device = 'device should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.networkInterface && networkInterface.length === 0){\r\n      errors.networkInterface = 'networkInterface should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.primaryIp && primaryIp.length !== 0 && !ipaddr.isValid(primaryIp) && sub  ){\r\n      errors.primaryIp = 'primaryIp should have Ip format';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.primaryIp && primaryIp.length !== 0 && ipaddr.isValid(primaryIp) && sub  ){\r\n\r\n      var addr = ipaddr.parse(primaryIp);\r\n      var range = ipaddr.parse(ip);\r\n      if(!addr.match(range, iprange))\r\n      {\r\n        errors.primaryIp = 'primaryIp should be in subnet cidr';\r\n        return errors;\r\n      }\r\n    }\r\n    if(this.state.item.touched.secondaryIp && secondaryIp.length !== 0 && !ipaddr.isValid(secondaryIp) && sub ){\r\n      errors.secondaryIp = 'secondaryIp should have Ip format';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.secondaryIp && secondaryIp.length !== 0 && ipaddr.isValid(secondaryIp) && sub  ){\r\n      console.log('secondaryIp=' + secondaryIp);\r\n      var addr = ipaddr.parse(secondaryIp);\r\n      var range = ipaddr.parse(ip);\r\n      if(!addr.match(range, iprange))\r\n      {\r\n        \r\n        errors.secondaryIp = 'secondaryIp should be in subnet cidr';\r\n        return errors;\r\n      }\r\n    }\r\n    if(this.state.item.touched.secondaryIp && secondaryIp.length !== 0 && sub  &&\r\n      this.state.item.touched.primaryIp && primaryIp.length !== 0 && primaryIp === secondaryIp){\r\n      errors.secondaryIp = 'secondaryIp should be in different to secondaryIp';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.ipv6Ips && ipv6Ips.length !== 0 && ipaddr.isValid(ipv6Ips)){\r\n      errors.ipv6Ips = 'ipv6Ips should have Ip format';\r\n      return errors;\r\n    }\r\n    // verfication des ip\r\n\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Ec2 NetworkInterface' : 'Add Ec2 NetworkInterface'}</h2>;\r\n\r\n    const errors = this.validate(item.device, item.networkInterface, item.primaryIp, item.secondaryIp, item.ipv6Ips, item.subnet);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/ecc/\" + item.ecc.id + \"/eccNetworkInterfaces\";\r\n\r\n    let ecc = null;\r\n    ecc = <FormGroup>\r\n            <Label for=\"eccId\">Ec2: {item.ecc.id}</Label>\r\n            <Input type=\"text\" name=\"eccId\" id=\"eccId\" value={item.ecc.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n    let subnet = null; \r\n    \r\n    if(item.subnet && item.subnet.sCidr) {\r\n    subnet = <FormGroup>\r\n            <Label for=\"sub\">Subnet: {item.subnet.name} - {item.subnet.sCidr.subnetCidr}</Label>\r\n            <Input type=\"text\" name=\"sub\" id=\"sub\" value={item.subnet.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n    }\r\n    \r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          \r\n          {ecc}\r\n          {subnet}\r\n           <FormGroup>\r\n            <Label for=\"device\">Device (*)</Label>\r\n            <Input type=\"text\" name=\"device\" id=\"device\" value={item.device || ''} placeholder=\"Enter device\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('device')} autoComplete=\"device\"\r\n                    valid={errors.device === ''}\r\n                   invalid={errors.device !== ''}\r\n            />\r\n           <FormFeedback>{errors.device}</FormFeedback>\r\n          </FormGroup>\r\n\r\n           <FormGroup>\r\n            <Label for=\"networkInterface\">Network Interface (*)</Label>  \r\n            <Input type=\"select\" name=\"networkInterface\" id=\"networkInterface\" value={item.networkInterface || ''} placeholder=\"Enter networkInterface\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('networkInterface')} \r\n                   valid={errors.networkInterface === ''}\r\n                   invalid={errors.networkInterface !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"New\">New</option>\r\n            </Input>\r\n           <FormFeedback>{errors.networkInterface}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"primaryIp\">Primary Ip (*)</Label>\r\n            <Input type=\"text\" name=\"primaryIp\" id=\"primaryIp\" value={item.primaryIp || ''} placeholder=\"Enter primaryIp\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('primaryIp')} autoComplete=\"primaryIp\"\r\n                   valid={errors.primaryIp === ''}\r\n                   invalid={errors.primaryIp !== ''}\r\n            />\r\n           <FormFeedback>{errors.primaryIp}</FormFeedback>\r\n          </FormGroup>\r\n \r\n          <FormGroup>\r\n            <Label for=\"secondaryIp\">Secondary Ip </Label> \r\n            <Input type=\"text\" name=\"secondaryIp\" id=\"secondaryIp\" value={item.secondaryIp || ''} placeholder=\"Enter secondaryIp\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('secondaryIp')} autoComplete=\"secondaryIp\"\r\n                   valid={errors.secondaryIp === ''}\r\n                   invalid={errors.secondaryIp !== ''}\r\n            />\r\n           <FormFeedback>{errors.secondaryIp}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"ipv6Ips\">Ipv6 Ip</Label>\r\n            <Input type=\"text\" name=\"ipv6Ips\" id=\"ipv6Ips\" value={item.ipv6Ips || ''} placeholder=\"Enter ipv6Ips\" disabled='true'\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ipv6Ips')} autoComplete=\"ipv6Ips\"\r\n                   valid={errors.ipv6Ips === ''}\r\n                   invalid={errors.ipv6Ips !== ''}\r\n            />\r\n           <FormFeedback>{errors.ipv6Ips}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(EccNetworkInterfaceEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagEccList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/eccs/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data =>   this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/eccs/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTagEcc = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTagEcc});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/eccs/\" + tag.ecc.id; \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.ecc.id}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/ecc/\" + tag.ecc.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.ecc.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/ecc/${this.props.match.params.id}/tags/new`;\r\n    const ecc = `${API_BASE_URL}/eccs`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={ecc}>Ecc</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Tag</Button>\r\n          </div>\r\n          \r\n          <h3>TagEcc</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Ecc</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagEccList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\n\r\nclass TagEccEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    ecc: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const ecc = await (await fetch(`${API_BASE_URL}/eccs/${this.props.match.params.ide}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        ecc: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.ecc = ecc;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/ecc/' + item.ecc.id +'/tags'; \r\n\r\n    item.ecc={id: item.ecc.id};\r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/eccs/' + (item.ecc.id) + '/tags/'+(item.id) : API_BASE_URL + '/eccs/' + item.ecc.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/ecc/\" + item.ecc.id + \"/tags\";\r\n\r\n    let ecc = null;\r\n    ecc = <FormGroup>\r\n            <Label for=\"eccId\">Ecc: {item.ecc.name}</Label>\r\n            <Input type=\"text\" name=\"eccId\" id=\"eccId\" value={item.ecc.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {ecc}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagEccEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass LaunchConfigurationList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {launchConfigurations: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n    fetch(`${API_BASE_URL}/launchConfigurations`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({launchConfigurations: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`${API_BASE_URL}/launchConfigurations/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateLaunchConfiguration = [...this.state.launchConfigurations].filter(i => i.id !== id);\r\n      this.setState({launchConfigurations: updateLaunchConfiguration});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {launchConfigurations, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const launchConfigurationList = launchConfigurations.map(launchConfiguration => {\r\n      \r\n    const link = API_BASE_URL + \"/vpcs/\" + launchConfiguration.vpc.id; \r\n    const linkAccount = API_BASE_URL + \"/accounts/\" + launchConfiguration.account.id;\r\n    //const links = \"/subnets/\" + launchConfiguration.subnet.id; \r\n    \r\n    //name, kernalId, ramDiskId, purchasingOption, iamRole, ipAddressType,\r\n    //monitoring, userData, encoded64, userDataText\r\n\r\n    \r\n    const encoded64 = (launchConfiguration.encoded64)? 'Yes': 'No';\r\n    const userData = (launchConfiguration.userData)? 'Yes': 'No';\r\n    const monitoring = (launchConfiguration.monitoring)? 'Yes': 'No';\r\n    const purchasingOption = (launchConfiguration.purchasingOption)? 'Yes': 'No';\r\n    let sgs = '';\r\n    const launchConfigurationSgs = launchConfiguration.sgs.map(sg => {\r\n      sgs = sgs + '|' + sg.id + ':' + sg.name;\r\n    })\r\n\r\n      return <tr key={launchConfiguration.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{launchConfiguration.id}</td>\r\n\r\n        <td>{launchConfiguration.name}</td>\r\n        <td><a href={linkAccount}>{launchConfiguration.account.numAccount}</a></td>\r\n        <td>{launchConfiguration.ami.id}</td>\r\n        <td>{launchConfiguration.instanceType.id}</td>\r\n\r\n\r\n        <td>{launchConfiguration.kernalId}</td>\r\n        <td>{launchConfiguration.ramDiskId}</td>\r\n        <td>{purchasingOption}</td>\r\n        <td>{launchConfiguration.iamRole}</td>\r\n        <td>{launchConfiguration.ipAddressType}</td>\r\n        <td>{monitoring}</td>\r\n        <td>{userData}</td>\r\n        <td>{encoded64}</td>\r\n        <td>{launchConfiguration.userDataText}</td>\r\n        <td>{sgs}</td>\r\n        <td><a href={link}>{launchConfiguration.vpc.name}</a></td>\r\n        \r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/launchconfiguration/\" + launchConfiguration.id + \"/launchConfigurationStorages\" }>Storages</Button>&nbsp;&nbsp;\r\n\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/launchconfigurations/\" + launchConfiguration.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(launchConfiguration.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/launchconfigurations/new`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add LaunchConfiguration</Button>\r\n          </div>\r\n          \r\n          <h3>Launch Configuration</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n    \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Ami</th>\r\n              <th width=\"5%\">Instance Type</th>\r\n\r\n              <th width=\"5%\">Kernal Id</th>\r\n              <th width=\"5%\">Ram Disk Id</th>\r\n              <th width=\"5%\">Purchasing Option</th>\r\n              <th width=\"5%\">Iam Role</th>\r\n              <th width=\"5%\">Ip Address Type</th>\r\n              <th width=\"5%\">Monitoring</th>\r\n              <th width=\"5%\">user Data</th>\r\n              <th width=\"5%\">Encoded64</th>\r\n              <th width=\"5%\">User Data Text</th>\r\n              \r\n              <th width=\"5%\">Sg</th>\r\n              <th width=\"5%\">Vpc</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {launchConfigurationList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaunchConfigurationList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass LaunchConfigurationEdit extends Component {\r\n\r\n//name, kernalId, ramDiskId, purchasingOption, iamRole, ipAddressType,\r\n//monitoring, userData, encoded64, userDataText\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    kernalId: '', \r\n    ramDiskId: '', \r\n    purchasingOption: false, \r\n    iamRole: '',\r\n    ipAddressType: '',\r\n    monitoring: false,\r\n    encoded64: false, \r\n    instanceType: '', \r\n    instanceTypes: [],\r\n    instanceTypeId: '',\r\n    amiId: '',\r\n    amis: [], \r\n    userData: false, \r\n    userDataText: '',\r\n    sgss: {},\r\n    sgs: [],\r\n    sgId: [],\r\n    vpcs: [],\r\n    vpcId : '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false, \r\n      kernalId: false, \r\n      ramDiskId: false, \r\n      iamRole: false, \r\n      ipAddressType: false,\r\n      instanceTypeId: false,\r\n      amiId: false,\r\n      userDataText: false,\r\n      sgId: false,\r\n      vpcId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const launchConfiguration = await (await fetch(`${API_BASE_URL}/launchConfigurations/${this.props.match.params.id}`)).json();\r\n      launchConfiguration.touched = {\r\n        name: false, \r\n        accountId: false,\r\n        kernalId: false, \r\n        ramDiskId: false, \r\n        iamRole: false, \r\n        ipAddressType: false,\r\n        instanceTypeId: false,\r\n        amiId: false,\r\n        userDataText: false,\r\n        sgId: false,\r\n        vpcId: false\r\n      };\r\n      this.setState({item: launchConfiguration});\r\n\r\n      await fetch(API_BASE_URL + '/accounts/' + (launchConfiguration.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await  fetch(API_BASE_URL + '/regions/' + (launchConfiguration.vpc.cidr.region.id) + '/amis',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.amis = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n        \r\n      await  fetch(API_BASE_URL + '/vpcs/' + (launchConfiguration.vpc.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n      });\r\n      \r\n      let item = {...this.state.item};\r\n      item.instanceTypeId = launchConfiguration.instanceType.id;\r\n      item.amiId = launchConfiguration.ami.id;\r\n      item.vpcId = launchConfiguration.vpc.id;\r\n      item.accountId = launchConfiguration.account.id;\r\n\r\n      var values = [];\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.sgs = values;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const launchConfiguration = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        kernalId: '', \r\n        ramDiskId: '', \r\n        purchasingOption: false, \r\n        iamRole: '',\r\n        ipAddressType: '',\r\n        monitoring: false,\r\n        encoded64: false, \r\n        instanceType: '', \r\n        instanceTypes: [],\r\n        instanceTypeId: '',\r\n        amiId: '',\r\n        amis: [], \r\n        userData: false, \r\n        userDataText: '',\r\n        sgss: {},\r\n        sgs: [],\r\n        sgId: [],\r\n        vpcs: [],\r\n        vpcId : '',\r\n        touched: {\r\n          name: false, \r\n          accountId: false,\r\n          kernalId: false, \r\n          ramDiskId: false, \r\n          iamRole: false, \r\n          ipAddressType: false,\r\n          instanceTypeId: false,\r\n          amiId: false,\r\n          userDataText: false,\r\n          sgId: false,\r\n          vpcId: false\r\n        }\r\n      };\r\n      launchConfiguration.touched = {\r\n          name: false, \r\n          accountId: false,\r\n          kernalId: false, \r\n          ramDiskId: false, \r\n          iamRole: false, \r\n          ipAddressType: false,\r\n          instanceTypeId: false,\r\n          amiId: false,\r\n          userDataText: false,\r\n          sgId: false,\r\n          vpcId: false\r\n      };\r\n      this.setState({item: launchConfiguration});\r\n    }\r\n    \r\n    await fetch(API_BASE_URL + '/instanceTypes',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.instanceTypes = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*\r\n    await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    });*/\r\n    \r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const name = target.name; \r\n    const value = target.value;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    //enableTerminationProtection monitoring userData encoded64\r\n    if(name === 'purchasingOption')\r\n    {\r\n      item.purchasingOption = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'monitoring')\r\n    {\r\n      item.monitoring = (target.checked) ? true: false;\r\n    } else if(name === 'userData')\r\n    {\r\n      item.userData = (target.checked) ? true: false;\r\n    }else if(name === 'encoded64')\r\n    {\r\n      item.encoded64 = (target.checked) ? true: false;\r\n    }\r\n    else if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n\r\n      item.amiId = '';\r\n      item.amis = [];\r\n\r\n      item.sgId = '';\r\n      item.sgs = [];\r\n      item.sgss = [];\r\n      \r\n      \r\n    }\r\n    else if(name === 'vpcId')\r\n    {\r\n      let vp={};\r\n      fetch(API_BASE_URL + \"/vpcs/\" + item.vpcId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        vp = jsonResult;\r\n        fetch(API_BASE_URL + '/regions/' + (vp.cidr.region.id) + '/amis',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          item.amis = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/vpcs/' + (vp.id) + '/sgs',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.sgss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      });\r\n     \r\n    }\r\n    \r\n  }\r\n\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true, \r\n      accountId: true,\r\n      kernalId: true, \r\n      ramDiskId: true, \r\n      iamRole: true, \r\n      ipAddressType: true,\r\n      instanceTypeId: true,\r\n      amiId: true,\r\n      userDataText: true,\r\n      sgId: true,\r\n      vpcId: true\r\n    };\r\n    const errors = this.validate(item.vpcId, item.name, item.kernalId, item.ramDiskId, item.iamRole, item.ipAddressType, item.instanceTypeId, item.amiId, \r\n      item.userDataText, item.sgId, item.userData, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/launchconfigurations'; \r\n\r\n    if(!item.userData) {\r\n      item.userDataText = '';\r\n      item.encoded64 = false;\r\n    }\r\n    item.instanceType = {id: item.instanceTypeId};\r\n    item.ami = {id: item.amiId};\r\n    item.vpc = {id: item.vpcId};\r\n    item.account = {id: item.accountId};\r\n\r\n    var values = [];\r\n    if(item.sgs && item.sgs.length){\r\n      item.sgs.map(s => { \r\n        values.push({\"id\": s.id});\r\n        console.log('item.sg=' + s.id);\r\n      });\r\n      item.sg= values;\r\n    }\r\n    \r\n    await fetch((item.id) ? API_BASE_URL + '/launchConfigurations/'+(item.id) : API_BASE_URL + '/launchConfiguration', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(vpcId, name, kernalId, ramDiskId, iamRole, ipAddressType, instanceTypeId, amiId, userDataText, sgId, userData, accountId) {\r\n\r\n    const errors = {\r\n      name: '', \r\n      accountId: '',\r\n      kernalId: '', \r\n      ramDiskId: '', \r\n      iamRole: '', \r\n      ipAddressType: '',\r\n      instanceTypeId: '',\r\n      amiId: '',\r\n      userDataText: '',\r\n      sgId: '',\r\n      vpcId: ''\r\n    };\r\n\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'name type should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId type should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'vpcId type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.kernalId && kernalId.length === 0){\r\n      errors.kernalId = 'kernalId type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.ramDiskId && ramDiskId.length === 0){\r\n      errors.ramDiskId = 'ramDiskId type should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.iamRole && iamRole.length === 0){\r\n      errors.iamRole = 'iamRole type should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.ipAddressType && ipAddressType.length === 0){\r\n      errors.ipAddressType = 'ipAddressType should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.instanceTypeId && instanceTypeId.length === 0){\r\n      errors.instanceTypeId = 'instanceTypeId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.amiId && amiId.length === 0){\r\n      errors.amiId = 'amiId should not be null';\r\n      return errors;\r\n    }\r\n    else if(userData && this.state.item.touched.userDataText && userDataText.length === 0){\r\n      errors.userDataText = 'userDataText type should not be null';\r\n      return errors;\r\n    }\r\n    \r\n       \r\n    return errors;\r\n  }\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'sgId')\r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.sgss && item.sgss.length){\r\n              item.sgss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.sgs = values;\r\n      }\r\n      this.setState({item});\r\n  };\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit LaunchConfiguration' : 'Add LaunchConfiguration'}</h2>;\r\n\r\n    const errors = this.validate(item.vpcId, item.name, item.kernalId, item.ramDiskId, item.iamRole, item.ipAddressType, item.instanceTypeId, item.amiId, \r\n      item.userDataText, item.sgId, item.userData, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/launchconfigurations\";\r\n    \r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let optVpcs = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          optVpcs.push(<option key={s.id} value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n\r\n    const encoded64 = (item.userData) ? <FormGroup >\r\n            <Label for=\"encoded64\" >Encoded64:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"encoded64\" id=\"encoded64\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('encoded64')} \r\n                    checked={item.encoded64 === true}/>\r\n          </FormGroup> : '';\r\n    const userDataText = (item.userData) ? <FormGroup>\r\n            <Label for=\"userDataText\">User Data Text(*)</Label>\r\n            <Input type=\"textarea\" name=\"userDataText\" id=\"userDataText\" value={item.userDataText || ''} placeholder=\"Enter userDataText\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('userDataText')} autoComplete=\"userDataText\"\r\n                   valid={errors.userDataText === ''}\r\n                   invalid={errors.userDataText !== ''}\r\n            />\r\n           <FormFeedback>{errors.userDataText}</FormFeedback>\r\n          </FormGroup> : '';\r\n          \r\n    \r\n    let optAmis = [];\r\n    if(item.amis && item.amis.length){\r\n      item.amis.map(s => {  \r\n          optAmis.push(<option key={s.id} value={s.id}>{s.id} {s.name} {s.amiId}</option>);\r\n      });\r\n    }\r\n    let ami = item.amiId || '';\r\n    item.amiId = ami;\r\n\r\n    let optInstanceTypes = [];\r\n    if(item.instanceTypes && item.instanceTypes.length){\r\n      item.instanceTypes.map(s => {  \r\n          optInstanceTypes.push(<option key={s.id} value={s.id}>{s.id} {s.type}</option>);\r\n      });\r\n    }\r\n    let instanceType = item.instanceTypeId || '';\r\n    item.instanceTypeId = instanceType;\r\n\r\n    let optsg = [];  \r\n    let optsgs = [];\r\n    if(item.sgss && item.sgss.length){\r\n      item.sgss.map(s => {  \r\n          if(item.sgs && item.sgs.length) item.sgs.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsgs.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsg.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n    const securityGroup = <FormGroup>\r\n            <Label for=\"sgId\">Security Group (*)</Label>\r\n            <Select name=\"sgId\" id=\"sgId\"  placeholder=\"Enter Security group\" isMulti \r\n              value={optsgs}\r\n              onChange={e => this.onOptionChange(\"sgId\",e)}\r\n              onBlur={this.handleBlur('sgId')}\r\n              options={optsg}\r\n\r\n            />\r\n            <FormFeedback>{errors.sgId}</FormFeedback>\r\n          </FormGroup>;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n         <Form onSubmit={this.handleSubmit}>\r\n\r\n         <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n         <FormGroup>\r\n            <Label for=\"vpcId\">Vpc (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\" value={item.vpcId || ''} placeholder=\"Enter vpc\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('vpcId')} autoComplete=\"vpcId\"\r\n                   valid={errors.vpcId === ''}\r\n                   invalid={errors.vpcId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optVpcs}\r\n            </Input>\r\n           <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"kernalId\">Kernal Id (*)</Label>\r\n            <Input type=\"text\" name=\"kernalId\" id=\"kernalId\" value={item.kernalId || ''} placeholder=\"Enter kernalId\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('kernalId')} autoComplete=\"kernalId\"\r\n                   valid={errors.kernalId === ''}\r\n                   invalid={errors.kernalId !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.kernalId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"ramDiskId\">Ram Disk Id (*)</Label>\r\n            <Input type=\"text\" name=\"ramDiskId\" id=\"ramDiskId\" value={item.ramDiskId || ''} placeholder=\"Enter ramDiskId\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ramDiskId')} autoComplete=\"ramDiskId\"\r\n                   valid={errors.ramDiskId === ''}\r\n                   invalid={errors.ramDiskId !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.ramDiskId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup >\r\n            <Label for=\"purchasingOption\" >Purchasing Option:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"purchasingOption\" id=\"purchasingOption\" disabled={true}\r\n                    onChange={this.handleChange} onBlur={this.handleBlur('purchasingOption')} \r\n                    checked={item.purchasingOption === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"iamRole\">Iam Role (*)</Label>\r\n            <Input type=\"text\" name=\"iamRole\" id=\"iamRole\" value={item.iamRole || ''} placeholder=\"Enter iamRole\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('iamRole')} autoComplete=\"iamRole\"\r\n                   valid={errors.iamRole === ''}\r\n                   invalid={errors.iamRole !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.iamRole}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"ipAddressType\">Ip Address Type (*)</Label>\r\n            <Input type=\"text\" name=\"ipAddressType\" id=\"ipAddressType\" value={item.ipAddressType || ''} placeholder=\"Enter ipAddressType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ipAddressType')} autoComplete=\"ipAddressType\"\r\n                   valid={errors.ipAddressType === ''}\r\n                   invalid={errors.ipAddressType !== ''} >\r\n            </Input>\r\n           <FormFeedback>{errors.ipAddressType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"monitoring\" >Monitoring:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"monitoring\" id=\"monitoring\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('monitoring')} \r\n                    checked={item.monitoring === true}/>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"amiId\">Ami(*)</Label>\r\n            <Input type=\"select\" name=\"amiId\" id=\"amiId\" value={item.amiId || ''} placeholder=\"Enter amiId\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('amiId')} autoComplete=\"amiId\"\r\n                   valid={errors.amiId === ''}\r\n                   invalid={errors.amiId !== ''}>\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optAmis}\r\n            </Input>\r\n           <FormFeedback>{errors.amiId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"instanceTypeId\">Instance Type (*)</Label>\r\n            <Input type=\"select\" name=\"instanceTypeId\" id=\"instanceTypeId\" value={item.instanceTypeId || ''} placeholder=\"Enter instanceType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('instanceTypeId')} autoComplete=\"instanceTypeId\"\r\n                   valid={errors.instanceTypeId === ''}\r\n                   invalid={errors.instanceTypeId !== ''} >\r\n                   <option value=\"\" disabled>Choose</option>\r\n                   {optInstanceTypes}\r\n            </Input>\r\n           <FormFeedback>{errors.instanceTypeId}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          {securityGroup}\r\n\r\n          <FormGroup >\r\n            <Label for=\"userData\" >User Data:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"userData\" id=\"userData\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('userData')} \r\n                    checked={item.userData === true}/>\r\n          </FormGroup>\r\n\r\n          {encoded64}\r\n          {userDataText}\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(LaunchConfigurationEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass LaunchConfigurationStorageList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {eccStorages: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/launchConfigurations/${this.props.match.params.id}/eccStorages`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({eccStorages: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/launchConfigurations/${accId}/launchConfigurationStorages/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateEccStorage = [...this.state.eccStorages].filter(i => i.id !== id);\r\n      this.setState({eccStorages: updateEccStorage});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {eccStorages, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const eccStorageList = eccStorages.map(eccStorage => {\r\n      \r\n      const link = API_BASE_URL + \"/launchconfigurations/\" + eccStorage.launchConfiguration.id; \r\n      const deleteOnTermination= (eccStorage.deleteOnTermination)? 'Yes': 'No';\r\n      \r\n\r\n      return <tr key={eccStorage.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{eccStorage.id}</td>\r\n\r\n\r\n        <td>{eccStorage.volumeType}</td>\r\n        <td>{eccStorage.device}</td>\r\n        <td>{eccStorage.snapshot}</td>\r\n        <td>{eccStorage.size}</td>\r\n        <td>{eccStorage.volume}</td>\r\n        <td>{eccStorage.iops}</td>\r\n        <td>{eccStorage.throughput}</td>\r\n        <td>{deleteOnTermination}</td>\r\n        <td>{eccStorage.encrypted}</td>\r\n\r\n        <td><a href={link}>{eccStorage.launchConfiguration.id}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/launchconfiguration/\" + eccStorage.launchConfiguration.id  + \"/launchConfigurationStorages/\" + eccStorage.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(eccStorage.launchConfiguration.id, eccStorage.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/launchconfiguration/${this.props.match.params.id}/launchConfigurationStorages/new`;\r\n    const launchConfiguration = `${API_BASE_URL}/launchconfigurations`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={launchConfiguration}>Launch Configuration</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Launch Configuration Storage</Button>\r\n          </div>\r\n          \r\n          <h3>Launch Configuration Storage</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n                    \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Volume Type</th>\r\n              <th width=\"5%\">Device</th>\r\n              <th width=\"5%\">Snapshot</th>\r\n              <th width=\"5%\">Size</th>\r\n              <th width=\"5%\">Volume</th>\r\n              <th width=\"5%\">Iops</th>\r\n              <th width=\"5%\">Throughput</th>\r\n              <th width=\"5%\">DeleteOnTermination</th>\r\n              <th width=\"5%\">Encrypted</th>\r\n\r\n              <th width=\"5%\">Launch Configuration</th> \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {eccStorageList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaunchConfigurationStorageList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\n\r\nclass LaunchConfigurationStorageEdit extends Component {\r\n\r\n  emptyItem = {\r\n    volumeType: '',\r\n    device: '',\r\n    snapshot: '',\r\n    size: '',\r\n    volume: '', \r\n    iops: '', \r\n    throughput: '', \r\n    deleteOnTermination: true, \r\n    encrypted: '',\r\n    launchConfiguration: {},\r\n    touched: {\r\n      volumeType:false,\r\n      device: false,\r\n      snapshot: false,\r\n      volume: false, \r\n      iops: false,\r\n      throughput: false,  \r\n      encrypted: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const launchConfigurationStorage = await (await fetch(`${API_BASE_URL}/launchConfigurationStorages/${this.props.match.params.id}`)).json();\r\n      launchConfigurationStorage.touched = {\r\n        volumeType:false,\r\n        device: false,\r\n        snapshot: false,\r\n        volume: false, \r\n        iops: false,\r\n        throughput: false,  \r\n        encrypted: false\r\n      };\r\n      this.setState({item: launchConfigurationStorage});\r\n      \r\n    }\r\n    else {\r\n      const launchConfiguration = await (await fetch(`${API_BASE_URL}/launchConfigurations/${this.props.match.params.idl}`)).json();\r\n      const launchConfigurationStorage = {\r\n        volumeType: '',\r\n        device: '',\r\n        snapshot: '',\r\n        size: '',\r\n        volume: '', \r\n        iops: '', \r\n        throughput: '', \r\n        deleteOnTermination: true, \r\n        encrypted: '',\r\n        launchConfiguration: {},\r\n        touched: {\r\n          volumeType:false,\r\n          device: false,\r\n          snapshot: false,\r\n          volume: false, \r\n          iops: false,\r\n          throughput: false,  \r\n          encrypted: false\r\n        }\r\n      };\r\n      launchConfigurationStorage.launchConfiguration = launchConfiguration;\r\n      launchConfigurationStorage.touched = {\r\n          volumeType:false,\r\n          device: false,\r\n          snapshot: false,\r\n          volume: false,  \r\n          iops: false,\r\n          throughput: false,  \r\n          encrypted: false\r\n      };\r\n      this.setState({item: launchConfigurationStorage});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      volumeType:true, \r\n      device: true,\r\n      snapshot: true,\r\n      volume: true, \r\n      iops: true,\r\n      throughput: true,  \r\n      encrypted: true\r\n    };\r\n    const errors = this.validate(item.volumeType, item.device, item.snapshot, item.volume,  item.iops, item.throughput, item.encrypted);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/launchConfiguration/' + item.launchConfiguration.id +'/launchConfigurationStorages'; \r\n\r\n    item.launchConfiguration={id: item.launchConfiguration.id};\r\n    \r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/launchConfigurations/' + (item.launchConfiguration.id) + '/launchConfigurationStorages/'+(item.id) : API_BASE_URL + '/launchConfigurations/' + item.launchConfiguration.id + '/launchConfigurationStorages', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(volumeType, device, snapshot,  volume,  iops, throughput, encrypted) {\r\n\r\n    const errors = {\r\n      volumeType:'', \r\n      device: '',\r\n      snapshot: '',\r\n      volume: '', \r\n      iops: '',\r\n      throughput: '',  \r\n      encrypted: ''\r\n    };\r\n\r\n    \r\n    if(this.state.item.touched.volumeType && volumeType.length === 0){\r\n      errors.volumeType = 'volumeType should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.device && device.length === 0){\r\n      errors.device = 'device should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.snapshot && snapshot.length === 0){\r\n      errors.snapshot = 'snapshot should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.volume && volume.length === 0){\r\n      errors.volume = 'volume should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.iops && iops.length === 0){\r\n      errors.iops = 'iops should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.throughput && throughput.length === 0){\r\n      errors.throughput = 'throughput should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.encrypted && encrypted.length === 0){\r\n      errors.encrypted = 'encrypted should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Ec2 Storage' : 'Add Ec2 Storage'}</h2>;\r\n\r\n    const errors = this.validate(item.volumeType, item.device, item.snapshot, item.volume, item.iops, item.throughput, item.encrypted);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/launchconfiguration/\" + item.launchConfiguration.id + \"/launchConfigurationStorages\";\r\n\r\n    let launchConfiguration = null;\r\n    launchConfiguration = <FormGroup>\r\n            <Label for=\"launchConfigurationId\">Ec2: {item.launchConfiguration.id}</Label>\r\n            <Input type=\"text\" name=\"launchConfigurationId\" id=\"launchConfigurationId\" value={item.launchConfiguration.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n    let device = null;\r\n    device = (item.volumeType === 'Root') ?  <FormGroup>\r\n            <Label for=\"device\">Device (*)</Label>            \r\n            <Input type=\"select\" name=\"device\" id=\"device\" value={item.device || ''} placeholder=\"Enter device\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('device')} \r\n                   valid={errors.device === ''}\r\n                   invalid={errors.device !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"/dev/xvda\">/dev/xvda</option>\r\n            </Input>\r\n           <FormFeedback>{errors.device}</FormFeedback>\r\n          </FormGroup> : <FormGroup> <Label for=\"device\">Device (*)</Label>            \r\n            <Input type=\"select\" name=\"device\" id=\"device\" value={item.device || ''} placeholder=\"Enter device\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('device')} \r\n                   valid={errors.device === ''}\r\n                   invalid={errors.device !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"/dev/sdb\">/dev/sdb</option>\r\n              <option value=\"/dev/sdc\">/dev/sdc</option>\r\n              <option value=\"/dev/sdd\">/dev/sdd</option>\r\n              <option value=\"/dev/sde\">/dev/sde</option>\r\n              <option value=\"/dev/sdf\">/dev/sdf</option>\r\n              <option value=\"/dev/sdg\">/dev/sdg</option>\r\n              <option value=\"/dev/sdh\">/dev/sdh</option>\r\n              <option value=\"/dev/sdi\">/dev/sdi</option>\r\n              <option value=\"/dev/sdj\">/dev/sdj</option>\r\n              <option value=\"/dev/sdk\">/dev/sdk</option>\r\n              <option value=\"/dev/sdl\">/dev/sdl</option>\r\n            </Input>\r\n           <FormFeedback>{errors.device}</FormFeedback>\r\n          </FormGroup>;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          \r\n          {launchConfiguration}\r\n\r\n\r\n           <FormGroup>\r\n            <Label for=\"volumeType\">Volume Type (*)</Label>  \r\n            <Input type=\"select\" name=\"volumeType\" id=\"volumeType\" value={item.volumeType || ''} placeholder=\"Enter volumeType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('volumeType')} \r\n                   valid={errors.volumeType === ''}\r\n                   invalid={errors.volumeType !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"Root\">Root</option>\r\n              <option value=\"EBS\">EBS</option>\r\n            </Input>\r\n           <FormFeedback>{errors.volumeType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {device}\r\n\r\n          <FormGroup>\r\n            <Label for=\"snapshot\">Snapshot (*)</Label>\r\n            <Input type=\"text\" name=\"snapshot\" id=\"snapshot\" value={item.snapshot || ''} placeholder=\"Enter snapshot\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('snapshot')} autoComplete=\"snapshot\"\r\n                   valid={errors.snapshot === ''}\r\n                   invalid={errors.snapshot !== ''}\r\n            />\r\n           <FormFeedback>{errors.snapshot}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"size\">Size (*)</Label>\r\n            <Input type=\"number\" name=\"size\" id=\"size\" value={item.size || ''} placeholder=\"Enter size\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('size')} autoComplete=\"size\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"volume\">Volume Type(*)</Label>           \r\n            <Input type=\"select\" name=\"volume\" id=\"volume\" value={item.volume || ''} placeholder=\"Enter volume\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('volume')} autoComplete=\"volume\"\r\n                   valid={errors.volume === ''}\r\n                   invalid={errors.volume !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              <option value=\"gp2\">General Purpose SSD (gp2)</option>\r\n              <option value=\"io1\">Provisioned IOPS SSD (io1)</option>\r\n              <option value=\"standard\">Magnetic (standard)</option>\r\n            </Input>\r\n           <FormFeedback>{errors.volume}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"iops\">Iops (*)</Label>\r\n            <Input type=\"text\" name=\"iops\" id=\"iops\" value={item.iops || ''} placeholder=\"Enter iops\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('iops')} autoComplete=\"iops\"\r\n                    valid={errors.iops === ''}\r\n                   invalid={errors.iops !== ''}\r\n            />\r\n           <FormFeedback>{errors.iops}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"throughput\">Throughput (*)</Label>\r\n            <Input type=\"text\" name=\"throughput\" id=\"throughput\" value={item.throughput || ''} placeholder=\"Enter throughput\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('throughput')} autoComplete=\"throughput\"\r\n                   valid={errors.throughput === ''}\r\n                   invalid={errors.throughput !== ''}\r\n            />\r\n           <FormFeedback>{errors.throughput}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"encrypted\">Encrypted (*)</Label>\r\n            <Input type=\"text\" name=\"encrypted\" id=\"encrypted\" value={item.encrypted || ''} placeholder=\"Enter encrypted\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('encrypted')} autoComplete=\"encrypted\"\r\n                   valid={errors.encrypted === ''}\r\n                   invalid={errors.encrypted !== ''}\r\n            />\r\n           <FormFeedback>{errors.encrypted}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(LaunchConfigurationStorageEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass AutoScalingGroupList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {autoScalingGroups: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`/autoScalingGroups`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({autoScalingGroups: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/autoScalingGroups/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateAutoScalingGroup = [...this.state.autoScalingGroups].filter(i => i.id !== id);\r\n      this.setState({autoScalingGroups: updateAutoScalingGroup});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {autoScalingGroups, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const autoScalingGroupList = autoScalingGroups.map(autoScalingGroup => {\r\n      \r\n    const link = API_BASE_URL + \"/vpcs/\" + autoScalingGroup.vpc.id; \r\n    const linkAccount = API_BASE_URL + \"/accounts/\" + autoScalingGroup.account.id; \r\n    const loadBalancing= (autoScalingGroup.loadBalancing)? 'Yes': 'No'; \r\n    //const healthCheckType= (autoScalingGroup.healthCheckType)? 'Yes': 'No'; \r\n    const createAutoScalingGroup= (autoScalingGroup.createAutoScalingGroup)? 'Yes': 'No';      \r\n    \r\n    let subs='';\r\n    if(autoScalingGroup.subnets && autoScalingGroup.subnets.length){\r\n        autoScalingGroup.subnets.map(s => {  \r\n          subs = subs + s.id + \":\" + s.name + \":\" + s.az.name + \"| \";\r\n      });\r\n    }  \r\n\r\n    let targetGroups='';\r\n    if(autoScalingGroup.targetGroups && autoScalingGroup.targetGroups.length){\r\n        autoScalingGroup.targetGroups.map(t => {  \r\n          targetGroups = targetGroups + t.id + \":\" + t.name  + \"| \";\r\n      });\r\n    }  \r\n\r\n    \r\n\r\n      return <tr key={autoScalingGroup.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{autoScalingGroup.id}</td>\r\n        <td>{autoScalingGroup.name}</td>\r\n        <td><a href={linkAccount}>{autoScalingGroup.account.numAccount}</a></td>\r\n        <td><a href={link}>{autoScalingGroup.vpc.name}</a></td>\r\n        <td>{autoScalingGroup.launchConfiguration.id}</td>\r\n\t\t    <td>{subs}</td>\r\n  \r\n        <td>{autoScalingGroup.groupSize}</td>\r\n        <td>{loadBalancing}</td>\r\n        <td>{targetGroups}</td>\r\n        <td>{autoScalingGroup.healthCheckType}</td>\r\n        <td>{autoScalingGroup.healthCheckGracePeriod}</td>\r\n        <td>{autoScalingGroup.instanceProtection}</td>\r\n        <td>{autoScalingGroup.serviceLinkedRole}</td>\r\n        <td>{createAutoScalingGroup}</td>\r\n\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/autoscalinggroup/\" + autoScalingGroup.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n          \r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/autoscalinggroups/\" + autoScalingGroup.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(autoScalingGroup.vpc.id, autoScalingGroup.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/autoscalinggroups/new`;\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Auto Scaling Group</Button>\r\n          </div>\r\n          \r\n          <h3>Auto Scaling Group</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n      \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Launch Configuration</th>\r\n              <th width=\"5%\">Subnet</th>\r\n\r\n              <th width=\"5%\">Group Size</th>\r\n              <th width=\"5%\">LoadBalancing</th>\r\n              <th width=\"5%\">Target Group</th>\r\n              <th width=\"5%\">HealthCheckType</th>\r\n              <th width=\"5%\">HealthCheckGracePeriod</th>\r\n              <th width=\"5%\">Instance Protection</th>\r\n              <th width=\"5%\">ServiceLinkedRole</th>\r\n              <th width=\"5%\">CreateAutoScalingGroup</th>\r\n\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {autoScalingGroupList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default AutoScalingGroupList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass AutoScalingGroupEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    launchConfiguration: {},\r\n    launchConfigurations: {},  \r\n    launchConfigurationId: '',\r\n    groupSize: '', \r\n    loadBalancing: false, \r\n    targetGroups: [], \r\n    targetGroupss: [],\r\n    targetGroupId: [],\r\n    healthCheckType: 'EC2', \r\n    healthCheckGracePeriod: '', \r\n    instanceProtection: '', \r\n    serviceLinkedRole: '', \r\n    createAutoScalingGroup: true,\r\n\t  vpc: {},\r\n    vpcs: {},\r\n  \tvpcId : '',\r\n    subnets: [],\r\n    subnetss: [],\r\n    subnetId: [],\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      subnetId: false,\r\n      launchConfigurationId: false,  \r\n      groupSize: false, \r\n      targetGroupId: false, \r\n      healthCheckGracePeriod: false, \r\n      instanceProtection: false, \r\n      serviceLinkedRole: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const autoScalingGroup = await (await fetch(`${API_BASE_URL}/autoScalingGroups/${this.props.match.params.id}`)).json();\r\n      autoScalingGroup.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        subnetId: false,\r\n        launchConfigurationId: false,  \r\n        groupSize: false, \r\n        targetGroupId: false, \r\n        healthCheckGracePeriod: false, \r\n        instanceProtection: false, \r\n        serviceLinkedRole: false\r\n      };\r\n      this.setState({item: autoScalingGroup});\r\n\r\n\r\n      await fetch(API_BASE_URL + '/accounts/' + (autoScalingGroup.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await (await fetch(API_BASE_URL + '/vpcs/' + (autoScalingGroup.vpc.id) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      await (await fetch(API_BASE_URL + '/vpcs/' + (autoScalingGroup.vpc.id) + '/launchConfigurations',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.launchConfigurations = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      await (await fetch(API_BASE_URL + '/vpcs/' + (autoScalingGroup.vpc.id) + '/targetGroups',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.targetGroupss = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      \r\n      \r\n      let item = {...this.state.item};\r\n      item.vpcId = autoScalingGroup.vpc.id;\r\n      item.accountId = autoScalingGroup.account.id;\r\n      item.launchConfigurationId = autoScalingGroup.launchConfiguration.id;\r\n      var values = [];\r\n      item.subnets.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.subnets = values;\r\n      values = [];\r\n      item.targetGroups.map(t => { \r\n        values.push({\"id\": t.id});\r\n      });\r\n      item.targetGroups = values;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const autoScalingGroup = {\r\n        name: '',\r\n        accountId: false,\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        launchConfiguration: {},\r\n        launchConfigurations: {},  \r\n        launchConfigurationId: '',\r\n        groupSize: '', \r\n        loadBalancing: false, \r\n        targetGroups: [], \r\n        targetGroupss: [],\r\n        targetGroupId: [],\r\n        healthCheckType: 'EC2', \r\n        healthCheckGracePeriod: '', \r\n        instanceProtection: '', \r\n        serviceLinkedRole: '', \r\n        createAutoScalingGroup: true,\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        subnets: [],\r\n        subnetss: [],\r\n        subnetId: [],\r\n        touched: {\r\n          name: false,\r\n          vpcId: false,\r\n          subnetId: false,\r\n          launchConfigurationId: false,  \r\n          groupSize: false, \r\n          targetGroupId: false, \r\n          healthCheckGracePeriod: false, \r\n          instanceProtection: false, \r\n          serviceLinkedRole: false\r\n        }\r\n      };\r\n      autoScalingGroup.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          subnetId: false,\r\n          launchConfigurationId: false,  \r\n          groupSize: false, \r\n          targetGroupId: false, \r\n          healthCheckGracePeriod: false, \r\n          instanceProtection: false, \r\n          serviceLinkedRole: false\r\n      };\r\n      this.setState({item: autoScalingGroup});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*\r\n    await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    \r\n\r\n    if(name === 'typecreateAutoScalingGroup')\r\n    {\r\n      if(value === 'Keep'){\r\n        item.createAutoScalingGroup = true;\r\n      }\r\n      else\r\n      {\r\n        item.createAutoScalingGroup = false;\r\n      }\r\n    }\r\n\r\n    if(name === 'type')\r\n    {\r\n      if(value === 'ELB'){\r\n        item.healthCheckType = 'ELB';\r\n      }\r\n      else\r\n      {\r\n        item.healthCheckType = 'EC2';\r\n      }\r\n    }\r\n\r\n    if(name === 'loadBalancing')\r\n    {\r\n      item.loadBalancing = (target.checked) ? true: false;\r\n      if(item.healthCheckType === '') item.healthCheckType = 'EC2';\r\n    }\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n\r\n      item.subnetId = '';\r\n      item.subnets = [];\r\n      item.subnetss = [];\r\n\r\n      item.launchConfigurationId = '';\r\n      item.launchConfiguration = {};\r\n      item.launchConfigurations = [];\r\n\r\n      item.targetGroupId = '';\r\n      item.targetGroups = [];\r\n      item.targetGroupss = [];\r\n      \r\n\r\n    }\r\n    if(name === 'vpcId')\r\n    {\r\n      \r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/subnets',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.subnetss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/launchConfigurations',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.launchConfigurations = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/targetGroups',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.targetGroupss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true,\r\n      accountId: true,\r\n      vpcId: true,\r\n      subnetId: true,\r\n      launchConfigurationId: true,  \r\n      groupSize: true, \r\n      targetGroupId: true, \r\n      healthCheckGracePeriod: true, \r\n      instanceProtection: true, \r\n      serviceLinkedRole: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.launchConfigurationId, item.groupSize, item.targetGroupId, \r\n      item.healthCheckGracePeriod, item.instanceProtection, item.serviceLinkedRole, item.accountId);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/autoScalingGroups'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    item.launchConfiguration={id: item.launchConfigurationId};\r\n    if(!item.loadBalancing)\r\n    {\r\n      item.targetGroups = [];\r\n      item.healthCheckType = '';\r\n\r\n    }\r\n    //console.log(\"groupSize=\" + item.groupSize);\r\n    //console.log(\"\");\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/autoScalingGroups/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/autoScalingGroups', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, subnetId, launchConfigurationId, groupSize, targetGroupId, \r\n      healthCheckGracePeriod, instanceProtection, serviceLinkedRole, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      subnetId: '',\r\n      launchConfigurationId: '',  \r\n      groupSize: '', \r\n      targetGroupId: '', \r\n      healthCheckGracePeriod: '', \r\n      instanceProtection: '', \r\n      serviceLinkedRole: ''\r\n    };\r\n    //console.log('this.state.item.subnets.length=' + this.state.item.subnets.length);\r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.launchConfigurationId && launchConfigurationId.length === 0){\r\n      errors.launchConfigurationId = 'launchConfigurationId should not be null';\r\n      return errors;\r\n    } \r\n\r\n    if(this.state.item.touched.subnetId  && this.state.item.subnets.length === 0){\r\n      errors.subnetId = 'Add subnets.';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.groupSize && groupSize.length === 0){\r\n      errors.groupSize = 'groupSize should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.loadBalancing && this.state.item.touched.targetGroupId  && this.state.item.targetGroups.length === 0){\r\n      errors.targetGroupId = 'targetGroupId should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.healthCheckGracePeriod && healthCheckGracePeriod.length === 0){\r\n      errors.healthCheckGracePeriod = 'healthCheckGracePeriod should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.instanceProtection && instanceProtection.length === 0){\r\n      errors.instanceProtection = 'instanceProtection should not be null';\r\n      return errors;\r\n    }\r\n    if(this.state.item.touched.serviceLinkedRole && serviceLinkedRole.length === 0){\r\n      errors.serviceLinkedRole = 'serviceLinkedRole should not be null';\r\n      return errors;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'targetGroupId') \r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.targetGroupss && item.targetGroupss.length){\r\n              item.targetGroupss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.targetGroups = values;\r\n      }\r\n      if(selectName === 'subnetId') \r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.subnetss && item.subnetss.length){\r\n              item.subnetss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.subnets = values;\r\n      }\r\n      this.setState({item});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Auto Scaling Group' : 'Add Auto Scaling Group'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.subnetId, item.launchConfigurationId, item.groupSize, item.targetGroupId, \r\n      item.healthCheckGracePeriod, item.instanceProtection, item.serviceLinkedRole, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/autoscalinggroups\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n\r\n    let optls = [];\r\n    if(item.launchConfigurations && item.launchConfigurations.length){\r\n      item.launchConfigurations.map(s => {  \r\n          optls.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let launchConfiguration = item.launchConfigurationId || '';\r\n    item.launchConfigurationId = launchConfiguration;\r\n    \r\n    let optsub = [];  \r\n    let optsubs = [];\r\n    if(item.subnetss && item.subnetss.length){\r\n      item.subnetss.map(s => {  \r\n          if(item.subnets && item.subnets.length) item.subnets.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsub.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsubs.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n\r\n    let optst = [];  \r\n    let optsts = [];\r\n    if(item.targetGroupss && item.targetGroupss.length){\r\n      item.targetGroupss.map(s => {  \r\n          if(item.targetGroups && item.targetGroups.length) item.targetGroups.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optst.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsts.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n    const healthCheckType = item.healthCheckType;\r\n    const createAutoScalingGroup = item.createAutoScalingGroup;\r\n    const targetGroup = (item.loadBalancing === true) ? <FormGroup>\r\n            <Label for=\"targetGroupId\">Target Group (*)</Label>\r\n            <Select name=\"targetGroupId\" id=\"targetGroupId\"  placeholder=\"Enter targetGroup\" isMulti \r\n              value={optst}\r\n              onChange={e => this.onOptionChange(\"targetGroupId\",e)}\r\n              onBlur={this.handleBlur('targetGroupId')}\r\n              options={optsts}\r\n\r\n            />\r\n            <FormFeedback>{errors.targetGroupId}</FormFeedback>\r\n          </FormGroup> : ''\r\n    const type = (item.loadBalancing === true) ? <FormGroup tag=\"fieldset\">\r\n            <Label for=\"type\">Health Check Type (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"ELB\" checked={healthCheckType === 'ELB'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\" disabled = 'true'\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                ELB\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"EC2\" checked={healthCheckType === 'EC2'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\" disabled = 'true'\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                EC2\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup> : ''\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"launchConfigurationId\">Launch Configuration (*)</Label>\r\n            <Input type=\"select\" name=\"launchConfigurationId\" id=\"launchConfigurationId\"  value={launchConfiguration} onChange={this.handleChange} onBlur={this.handleBlur('launchConfigurationId')}\r\n                 valid={errors.launchConfigurationId === ''}\r\n                 invalid={errors.launchConfigurationId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optls}\r\n            </Input>\r\n            <FormFeedback>{errors.launchConfigurationId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"subnetId\">Subnets (*)</Label>\r\n            <Select name=\"subnetId\" id=\"subnetId\"  placeholder=\"Enter subnet\" isMulti \r\n              value={optsub}\r\n              onChange={e => this.onOptionChange(\"subnetId\",e)}\r\n              onBlur={this.handleBlur('subnetId')}\r\n              options={optsubs}\r\n\r\n            />\r\n            <FormFeedback>{errors.subnetId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"groupSize\">Group Size (*)</Label>\r\n            <Input type=\"number\" name=\"groupSize\" id=\"groupSize\" value={item.groupSize || ''} placeholder=\"Enter groupSize\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('groupSize')} autoComplete=\"groupSize\"\r\n                   valid={errors.groupSize === ''}\r\n                   invalid={errors.groupSize !== ''}\r\n            />\r\n           <FormFeedback>{errors.groupSize}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          \r\n          <FormGroup > \r\n            <Label for=\"loadBalancing\">Load Balancing:</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"loadBalancing\" id=\"loadBalancing\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('loadBalancing')} \r\n                    checked={item.loadBalancing === true}/>\r\n          </FormGroup>\r\n          \r\n          {targetGroup}\r\n          {type}\r\n         \r\n          <FormGroup>\r\n            <Label for=\"healthCheckGracePeriod\">Health Check Grace Period (*)</Label>\r\n            <Input type=\"number\" name=\"healthCheckGracePeriod\" id=\"healthCheckGracePeriod\" value={item.healthCheckGracePeriod || ''} placeholder=\"Enter healthCheckGracePeriod\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('healthCheckGracePeriod')} autoComplete=\"healthCheckGracePeriod\"\r\n                   valid={errors.healthCheckGracePeriod === ''}\r\n                   invalid={errors.healthCheckGracePeriod !== ''}\r\n            />\r\n           <FormFeedback>{errors.healthCheckGracePeriod}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"instanceProtection\">Instance Protection (*)</Label>\r\n            <Input type=\"text\" name=\"instanceProtection\" id=\"instanceProtection\" value={item.instanceProtection || ''} placeholder=\"Enter instanceProtection\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('instanceProtection')} autoComplete=\"instanceProtection\"\r\n                   valid={errors.instanceProtection === ''}\r\n                   invalid={errors.instanceProtection !== ''}\r\n            />\r\n           <FormFeedback>{errors.instanceProtection}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"serviceLinkedRole\">Service Linked Role (*)</Label>\r\n            <Input type=\"text\" name=\"serviceLinkedRole\" id=\"serviceLinkedRole\" value={item.serviceLinkedRole || ''} placeholder=\"Enter serviceLinkedRole\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('serviceLinkedRole')} autoComplete=\"serviceLinkedRole\"\r\n                   valid={errors.serviceLinkedRole === ''}\r\n                   invalid={errors.serviceLinkedRole !== ''}\r\n            />\r\n           <FormFeedback>{errors.serviceLinkedRole}</FormFeedback>\r\n          </FormGroup>\r\n\r\n     \r\n          \r\n          <FormGroup tag=\"fieldset\">\r\n            <Label for=\"typecreateAutoScalingGroup\">Create Auto Scaling Group (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"typecreateAutoScalingGroup\" id=\"typecreateAutoScalingGroup\" value=\"Keep\" checked={createAutoScalingGroup === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('typecreateAutoScalingGroup')} autoComplete=\"typecreateAutoScalingGroup\"\r\n                       valid={errors.typecreateAutoScalingGroup === ''}\r\n                       invalid={errors.typecreateAutoScalingGroup !== ''}\r\n                />{' '}\r\n                Keep this group at its initial size\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"typecreateAutoScalingGroup\" id=\"type\" value=\"NKeep\" checked={createAutoScalingGroup === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('typecreateAutoScalingGroup')} autoComplete=\"typecreateAutoScalingGroup\"\r\n                       valid={errors.typecreateAutoScalingGroup === ''}\r\n                       invalid={errors.typecreateAutoScalingGroup !== ''}\r\n                />{' '}\r\n                Use scaling policies to adjust the capacity of this group\r\n              </Label>\r\n            </FormGroup>\r\n            \r\n            <FormFeedback>{errors.typecreateAutoScalingGroup}</FormFeedback>\r\n          </FormGroup>\r\n\r\n  \r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(AutoScalingGroupEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagAutoScalingGroupList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/autoScalingGroups/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/autoScalingGroups/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTag = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTag});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/autoscalinggroups/\" + tag.autoScalingGroup.id; \r\n      //const allowdeny= (tag.allow)? 'Allow': 'Deny';\r\n      \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.autoScalingGroup.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/autoscalinggroup/\" + tag.autoScalingGroup.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.autoScalingGroup.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/autoscalinggroup/${this.props.match.params.id}/tags/new`;\r\n    const autoscalinggroup = `${API_BASE_URL}/autoscalinggroups`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={autoscalinggroup}>Auto Scaling Group</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Tag</Button>\r\n          </div>\r\n          \r\n          <h3>Tag</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Auto Scaling Group</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagAutoScalingGroupList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\n\r\nclass TagAutoScalingGroupEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    autoScalingGroup: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const autoScalingGroup = await (await fetch(`${API_BASE_URL}/autoScalingGroups/${this.props.match.params.ida}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        autoScalingGroup: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.autoScalingGroup = autoScalingGroup;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/autoscalinggroup/' + item.autoScalingGroup.id +'/tags'; \r\n\r\n    item.autoScalingGroup={id: item.autoScalingGroup.id};\r\n    \r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/autoScalingGroups/' + (item.autoScalingGroup.id) + '/tags/'+(item.id) : API_BASE_URL + '/autoScalingGroups/' + item.autoScalingGroup.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/autoscalinggroup/\" + item.autoScalingGroup.id + \"/tags\";\r\n\r\n    let autoScalingGroup = null;\r\n    autoScalingGroup = <FormGroup>\r\n            <Label for=\"autoScalingGroupId\">Auto Scaling Group: {item.autoScalingGroup.name}</Label>\r\n            <Input type=\"text\" name=\"autoScalingGroupId\" id=\"autoScalingGroupId\" value={item.autoScalingGroup.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {autoScalingGroup}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagAutoScalingGroupEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass PolicyList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {policys: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/policys`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({policys: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/policys/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updatePolicy = [...this.state.policys].filter(i => i.id !== id);\r\n      this.setState({policys: updatePolicy});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {policys, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const policyList = policys.map(policy => {\r\n      \r\n    const link = API_BASE_URL + \"/accounts/\" + policy.account.id; \r\n/*\r\n    const loadBalancing= (policy.loadBalancing)? 'Yes': 'No'; \r\n    const createPolicy= (policy.createPolicy)? 'Yes': 'No';      \r\n    \r\n    let subs='';\r\n    if(policy.subnets && policy.subnets.length){\r\n        policy.subnets.map(s => {  \r\n          subs = subs + s.id + \":\" + s.name + \":\" + s.az.name + \"| \";\r\n      });\r\n    }  \r\n*/\r\n    let roles='';\r\n    if(policy.roles && policy.roles.length){\r\n        policy.roles.map(t => {  \r\n          roles = roles + t + \"| \";\r\n      });\r\n    }  \r\n    let groups='';\r\n    if(policy.groups && policy.groups.length){\r\n        policy.groups.map(t => {  \r\n          groups = groups + t + \"| \";\r\n      });\r\n    }  \r\n    let endPoints='';    \r\n    if(policy.endPoints && policy.endPoints.length){\r\n        policy.endPoints.map(t => {  \r\n          endPoints = endPoints + t  + \"| \";\r\n      });\r\n    }  \r\n    let isUsed = false;\r\n    if(roles !== '' || groups !== '' || endPoints !== '') isUsed = true;\r\n\r\n      return <tr key={policy.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{policy.id}</td> \r\n        <td>{policy.name}</td>\r\n        <td>{policy.policyJson}</td>\r\n        <td><a href={link}>{policy.account.numAccount}</a></td>\r\n        <td>{policy.description}</td>\r\n        <td>{roles}</td>\r\n        <td>{groups}</td>\r\n        <td>{endPoints}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/policys/\" + policy.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(policy.account.id, policy.id)} disabled={isUsed}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/policys/new`;\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Policy</Button>\r\n          </div>\r\n          \r\n          <h3>Policy</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n      \r\n              <th width=\"5%\">Id</th> \r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Policy Json</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Roles</th>\r\n              <th width=\"5%\">Groups</th>\r\n              <th width=\"5%\">EndPoints</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {policyList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default PolicyList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass PolicyEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    description: '', \r\n    policyJson: '',\r\n\t  account: {},\r\n    accounts: [],\r\n  \taccountId : '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      policyJson: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const policy = await (await fetch(`${API_BASE_URL}/policys/${this.props.match.params.id}`)).json();\r\n      policy.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        policyJson: false\r\n      };\r\n      this.setState({item: policy});\r\n      \r\n      let item = {...this.state.item};\r\n      item.accountId = policy.account.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const policy = {\r\n        name: '',\r\n        description: '', \r\n        policyJson: '',\r\n        account: {},\r\n        accounts: [],\r\n        accountId : '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          policyJson: false\r\n        }\r\n      };\r\n      policy.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          policyJson: false\r\n      };\r\n      this.setState({item: policy});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true,\r\n      accountId: true,\r\n      policyJson: true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.policyJson);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/policys'; \r\n\r\n    item.account={id: item.accountId};\r\n    \r\n    var values = [];\r\n      item.roles.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.roles = values;\r\n    \r\n    var values = [];\r\n      item.groups.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.groups = values;\r\n\r\n    var values = [];\r\n      item.endPoints.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.endPoints = values;\r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/policys/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/policys', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId, policyJson) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      policyJson: ''\r\n    };\r\n    \r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.policyJson && policyJson.length === 0){\r\n      errors.policyJson = 'policyJson should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Policy' : 'Add Policy'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.policyJson);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/policys\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let isUsed = false; \r\n    if(item.id !== '' && ((item.roles && item.roles.length !== 0) || (item.groups && item.groups.length !== 0) || (item.endPoints && item.endPoints.length !== 0)) ) isUsed = true; \r\n    \r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n \r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\" disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')} disabled={isUsed}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"policyJson\">Policy (*)</Label>\r\n            <Input type=\"textarea\" name=\"policyJson\" id=\"policyJson\" value={item.policyJson || ''} placeholder=\"Enter policyJson\" disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('policyJson')} autoComplete=\"policyJson\"\r\n                   valid={errors.policyJson === ''}\r\n                   invalid={errors.policyJson !== ''}\r\n            />\r\n           <FormFeedback>{errors.policyJson}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"description\">Description (*)</Label>\r\n            <Input type=\"text\" name=\"description\" id=\"description\" value={item.description || ''} placeholder=\"Enter description\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('description')} autoComplete=\"description\"\r\n                   \r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(PolicyEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass EndPointList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {endPoints: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/endPoints`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({endPoints: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/endPoints/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateEndPoint = [...this.state.endPoints].filter(i => i.id !== id);\r\n      this.setState({endPoints: updateEndPoint});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {endPoints, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const endPointList = endPoints.map(endPoint => {\r\n      \r\n    const link = API_BASE_URL + \"/vpcs/\" + endPoint.vpc.id; \r\n    const linkAccount = API_BASE_URL + \"/accounts/\" + endPoint.account.id;\r\n    const fullAccess = (endPoint.fullAccess)? 'Yes': 'No';\r\n    \r\n    const policy = (endPoint.policy) ? endPoint.policy.id : '';\r\n      return <tr key={endPoint.id}> \r\n        <td style={{whiteSpace: 'nowrap'}}>{endPoint.id}</td> \r\n        <td>{endPoint.name}</td>\r\n        <td><a href={linkAccount}>{endPoint.account.numAccount}</a></td>\r\n        <td>{endPoint.serviceName}</td>\r\n      \r\n        <td>{fullAccess}</td>\r\n        <td><a href={link}>{endPoint.vpc.id}</a></td>\r\n        <td>{endPoint.routeTable.id}</td>\r\n        <td>{policy}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/endPoints/\" + endPoint.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(endPoint.vpc.id, endPoint.id)} >Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/endPoints/new`;\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add EndPoint</Button>\r\n          </div>\r\n          \r\n          <h3>EndPoint</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n      \r\n              <th width=\"5%\">Id</th> \r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Service Name</th> \r\n              \r\n              <th width=\"5%\">Full Access</th>\r\n              <th width=\"5%\">Vpc</th>\r\n              <th width=\"5%\">Route table</th>\r\n              <th width=\"5%\">Policy</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {endPointList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default EndPointList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass EndPointEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    serviceName: '', \r\n    fullAccess: true,\r\n\t  vpc: {},\r\n    vpcs: [],\r\n  \tvpcId : '',\r\n    routeTable: {},\r\n    routeTables: [],\r\n    routeTableId : '',\r\n    policy: {},\r\n    policys: [],\r\n    policyId : '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      serviceName: false,\r\n      routeTableId: false,\r\n      policyId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const endPoint = await (await fetch(`${API_BASE_URL}/endPoints/${this.props.match.params.id}`)).json();\r\n      endPoint.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        serviceName: false,\r\n        routeTableId: false,\r\n        policyId: false\r\n      };\r\n      this.setState({item: endPoint});\r\n      \r\n      let item = {...this.state.item};\r\n      item.vpcId = endPoint.vpc.id;\r\n      item.accountId = endPoint.account.id;\r\n      item.routeTableId = endPoint.routeTable.id;\r\n      item.policyId = (endPoint.policy) ? endPoint.policy.id : '';\r\n\r\n      \r\n      \r\n      await fetch(API_BASE_URL + '/accounts/' + (endPoint.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        //let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      await (await fetch(API_BASE_URL + '/vpcs/' + (endPoint.vpc.id) + '/routeTables',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.routeTables = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n\r\n      await (await fetch(API_BASE_URL + '/accounts/' + (endPoint.account.id) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          //let item = {...this.state.item};\r\n          item.policys = jsonResult;\r\n          this.setState({item: item});\r\n        }));\r\n      \r\n      \r\n\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const endPoint = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        serviceName: '', \r\n        fullAccess: true,\r\n        vpc: {},\r\n        vpcs: [],\r\n        vpcId : '',\r\n        routeTable: {},\r\n        routeTables: [],\r\n        routeTableId : '',\r\n        policy: {},\r\n        policys: [],\r\n        policyId : '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          serviceName: false,\r\n          routeTableId: false,\r\n          policyId: false\r\n        }\r\n      };\r\n      endPoint.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          serviceName: false,\r\n          routeTableId: false,\r\n          policyId: false\r\n      };\r\n      this.setState({item: endPoint});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n    /*\r\n    await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n    \r\n    if(name === 'fAccess')\r\n    {\r\n      if(value === 'Yes'){\r\n        item.fullAccess = true;\r\n      }\r\n      else\r\n      {\r\n        item.fullAccess = false;\r\n      }\r\n    }\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n      item.policyId = '';\r\n      item.policys = [];\r\n      item.routeTableId = '';\r\n      item.routeTables = [];\r\n    }\r\n    if(name === 'vpcId')\r\n    {\r\n    \r\n        fetch(API_BASE_URL + '/vpcs/' + (item.vpcId) + '/routeTables',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.routeTables = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n\r\n        fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.policys = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      \r\n     \r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true,\r\n      accountId: true,\r\n      vpcId: true,\r\n      serviceName: true,\r\n      routeTableId: true,\r\n      policyId: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.serviceName, item.routeTableId, item.policyId, item.accountId);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/endpoints'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    item.routeTable={id: item.routeTableId};\r\n    \r\n    if(item.fullAccess)\r\n    {\r\n      item.policy = null;\r\n    }\r\n    else\r\n    {\r\n      item.policy={id: item.policyId};\r\n    }\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/endPoints/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/endPoints', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, serviceName, routeTableId, policyId, accountId) {\r\n\r\n    const errors = {\r\n      name: '',\r\n      accountId: '',\r\n      vpcId: '',\r\n      serviceName: '',\r\n      routeTableId: '',\r\n      policyId: ''\r\n    };\r\n    \r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.serviceName && serviceName.length === 0){\r\n      errors.serviceName = 'serviceName should not be null';\r\n      return errors;\r\n    } \r\n\r\n    if(this.state.item.touched.routeTableId && routeTableId.length === 0){\r\n      errors.routeTableId = 'routeTableId should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(!this.state.item.fullAccess && this.state.item.touched.policyId && policyId.length === 0){\r\n      errors.policyId = 'policyId should not be null';\r\n      return errors;\r\n    }\r\n   \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit EndPoint' : 'Add EndPoint'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.serviceName, item.routeTableId, item.policyId, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/endpoints\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let vpc = item.vpcId || '';\r\n    item.vpcId = vpc;\r\n    \r\n    let optsp = [];\r\n    if(item.policys && item.policys.length){\r\n      item.policys.map(s => {  \r\n          optsp.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let policy = item.policyId || '';\r\n    item.policyId = policy;\r\n\r\n    let optsr = [];\r\n    if(item.routeTables && item.routeTables.length){\r\n      item.routeTables.map(s => {  \r\n          optsr.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let routeTable = item.routeTableId || '';\r\n    item.routeTableId = routeTable;\r\n\r\n    let serviceName = item.serviceName || '';\r\n    item.serviceName = serviceName;\r\n    \r\n    const fullAccess = item.fullAccess;\r\n\r\n    const policys = (!item.fullAccess) ? <FormGroup>\r\n            <Label for=\"policyId\">Policy (*)</Label>\r\n            <Input type=\"select\" name=\"policyId\" id=\"policyId\"  value={policy} onChange={this.handleChange} onBlur={this.handleBlur('policyId')}\r\n                 valid={errors.policyId === ''}\r\n                 invalid={errors.policyId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsp}\r\n            </Input>\r\n            <FormFeedback>{errors.policyId}</FormFeedback>\r\n          </FormGroup> : ''\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n \r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpc (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={vpc} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>  \r\n            <Label for=\"serviceName\">Service Name (*)</Label>\r\n            <Input type=\"select\" name=\"serviceName\" id=\"serviceName\" value={serviceName} \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('serviceName')} \r\n                   valid={errors.serviceName === ''}\r\n                   invalid={errors.serviceName !== ''}\r\n                  >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  <option value=\"com.amazonaws.eu-west-1.s3:Gateway\">com.amazonaws.eu-west-1.s3: Gateway</option>\r\n                  <option value=\"com.amazonaws.eu-west-1.dynamodb:Gateway\">com.amazonaws.eu-west-1.dynamodb: Gateway</option>\r\n            </Input>\r\n           <FormFeedback>{errors.serviceName}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"routeTableId\">Route Table (*)</Label>\r\n            <Input type=\"select\" name=\"routeTableId\" id=\"routeTableId\"  value={routeTable} onChange={this.handleChange} onBlur={this.handleBlur('routeTableId')}\r\n                 valid={errors.routeTableId === ''}\r\n                 invalid={errors.routeTableId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optsr}\r\n            </Input>\r\n            <FormFeedback>{errors.routeTableId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup tag=\"fieldset\">\r\n            <Label for=\"fAccess\">Access (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"fAccess\" id=\"fAccess\" value=\"Yes\" checked={fullAccess === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('fAccess')} autoComplete=\"fAccess\"\r\n                       valid={errors.fAccess === ''}\r\n                       invalid={errors.fAccess !== ''}\r\n                />{' '}\r\n                Yes\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"fAccess\" id=\"fAccess\" value=\"No\" checked={fullAccess === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('fAccess')} autoComplete=\"fAccess\"\r\n                       valid={errors.fAccess === ''}\r\n                       invalid={errors.fAccess !== ''}\r\n                />{' '}\r\n                No\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.fAccess}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {policys}\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(EndPointEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RoleList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {roles: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/roles`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({roles: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/roles/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateRole = [...this.state.roles].filter(i => i.id !== id);\r\n      this.setState({roles: updateRole});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {roles, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const roleList = roles.map(role => {\r\n      \r\n    const link = API_BASE_URL + \"/accounts/\" + role.account.id; \r\n\r\n    let policies='';    \r\n    if(role.policys && role.policys.length){\r\n        role.policys.map(t => {  \r\n          policies = policies + t.id + \":\" + t.name  + \"| \";\r\n      });\r\n    } \r\n    let isUsed = false;\r\n    //if(roles !== '' || groups !== '' || endPoints !== '') isUsed = true;\r\n\r\n      return <tr key={role.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{role.id}</td> \r\n        <td>{role.name}</td>\r\n        <td>{role.serviceName}</td>\r\n        <td><a href={link}>{role.account.numAccount}</a></td>\r\n        <td>{role.description}</td>\r\n        <td>{policies}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/roles/\" + role.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(role.account.id, role.id)} disabled={isUsed}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/roles/new`;\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Role</Button>\r\n          </div>\r\n          \r\n          <h3>Role</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n      \r\n              <th width=\"5%\">Id</th> \r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Service Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Policies</th>\r\n              \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {roleList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default RoleList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass RoleEdit extends Component {\r\npolicies\r\n  emptyItem = {\r\n    name: '',\r\n    description: '', \r\n    serviceName: '',\r\n\t  account: {},\r\n    accounts: [],\r\n  \taccountId : '',\r\n    policys: [],\r\n    policyss: [],\r\n    policyId: [],\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      serviceName: false,\r\n      policyId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const role = await (await fetch(`${API_BASE_URL}/roles/${this.props.match.params.id}`)).json();\r\n      role.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        serviceName: false,\r\n        policyId: false\r\n      };\r\n      this.setState({item: role});\r\n\r\n      let account={};\r\n      await (await fetch(API_BASE_URL + \"/accounts/\" + role.account.id,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        account = jsonResult;\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.policyss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      }));\r\n      \r\n      let item = {...this.state.item};\r\n      item.accountId = role.account.id;\r\n      var values = [];\r\n      item.policys.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.policys = values;\r\n      \r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const role = {\r\n        name: '',\r\n        description: '', \r\n        serviceName: '',\r\n        account: {},\r\n        accounts: [],\r\n        accountId : '',\r\n        policys: [],\r\n        policyss: [],\r\n        policyId: [],\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          roleJson: false,\r\n          policyId: false\r\n        }\r\n      };\r\n      role.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          serviceName: false,\r\n          policyId: false\r\n      };\r\n      this.setState({item: role});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'accountId')\r\n    {\r\n\r\n      let account={};\r\n      fetch(API_BASE_URL + \"/accounts/\" + item.accountId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        account = jsonResult;\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.policyss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true,\r\n      accountId: true,\r\n      serviceName: true,\r\n      policyId: true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.serviceName, item.policyId);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/roles'; \r\n\r\n    item.account={id: item.accountId};\r\n    \r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/roles/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/roles', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId, serviceName, policyId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      serviceName: '',\r\n      policyId: ''\r\n    };\r\n    \r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.serviceName && serviceName.length === 0){\r\n      errors.serviceName = 'serviceName should not be null';\r\n      return errors;\r\n    }\r\n\r\n/*\r\n    if(this.state.item.touched.policyId  && this.state.item.policys.length === 0){\r\n      errors.policyId = 'Add policyId.';\r\n      return errors;\r\n    }\r\n*/  \r\n    return errors;\r\n  }\r\n\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'policyId') \r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.policyss && item.policyss.length){\r\n              item.policyss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.policys = values;\r\n      }\r\n      \r\n      this.setState({item});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Role' : 'Add Role'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.serviceName, item.policyId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/roles\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let isUsed = false; \r\n    //if(item.id !== '' && ((item.roles && item.roles.length !== 0) || (item.groups && item.groups.length !== 0) || (item.endPoints && item.endPoints.length !== 0)) ) isUsed = true; \r\n    let optsp = [];  \r\n    let optsps = [];\r\n    if(item.policyss && item.policyss.length){\r\n      item.policyss.map(s => {  \r\n          if(item.policys && item.policys.length) item.policys.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsp.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsps.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n        \r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n \r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label> \r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\" disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormText>Use alphanumeric and '+=,.@-_' characters. Maximum 64 characters.</FormText>\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')} disabled={isUsed}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"serviceName\">Service Name (*)</Label>         \r\n            <Input type=\"select\" name=\"serviceName\" id=\"serviceName\" value={item.serviceName || ''} disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('serviceName')} \r\n                   valid={errors.serviceName === ''}\r\n                   invalid={errors.serviceName !== ''}\r\n                   >\r\n                  <option value=\"\" disabled>Choose</option>\r\n                  <option value=\"AutoScaling\">Auto Scaling</option>\r\n                  <option value=\"DynamoDB\">DynamoDB</option>\r\n                  <option value=\"EC2\">EC2</option>\r\n                  <option value=\"ElasticLoadBalancing\">ElasticLoadBalancing</option>\r\n                  <option value=\"ElasticCache\">ElasticCache</option>\r\n                  <option value=\"EKS\">EKS</option>\r\n                  <option value=\"Lambda\">Lambda</option>\r\n                  <option value=\"Rds\">Rds</option>\r\n                  <option value=\"S3\">S3</option>\r\n                  <option value=\"SNS\">SNS</option>\r\n            </Input>\r\n           <FormFeedback>{errors.serviceName}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"policyId\">Policies</Label>\r\n            <Select name=\"policyId\" id=\"policyId\"  placeholder=\"Enter policyId\" isMulti \r\n              value={optsp}\r\n              onChange={e => this.onOptionChange(\"policyId\",e)}\r\n              onBlur={this.handleBlur('policyId')}\r\n              options={optsps}\r\n\r\n            />\r\n            <FormFeedback>{errors.policyId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"description\">Description (*)</Label> \r\n            <Input type=\"text\" name=\"description\" id=\"description\" value={item.description || ''} placeholder=\"Enter description\" \r\n                   onChange={this.handleChange} onBlur={this.handleBlur('description')} autoComplete=\"description\"\r\n                   \r\n            />\r\n            <FormText>Maximum 1000 characters. Use alphanumeric and '+=,.@-_' characters</FormText>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(RoleEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass GroupList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {groups: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/groups`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({groups: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/groups/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateGroup = [...this.state.groups].filter(i => i.id !== id);\r\n      this.setState({groups: updateGroup});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {groups, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const groupList = groups.map(group => {\r\n      \r\n    const link = API_BASE_URL + \"/accounts/\" + group.account.id; \r\n\r\n    let policies='';    \r\n    if(group.policys && group.policys.length){\r\n        group.policys.map(t => {  \r\n          policies = policies + t.id + \":\" + t.name  + \"| \";\r\n      });\r\n    }  \r\n\r\n    let users='';    \r\n    if(group.users && group.users.length){\r\n        group.users.map(t => {  \r\n          users = users + t.id + \":\" + t.name  + \"| \";\r\n      });\r\n    }  \r\n\r\n    let isUsed = false;\r\n    if(users !== '') isUsed = true;\r\n\r\n      return <tr key={group.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{group.id}</td> \r\n        <td>{group.name}</td>\r\n        <td><a href={link}>{group.account.numAccount}</a></td>\r\n        <td>{policies}</td>\r\n        <td>{users}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/groups/\" + group.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(group.account.id, group.id)} disabled={isUsed}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/groups/new`;\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Group</Button>\r\n          </div>\r\n          \r\n          <h3>Group</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n      \r\n              <th width=\"5%\">Id</th> \r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Policies</th>\r\n              <th width=\"5%\">Users</th>\r\n              \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {groupList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default GroupList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass GroupEdit extends Component {\r\npolicies\r\n  emptyItem = {\r\n    name: '',\r\n\t  account: {},\r\n    accounts: [],\r\n  \taccountId : '',\r\n    policys: [],\r\n    policyss: [],\r\n    policyId: [],\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      policyId: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const group = await (await fetch(`${API_BASE_URL}/groups/${this.props.match.params.id}`)).json();\r\n      group.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        policyId: false\r\n      };\r\n      this.setState({item: group});\r\n\r\n      let account={};\r\n      await (await fetch(API_BASE_URL + \"/accounts/\" + group.account.id,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        account = jsonResult;\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.policyss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      }));\r\n      \r\n      let item = {...this.state.item};\r\n      item.accountId = group.account.id;\r\n      var values = [];\r\n      item.policys.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.policys = values;\r\n      \r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const group = {\r\n        name: '',\r\n        account: {},\r\n        accounts: [],\r\n        accountId : '',\r\n        policys: [],\r\n        policyss: [],\r\n        policyId: [],\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          policyId: false\r\n        }\r\n      };\r\n      group.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          policyId: false\r\n      };\r\n      this.setState({item: group});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'accountId')\r\n    {\r\n\r\n      let account={};\r\n      fetch(API_BASE_URL + \"/accounts/\" + item.accountId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        account = jsonResult;\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.policyss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true,\r\n      accountId: true,\r\n      policyId: true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.policyId);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/groups'; \r\n\r\n    item.account={id: item.accountId};\r\n    \r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/groups/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/groups', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId,  policyId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      policyId: ''\r\n    };\r\n    \r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n\r\n/*\r\n    if(this.state.item.touched.policyId  && this.state.item.policys.length === 0){\r\n      errors.policyId = 'Add policyId.';\r\n      return errors;\r\n    }\r\n*/  \r\n    return errors;\r\n  }\r\n\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'policyId') \r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.policyss && item.policyss.length){\r\n              item.policyss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.policys = values;\r\n      }\r\n      \r\n      this.setState({item});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Group' : 'Add Group'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.policyId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/groups\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let isUsed = false; \r\n    if(item.id !== '' && (item.users && item.users.length !== 0)  ) isUsed = true; \r\n    \r\n    let optsp = [];  \r\n    let optsps = [];\r\n    if(item.policyss && item.policyss.length){\r\n      item.policyss.map(s => {  \r\n          if(item.policys && item.policys.length) item.policys.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsp.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsps.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n        \r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n \r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label> \r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\" disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormText>Use alphanumeric and '+=,.@-_' characters. Maximum 64 characters.</FormText>\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')} disabled={isUsed}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"policyId\">Policies</Label>\r\n            <Select name=\"policyId\" id=\"policyId\"  placeholder=\"Enter policyId\" isMulti disabled={isUsed}\r\n              value={optsp}\r\n              onChange={e => this.onOptionChange(\"policyId\",e)}\r\n              onBlur={this.handleBlur('policyId')}\r\n              options={optsps}\r\n\r\n            />\r\n            <FormFeedback>{errors.policyId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(GroupEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass UserList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {users: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/users`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({users: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/users/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateUser = [...this.state.users].filter(i => i.id !== id);\r\n      this.setState({users: updateUser});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {users, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const userList = users.map(user => {\r\n      \r\n    const link = API_BASE_URL + \"/accounts/\" + user.account.id; \r\n\r\n    let groups='';    \r\n    if(user.groups && user.groups.length){\r\n        user.groups.map(t => {  \r\n          groups = groups + t.id + \":\" + t.name  + \"| \";\r\n      });\r\n    }  \r\n    let programmaticAccess = (user.programmaticAccess) ? 'Yes': 'No'; \r\n    let consoleAccess = (user.consoleAccess) ? 'Yes': 'No'; \r\n    let requirePasswordReset = (user.requirePasswordReset) ? 'Yes': 'No'; \r\n    let autogeneratedPassword = (user.autogeneratedPassword) ? 'Yes': 'No'; \r\n    \r\n\r\n      return <tr key={user.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{user.id}</td> \r\n        <td>{user.name}</td>\r\n\r\n        <td>{programmaticAccess}</td>\r\n        <td>{consoleAccess}</td>\r\n        <td>{requirePasswordReset}</td>\r\n        <td>{autogeneratedPassword}</td>\r\n        <td>{user.customPassword}</td>\r\n\r\n\r\n        <td><a href={link}>{user.account.numAccount}</a></td>\r\n        <td>{groups}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/users/\" + user.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(user.account.id, user.id)} >Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/users/new`;\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add User</Button>\r\n          </div>\r\n          \r\n          <h3>User</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n\r\n              <th width=\"5%\">Id</th> \r\n              <th width=\"5%\">Name</th>\r\n\r\n              <th width=\"5%\">programmaticAccess</th>\r\n              <th width=\"5%\">consoleAccess</th>\r\n              <th width=\"5%\">requirePasswordReset</th>\r\n              <th width=\"5%\">autogeneratedPassword</th>\r\n              <th width=\"5%\">customPassword</th>\r\n\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Groups</th>\r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {userList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default UserList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass UserEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n\t  account: {},\r\n    accounts: [],\r\n  \taccountId : '',\r\n    groups: [],\r\n    groupss: [],\r\n    groupId: [],\r\n    programmaticAccess: false, \r\n    consoleAccess: false,\r\n    requirePasswordReset: true,\r\n    autogeneratedPassword: true,\r\n    customPassword: '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      groupId: false,\r\n      customPassword: false,\r\n      programmaticAccess:false,\r\n      consoleAccess:false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const user = await (await fetch(`${API_BASE_URL}/users/${this.props.match.params.id}`)).json();\r\n      user.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        groupId: false,\r\n        customPassword: false,\r\n        programmaticAccess:false,\r\n        consoleAccess:false\r\n      };\r\n      this.setState({item: user});\r\n\r\n      let account={};\r\n      await (await fetch(API_BASE_URL + \"/accounts/\" + user.account.id,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        account = jsonResult;\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/groups',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.groupss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      }));\r\n      \r\n      let item = {...this.state.item};\r\n      item.accountId = user.account.id;\r\n      var values = [];\r\n      item.groups.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.groups = values;\r\n      \r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const user = {\r\n        name: '',\r\n        account: {},\r\n        accounts: [],\r\n        accountId : '',\r\n        groups: [],\r\n        groupss: [],\r\n        groupId: [],\r\n        programmaticAccess: false,\r\n        consoleAccess: false,\r\n        requirePasswordReset: true,\r\n        autogeneratedPassword: true,\r\n        customPassword: '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          groupId: false,\r\n          customPassword: false,\r\n          programmaticAccess:false,\r\n          consoleAccess:false\r\n        }\r\n      };\r\n      user.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          groupId: false,\r\n          customPassword: false,\r\n          programmaticAccess:false,\r\n          consoleAccess:false\r\n      };\r\n      this.setState({item: user});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n     \r\n    if(name === 'programmaticAccess')\r\n    {\r\n      item.programmaticAccess = (target.checked) ? true: false;\r\n    \r\n    }\r\n    if(name === 'consoleAccess')\r\n    {\r\n      item.consoleAccess = (target.checked) ? true: false;\r\n    \r\n    }\r\n    if(name === 'requirePasswordReset')\r\n    {\r\n      item.requirePasswordReset = (target.checked) ? true: false;\r\n    \r\n    }\r\n    if(name === 'type')\r\n    {\r\n      if(value === 'Auto'){\r\n        item.autogeneratedPassword = true;\r\n      }\r\n      else\r\n      {\r\n        item.autogeneratedPassword = false;\r\n      }\r\n    }\r\n\r\n    if(name === 'accountId')\r\n    {\r\n\r\n      let account={};\r\n      fetch(API_BASE_URL + \"/accounts/\" + item.accountId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        account = jsonResult;\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/groups',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.groupss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      name: true,\r\n      accountId: true,\r\n      groupId: true,\r\n      customPassword: true,\r\n      programmaticAccess:true,\r\n      consoleAccess:true\r\n    };\r\n    const errors = this.validate(item.name, item.accountId, item.groupId, item.customPassword, item.programmaticAccess, item.consoleAccess);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/users'; \r\n\r\n    item.account={id: item.accountId};\r\n    \r\n    if(!item.consoleAccess)\r\n    {\r\n      //item.programmaticAccess = false;\r\n      //item.consoleAccess: false;\r\n      item.requirePasswordReset = true;\r\n      item.autogeneratedPassword = true;\r\n      item.customPassword  = '';\r\n    }\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/users/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/users', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, accountId,  groupId, customPassword, programmaticAccess, consoleAccess) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      groupId: '',\r\n      customPassword: '',\r\n      programmaticAccess:'', \r\n      consoleAccess:''\r\n    };\r\n    \r\n\r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.consoleAccess && !this.state.item.autogeneratedPassword && this.state.item.touched.customPassword && customPassword.length === 0){\r\n      errors.customPassword = 'customPassword should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(!consoleAccess && !programmaticAccess) {\r\n      \r\n      errors.programmaticAccess = 'Choose between programmaticAccess and consoleAccess';\r\n      errors.consoleAccess = 'Choose between programmaticAccess and consoleAccess';\r\n      return errors;\r\n    }\r\n\r\n/*\r\n    if(this.state.item.touched.groupId  && this.state.item.groups.length === 0){\r\n      errors.groupId = 'Add groupId.';\r\n      return errors;\r\n    }\r\n*/  \r\n    return errors;\r\n  }\r\n\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'groupId') \r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.groupss && item.groupss.length){\r\n              item.groupss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.groups = values;\r\n      }\r\n      \r\n      this.setState({item});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit User' : 'Add User'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.accountId, item.groupId, item.customPassword, item.programmaticAccess, item.consoleAccess);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/users\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let isUsed = false; \r\n    //if(item.id !== '' && (item.users && item.users.length !== 0)  ) isUsed = true; \r\n    \r\n    let optsp = [];  \r\n    let optsps = [];\r\n    if(item.groupss && item.groupss.length){\r\n      item.groupss.map(s => {  \r\n          if(item.groups && item.groups.length) item.groups.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsp.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsps.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n\r\n    const autogeneratedPassword = item.autogeneratedPassword;\r\n    //console.log(\"item.autogeneratedPassword=\" + item.autogeneratedPassword);\r\n\r\n    const customPassword = (item.consoleAccess && !item.autogeneratedPassword) ? <FormGroup>\r\n            <Label for=\"customPassword\">Custom Password (*)</Label> \r\n            <Input type=\"text\" name=\"customPassword\" id=\"customPassword\" value={item.customPassword || ''} placeholder=\"Enter customPassword\" disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('customPassword')} autoComplete=\"customPassword\"\r\n                   valid={errors.customPassword === ''}\r\n                   invalid={errors.customPassword !== ''}\r\n            />\r\n           <FormText></FormText>\r\n           <FormFeedback>{errors.customPassword}</FormFeedback>\r\n          </FormGroup> : ''\r\n    \r\n    const requirePasswordReset = (item.consoleAccess === true) ? <FormGroup > \r\n            <Label for=\"requirePasswordReset\">Require password reset</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"requirePasswordReset\" id=\"requirePasswordReset\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('requirePasswordReset')} \r\n                    checked={item.requirePasswordReset === true}/>\r\n            \r\n            <FormText>User must create a new password at next sign-in.</FormText>\r\n          </FormGroup> : ''\r\n    \r\n    \r\n\r\n    const consolePassword = (item.consoleAccess === true) ? <FormGroup tag=\"fieldset\">\r\n            <Label for=\"type\">Health Check Type (*)</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"Auto\" checked={autogeneratedPassword === true}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                Autogenerated password\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"type\" id=\"type\" value=\"Custom\" checked={autogeneratedPassword === false}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('type')} autoComplete=\"type\"\r\n                       valid={errors.type === ''}\r\n                       invalid={errors.type !== ''}\r\n                />{' '}\r\n                Custom password\r\n              </Label>\r\n            </FormGroup>\r\n            <FormFeedback>{errors.type}</FormFeedback>\r\n          </FormGroup> : ''\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n \r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label> \r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\" disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormText></FormText>\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')} disabled={isUsed}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"groupId\">Groups</Label>\r\n            <Select name=\"groupId\" id=\"groupId\"  placeholder=\"Enter groupId\" isMulti disabled={isUsed}\r\n              value={optsp}\r\n              onChange={e => this.onOptionChange(\"groupId\",e)}\r\n              onBlur={this.handleBlur('groupId')}\r\n              options={optsps}\r\n\r\n            />\r\n            <FormFeedback>{errors.groupId}</FormFeedback> \r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"programmaticAccess \">Programmatic access</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"programmaticAccess\" id=\"programmaticAccess\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('programmaticAccess')} \r\n                    checked={item.programmaticAccess === true}/>\r\n            <FormFeedback>{errors.programmaticAccess}</FormFeedback> \r\n            <FormText>Enables an access key ID and secret access key for the AWS API, CLI, SDK, and other development tools.</FormText>\r\n          </FormGroup>\r\n\r\n          <FormGroup > \r\n            <Label for=\"consoleAccess\">AWS Management Console access</Label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Input type=\"checkbox\" name=\"consoleAccess\" id=\"consoleAccess\" \r\n                    onChange={this.handleChange} onBlur={this.handleBlur('consoleAccess')} \r\n                    checked={item.consoleAccess === true}/>\r\n            <FormFeedback>{errors.consoleAccess}</FormFeedback> \r\n            <FormText>Enables a password that allows users to sign-in to the AWS Management Console.</FormText>\r\n          </FormGroup>\r\n\r\n          {consolePassword}\r\n          {customPassword}\r\n          {requirePasswordReset}\r\n          \r\n          \r\n\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(UserEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\nclass DhcpList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {dhcps: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    \r\n    fetch(`${API_BASE_URL}/dhcps`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({dhcps: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/vpcs/${accId}/dhcps/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateDhcp = [...this.state.dhcps].filter(i => i.id !== id);\r\n      this.setState({dhcps: updateDhcp});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {dhcps, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const dhcpList = dhcps.map(dhcp => {\r\n      \r\n      const link = API_BASE_URL + \"/vpcs/\" + dhcp.vpc.id; \r\n      const linkAccount = API_BASE_URL + \"/accounts/\" + dhcp.account.id;\r\n\r\n      return <tr key={dhcp.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{dhcp.id}</td>\r\n\r\n\r\n        <td>{dhcp.name}</td>\r\n        <td><a href={linkAccount}>{dhcp.account.numAccount}</a></td>\r\n\r\n        <td>{dhcp.domainName}</td>\r\n        <td>{dhcp.domainNameServers}</td>\r\n        <td>{dhcp.ntpServers}</td>\r\n        <td>{dhcp.netBiosNameServers}</td>\r\n        <td>{dhcp.netBiosNodeType}</td>\r\n        \r\n\r\n        <td><a href={link}>{dhcp.vpc.name}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"secondary\" tag={Link} to={API_BASE_URL + \"/dhcp/\" + dhcp.id + \"/tags\" }>Tags</Button>&nbsp;&nbsp;\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/dhcps/\" + dhcp.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(dhcp.vpc.id, dhcp.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/dhcps/new`;\r\n    //const trig = `/trigrammes`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Dhcp Options Sets</Button>\r\n          </div>\r\n          \r\n          <h3>Dhcp Options Sets</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Name</th>\r\n              <th width=\"5%\">Account</th>\r\n              \r\n\r\n              <th width=\"5%\">Domain Name</th>\r\n              <th width=\"5%\">Domain Name Servers</th>\r\n              <th width=\"5%\">NTP Servers</th>\r\n              <th width=\"5%\">NetBios Name Servers</th>\r\n              <th width=\"5%\">NetBios Node Type</th>\r\n            \r\n\r\n\r\n              <th width=\"5%\">Vpc</th> \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {dhcpList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DhcpList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\nclass DhcpEdit extends Component {\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    account: {},\r\n    accounts: {},\r\n    accountId : '',\r\n    domainName: '',\r\n    domainNameServers: '',\r\n    ntpServers: '',\r\n    netBiosNameServers: '',\r\n    netBiosNodeType: '',\r\n    vpc: {},\r\n    vpcs: {},\r\n    vpcId : '',\r\n    touched: {\r\n      name: false,\r\n      accountId: false,\r\n      vpcId: false,\r\n      domainName: false,\r\n      domainNameServers: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const dhcp = await (await fetch(`${API_BASE_URL}/dhcps/${this.props.match.params.id}`)).json();\r\n      dhcp.touched = {\r\n        name: false,\r\n        accountId: false,\r\n        vpcId: false,\r\n        domainName: false,\r\n        domainNameServers: false,\r\n      };\r\n      this.setState({item: dhcp});\r\n\r\n      await fetch(API_BASE_URL + '/accounts/' + (dhcp.account.id) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n\r\n      let item = {...this.state.item};\r\n      item.vpcId = dhcp.vpc.id;\r\n      item.accountId = dhcp.account.id;\r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const dhcp = {\r\n        name: '',\r\n        account: {},\r\n        accounts: {},\r\n        accountId : '',\r\n        domainName: '',\r\n        domainNameServers: '',\r\n        ntpServers: '',\r\n        netBiosNameServers: '',\r\n        netBiosNodeType: '',\r\n        vpc: {},\r\n        vpcs: {},\r\n        vpcId : '',\r\n        touched: {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          domainName: false,\r\n          domainNameServers: false,\r\n        }\r\n      };\r\n      dhcp.touched = {\r\n          name: false,\r\n          accountId: false,\r\n          vpcId: false,\r\n          domainName: false,\r\n          domainNameServers: false,\r\n      };\r\n      this.setState({item: dhcp});\r\n    }\r\n    \r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    });\r\n\r\n    /*await fetch('/vpcs',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.vpcs = jsonResult;\r\n      this.setState({item: item});\r\n    })*/\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n    if(name === 'accountId')\r\n    {\r\n       fetch(API_BASE_URL + '/accounts/' + (item.accountId) + '/vpcs',)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        let item = {...this.state.item};\r\n        item.vpcs = jsonResult;\r\n        this.setState({item: item});\r\n      });\r\n      item.vpcId = '';\r\n    }\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          name: true,\r\n          accountId: false,\r\n          vpcId: true,\r\n          domainName: true,\r\n          domainNameServers: true\r\n    };\r\n    const errors = this.validate(item.name, item.vpcId, item.domainName, item.domainNameServers, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/dhcps'; \r\n\r\n    item.vpc={id: item.vpcId};\r\n    item.account={id: item.accountId};\r\n    //console.log(\"sma\" + item.subnetgroupId);\r\n    //return;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/vpcs/' + (item.vpc.id) + '/dhcps/'+(item.id) : API_BASE_URL + '/vpcs/' + item.vpc.id + '/dhcps', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(name, vpcId, domainName, domainNameServers, accountId) {\r\n\r\n    const errors = {\r\n      name: '' ,\r\n      accountId: '',\r\n      vpcId: '',\r\n      domainName: '', \r\n      domainNameServers: ''\r\n    };\r\n    \r\n    if(this.state.item.touched.name && name.length === 0){\r\n      errors.name = 'Name should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'accountId should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.vpcId && vpcId.length === 0){\r\n      errors.vpcId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.domainName && domainName.length === 0){\r\n      errors.domainName = 'domainName should not be null';\r\n      return errors;\r\n    }\r\n    else if(this.state.item.touched.domainNameServers && domainNameServers.length === 0){\r\n      errors.domainNameServers = 'domainNameServers should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Dhcp Options Sets' : 'Add Dhcp Options Sets'}</h2>;\r\n\r\n    const errors = this.validate(item.name, item.vpcId, item.domainName, item.domainNameServers, item.accountId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/dhcps\";\r\n\r\n    let optas = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          optas.push(<option key={s.id} value={s.id}>{s.id} {s.numAccount}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let opts = [];\r\n    if(item.vpcs && item.vpcs.length){\r\n      item.vpcs.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let tri = item.vpcId || '';\r\n    item.vpcId = tri;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name (*)</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''} placeholder=\"Enter name\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('name')} autoComplete=\"name\"\r\n                   valid={errors.name === ''}\r\n                   invalid={errors.name !== ''}\r\n            />\r\n           <FormFeedback>{errors.name}</FormFeedback>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optas}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"vpcId\">Vpcs (*)</Label>\r\n            <Input type=\"select\" name=\"vpcId\" id=\"vpcId\"  value={tri} onChange={this.handleChange} onBlur={this.handleBlur('vpcId')}\r\n                 valid={errors.vpcId === ''}\r\n                 invalid={errors.vpcId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.vpcId}</FormFeedback>\r\n          </FormGroup>\r\n         \r\n         \r\n         <FormGroup>\r\n            <Label for=\"domainName\">Domain Name (*)</Label>\r\n            <Input type=\"text\" name=\"domainName\" id=\"domainName\" value={item.domainName || ''} placeholder=\"Enter domainName\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('domainName')} autoComplete=\"domainName\"\r\n                   valid={errors.domainName === ''}\r\n                   invalid={errors.domainName !== ''}\r\n            />\r\n           <FormFeedback>{errors.domainName}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"domainNameServers\">Domain Name Servers (*)</Label>\r\n            <Input type=\"text\" name=\"domainNameServers\" id=\"domainNameServers\" value={item.domainNameServers || ''} placeholder=\"Enter domainNameServers\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('domainNameServers')} autoComplete=\"domainNameServers\"\r\n                   valid={errors.domainNameServers === ''}\r\n                   invalid={errors.domainNameServers !== ''}\r\n            />\r\n           <FormFeedback>{errors.domainNameServers}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"ntpServers\">Ntp Servers</Label>\r\n            <Input type=\"text\" name=\"ntpServers\" id=\"ntpServers\" value={item.ntpServers || ''} placeholder=\"Enter ntpServers\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('ntpServers')} autoComplete=\"ntpServers\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"netBiosNameServers\">NetBios Name Servers</Label>\r\n            <Input type=\"text\" name=\"netBiosNameServers\" id=\"netBiosNameServers\" value={item.netBiosNameServers || ''} placeholder=\"Enter netBiosNameServers\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('netBiosNameServers')} autoComplete=\"netBiosNameServers\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"netBiosNodeType\">NetBios Node Type</Label>\r\n            <Input type=\"text\" name=\"netBiosNodeType\" id=\"netBiosNodeType\" value={item.netBiosNodeType || ''} placeholder=\"Enter netBiosNodeType\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('netBiosNodeType')} autoComplete=\"netBiosNodeType\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(DhcpEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass TagDhcpList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tags: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/dhcps/${this.props.match.params.id}/tags`)\r\n      .then(response => response.json())\r\n      .then(data =>   this.setState({tags: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/dhcps/${accId}/tags/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateTagDhcp = [...this.state.tags].filter(i => i.id !== id);\r\n      this.setState({tags: updateTagDhcp});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {tags, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const tagList = tags.map(tag => {\r\n      \r\n      const link = API_BASE_URL + \"/dhcps/\" + tag.dhcp.id; \r\n\r\n      return <tr key={tag.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{tag.id}</td>\r\n\r\n\r\n        <td>{tag.key}</td>\r\n        <td>{tag.value}</td>\r\n\r\n        <td>{tag.text}</td>\r\n        <td><a href={link}>{tag.dhcp.id}</a></td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/dhcp/\" + tag.dhcp.id  + \"/tags/\" + tag.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tag.dhcp.id, tag.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/dhcp/${this.props.match.params.id}/tags/new`;\r\n    const dhcp = `${API_BASE_URL}/dhcps`;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"primary\" tag={Link} to={dhcp}>Dhcp</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"success\" tag={Link} to={add}>Add Tag</Button>\r\n          </div>\r\n          \r\n          <h3>TagDhcp</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n            \r\n              <th width=\"5%\">Id</th>\r\n              <th width=\"5%\">Key</th>\r\n              <th width=\"5%\">Value</th>\r\n\r\n              <th width=\"5%\">Description</th>\r\n              <th width=\"5%\">Dhcp</th> \r\n              \r\n              <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {tagList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagDhcpList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { API_BASE_URL } from './constants';\r\n\r\n\r\nclass TagDhcpEdit extends Component {\r\n\r\n  emptyItem = {\r\n    key: '',\r\n    value: '',\r\n    text: '',\r\n    dhcp: {},\r\n    touched: {\r\n      key: false,\r\n      value: false\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      const tag = await (await fetch(`${API_BASE_URL}/tags/${this.props.match.params.id}`)).json();\r\n      tag.touched = {\r\n        key: false,\r\n        value: false\r\n      };\r\n      this.setState({item: tag});\r\n      \r\n    }\r\n    else {\r\n      const dhcp = await (await fetch(`${API_BASE_URL}/dhcps/${this.props.match.params.idd}`)).json();\r\n      const tag = {\r\n        key: '',\r\n        value: '',\r\n        text: '',\r\n        dhcp: {},\r\n        touched: {\r\n          key: false,\r\n          value: false\r\n        }\r\n      };\r\n      tag.dhcp = dhcp;\r\n      tag.touched = {\r\n          key: false,\r\n          value: false\r\n      };\r\n      this.setState({item: tag});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n          key: true,\r\n          value: true\r\n    };\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    \r\n    const hist= API_BASE_URL + '/dhcp/' + item.dhcp.id +'/tags'; \r\n\r\n    item.dhcp={id: item.dhcp.id};\r\n    \r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/dhcps/' + (item.dhcp.id) + '/tags/'+(item.id) : API_BASE_URL + '/dhcps/' + item.dhcp.id + '/tags', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(key, value) {\r\n\r\n    const errors = {\r\n      key: '',\r\n      value: '',\r\n      number: ''\r\n    };\r\n    //console.log('type' + type);\r\n    if(this.state.item.touched.key && key.length === 0){\r\n      errors.key = 'Key should not be null';\r\n      return errors;\r\n    } \r\n    else if(this.state.item.touched.value && value.length === 0){\r\n      errors.value = 'Value should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit tag' : 'Add tag'}</h2>;\r\n\r\n    const errors = this.validate(item.key, item.value);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/dhcp/\" + item.dhcp.id + \"/tags\";\r\n\r\n    let dhcp = null;\r\n    dhcp = <FormGroup>\r\n            <Label for=\"dhcpId\">Dhcp: {item.dhcp.name}</Label>\r\n            <Input type=\"text\" name=\"dhcpId\" id=\"dhcpId\" value={item.dhcp.id || ''} disabled=\"true\"/>\r\n          </FormGroup>;\r\n\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"key\">Key (*)</Label>\r\n            <Input type=\"text\" name=\"key\" id=\"key\" value={item.key || ''} placeholder=\"Enter key\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('key')} autoComplete=\"key\"\r\n                   valid={errors.key === ''}\r\n                   invalid={errors.key !== ''}\r\n            />\r\n           <FormFeedback>{errors.key}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"value\">Value (*)</Label>\r\n            <Input type=\"text\" name=\"value\" id=\"value\" value={item.value || ''} placeholder=\"Enter value\"\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('value')} autoComplete=\"value\"\r\n                   valid={errors.value === ''}\r\n                   invalid={errors.value !== ''}\r\n            />\r\n           <FormFeedback>{errors.value}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          {dhcp}\r\n        \r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label>\r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''}\r\n                   onChange={this.handleChange} autoComplete=\"text\"/>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n\r\n            \r\n\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(TagDhcpEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass KmsList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {kmss: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch(`${API_BASE_URL}/kmss`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({kmss: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(accId, id) {\r\n    await fetch(`${API_BASE_URL}/accounts/${accId}/kmss/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updateKms = [...this.state.kmss].filter(i => i.id !== id);\r\n      this.setState({kmss: updateKms});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {kmss, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const kmsList = kmss.map(kms => {\r\n      \r\n    const link = API_BASE_URL + \"/accounts/\" + kms.account.id; \r\n\r\n    let roles='';    \r\n    if(kms.roles && kms.roles.length){\r\n        kms.roles.map(t => {  \r\n          roles = roles + t.id + \":\" + t.name  + \"| \";\r\n      });\r\n    }  \r\n    let users = '';\r\n    if(kms.users && kms.users.length){\r\n        kms.users.map(t => {  \r\n          users = users + t.id + \":\" + t.name  + \"| \";\r\n      });\r\n    }  \r\n\r\n      return <tr key={kms.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{kms.id}</td> \r\n        <td>{kms.alias}</td>\r\n\r\n        <td>{kms.keyMaterialOrigin}</td>\r\n        <td><a href={link}>{kms.account.numAccount}</a></td>\r\n        <td>{roles}</td>\r\n        <td>{users}</td>\r\n        <td>{kms.text}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={API_BASE_URL + \"/kmss/\" + kms.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(kms.account.id, kms.id)} >Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n\r\n    });\r\n\r\n    const add = `${API_BASE_URL}/kmss/new`;\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to={add}>Add Kms</Button>\r\n          </div>\r\n          \r\n          <h3>Kms</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n\r\n              <th width=\"5%\">Id</th> \r\n              <th width=\"5%\">Alias</th>\r\n\r\n              <th width=\"5%\">Key Material Origin</th>\r\n              <th width=\"5%\">Account</th>\r\n              <th width=\"5%\">Role</th>\r\n              <th width=\"5%\">User</th>\r\n              <th width=\"5%\">Description</th>\r\n              \r\n              \r\n\t\t\t        <th width=\"5%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {kmsList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default KmsList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, FormFeedback, FormText } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport Select from 'react-select';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nclass KmsEdit extends Component {\r\n\r\n  emptyItem = {\r\n    alias: '',\r\n\t  account: {},\r\n    accounts: [],\r\n  \taccountId : '',\r\n    roles: [],\r\n    roless: [],\r\n    roleId: [],\r\n    text: '', \r\n    keyMaterialOrigin: 'Kms',\r\n    policy: {},\r\n    policys: [],\r\n    policyId : '',\r\n    users: [],\r\n    userss: [],\r\n    userId: [],\r\n    touched: {\r\n      alias: false,\r\n      accountId: false,\r\n      roleId: false,\r\n      keyMaterialOrigin: false,\r\n      policyId : false,\r\n      userId: false\r\n      \r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n\r\n      const kms = await (await fetch(`${API_BASE_URL}/kmss/${this.props.match.params.id}`)).json();\r\n      kms.touched = {\r\n        alias: false,\r\n        accountId: false,\r\n        roleId: false,\r\n        keyMaterialOrigin: false,\r\n        policyId : false,\r\n        userId: false\r\n      };\r\n      this.setState({item: kms});\r\n\r\n      let account={};\r\n      await (await fetch(API_BASE_URL + \"/accounts/\" + kms.account.id,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        account = jsonResult;\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/roles',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.roless = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/users',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.userss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.policys = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      }));\r\n      \r\n      let item = {...this.state.item};\r\n      item.accountId = kms.account.id;\r\n      item.policyId = kms.policy.id;\r\n      var values = [];\r\n      if(item.roles) item.roles.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.roles = values;\r\n\r\n      values = [];\r\n      if(item.users) item.users.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.users = values;\r\n\r\n      values = [];\r\n      if(item.policys) item.policys.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.policys = values;\r\n      \r\n      this.setState({item: item});\r\n      \r\n    }\r\n    else {\r\n      const kms = {\r\n        alias: '',\r\n        account: {},\r\n        accounts: [],\r\n        accountId : '',\r\n        roles: [],\r\n        roless: [],\r\n        roleId: [],\r\n        text: '', \r\n        keyMaterialOrigin: 'Kms',\r\n        policy: {},\r\n        policys: [],\r\n        policyId : '',\r\n        touched: {\r\n          alias: false,\r\n          accountId: false,\r\n          roleId: false,\r\n          keyMaterialOrigin: false,\r\n          policyId : false,\r\n          userId: false\r\n        }\r\n      };\r\n      kms.touched = {\r\n          alias: false,\r\n          accountId: false,\r\n          roleId: false,\r\n          keyMaterialOrigin: false,\r\n          policyId : false,\r\n          userId: false\r\n      };\r\n      this.setState({item: kms});\r\n    }\r\n\r\n    await fetch(API_BASE_URL + '/accounts',)\r\n    .then((result) => {\r\n      return result.json();\r\n    }).then((jsonResult) => {\r\n      let item = {...this.state.item};\r\n      item.accounts = jsonResult;\r\n      this.setState({item: item});\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n     \r\n    if(name === 'accessType')\r\n    {\r\n      if(value === 'Kms'){\r\n        item.keyMaterialOrigin = 'Kms';\r\n      }\r\n      else\r\n      {\r\n        item.keyMaterialOrigin = 'External';\r\n      }\r\n    }\r\n   \r\n    if(name === 'accountId')\r\n    {\r\n\r\n      let account={};\r\n      fetch(API_BASE_URL + \"/accounts/\" + item.accountId,)\r\n      .then((result) => {\r\n        return result.json();\r\n      }).then((jsonResult) => {\r\n        account = jsonResult;\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/roles',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.roless = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/users',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.userss = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n        fetch(API_BASE_URL + '/accounts/' + (account.id) + '/policys',)\r\n        .then((result) => { \r\n          return result.json();\r\n        }).then((jsonResult) => {\r\n          let item = {...this.state.item};\r\n          item.policys = jsonResult;\r\n          this.setState({item: item});\r\n        });\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    item.touched = {\r\n      alias: true,\r\n      accountId: true,\r\n      roleId: true,\r\n      keyMaterialOrigin: true,\r\n      policyId : true,\r\n      userId: true\r\n    };\r\n    const errors = this.validate(item.alias, item.accountId, item.roleId, item.keyMaterialOrigin, item.policyId, item.userId);\r\n\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    if(isDisabled) {\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n    \r\n    const hist= API_BASE_URL + '/kmss'; \r\n\r\n    item.account={id: item.accountId};\r\n    item.policy={id: item.policyId};\r\n\r\n\r\n    var values = [];\r\n      item.users.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.users = values;\r\n\r\n    var values = [];\r\n      item.roles.map(s => { \r\n        values.push({\"id\": s.id});\r\n      });\r\n      item.roles = values;\r\n\r\n    await fetch((item.id) ? API_BASE_URL + '/accounts/' + (item.account.id) + '/kmss/'+(item.id) : API_BASE_URL + '/accounts/' + item.account.id + '/kmss', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push(hist);\r\n  }\r\n\r\n  handleBlur = (field) => (evt) => {\r\n\r\n    let item = {...this.state.item};\r\n    item.touched= { ...this.state.item.touched, [field]: true};\r\n    this.setState({item});\r\n\r\n  }\r\n\r\n  validate(alias, accountId,  roleId, keyMaterialOrigin, policyId, userId) {\r\n\r\n    const errors = {\r\n      alias: '',\r\n      accountId: '',\r\n      roleId: '',\r\n      keyMaterialOrigin: '',\r\n      policyId: '',\r\n      userId: ''\r\n    };\r\n    \r\n\r\n    if(this.state.item.touched.alias && alias.length === 0){\r\n      errors.alias = 'alias should not be null';\r\n      return errors;\r\n    }\r\n    \r\n    if(this.state.item.touched.accountId && accountId.length === 0){\r\n      errors.accountId = 'Vpc should not be null';\r\n      return errors;\r\n    }\r\n\r\n    if(this.state.item.touched.keyMaterialOrigin && keyMaterialOrigin.length === 0){\r\n      errors.keyMaterialOrigin = 'keyMaterialOrigin should not be null';\r\n      return errors;\r\n    }\r\n/*\r\n    if(this.state.item.touched.userId && userId.length === 0){\r\n      errors.userId = 'userId should not be null';\r\n      return errors;\r\n    }\r\n    */ \r\n    if(this.state.item.touched.policyId && policyId.length === 0){\r\n      errors.policyId = 'policyId should not be null';\r\n      return errors;\r\n    }\r\n    /*\r\n    if(this.state.item.touched.roleId  && this.state.item.roles.length === 0){\r\n      errors.roleId = 'Add roleId.';\r\n      return errors;\r\n    }\r\n*/  \r\n    return errors;\r\n  }\r\n\r\n\r\n  onOptionChange = (selectName,selectedOption) => {\r\n      const {item} = this.state;\r\n      var options = selectedOption;\r\n      var values = [];\r\n      if(selectName === 'roleId') \r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.roless && item.roless.length){\r\n              item.roless.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.roles = values;\r\n      }\r\n      if(selectName === 'userId') \r\n      {\r\n        for (var i = 0, l = options.length; i < l; i++) {      \r\n          if(item.userss && item.userss.length){\r\n              item.userss.map(s => { \r\n                if(s.id == options[i].value) {\r\n                    values.push({\"id\": s.id});\r\n                }\r\n            });\r\n          }\r\n        }\r\n        item.users = values;\r\n      }\r\n      \r\n      this.setState({item});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Kms' : 'Add Kms'}</h2>;\r\n\r\n    const errors = this.validate(item.alias, item.accountId, item.roleId, item.keyMaterialOrigin, item.policyId, item.userId);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n    const canc = API_BASE_URL + \"/kmss\";\r\n\r\n    \r\n    let opts = [];\r\n    if(item.accounts && item.accounts.length){\r\n      item.accounts.map(s => {  \r\n          opts.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let account = item.accountId || '';\r\n    item.accountId = account;\r\n\r\n    let isUsed = false; \r\n    //if(item.id !== '' && (item.kmss && item.kmss.length !== 0)  ) isUsed = true; \r\n    \r\n    let optsp = [];  \r\n    let optsps = [];\r\n    if(item.roless && item.roless.length){\r\n      item.roless.map(s => {  \r\n          if(item.roles && item.roles.length) item.roles.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsp.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsps.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n\r\n    let optsu = [];  \r\n    let optsus = [];\r\n    if(item.userss && item.userss.length){\r\n      item.userss.map(s => {  \r\n          if(item.users && item.users.length) item.users.map(ss => {\r\n             if(s.id == ss.id) {\r\n               optsu.push({value: s.id, label: s.name});\r\n             }\r\n          });\r\n          optsus.push({value: s.id, label: s.name});\r\n      });\r\n    }\r\n    \r\n    let optpolicys = [];\r\n    if(item.policys && item.policys.length){\r\n      item.policys.map(s => {  \r\n          optpolicys.push(<option value={s.id}>{s.id} {s.name}</option>);\r\n      });\r\n    }\r\n    let policy = item.policyId || '';\r\n    item.policyId = policy;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n \r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"alias\">Alias (*)</Label> \r\n            <Input type=\"text\" name=\"alias\" id=\"alias\" value={item.alias || ''} placeholder=\"Enter alias\" disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('alias')} autoComplete=\"alias\"\r\n                   valid={errors.alias === ''}\r\n                   invalid={errors.alias !== ''}\r\n            />\r\n           \r\n           <FormFeedback>{errors.alias}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"accountId\">Account (*)</Label>\r\n            <Input type=\"select\" name=\"accountId\" id=\"accountId\"  value={account} onChange={this.handleChange} onBlur={this.handleBlur('accountId')} disabled={isUsed}\r\n                 valid={errors.accountId === ''}\r\n                 invalid={errors.accountId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {opts}\r\n            </Input>\r\n            <FormFeedback>{errors.accountId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"policyId\">Policy (*)</Label>\r\n            <Input type=\"select\" name=\"policyId\" id=\"policyId\"  value={policy} onChange={this.handleChange} onBlur={this.handleBlur('policyId')} disabled={isUsed}\r\n                 valid={errors.policyId === ''}\r\n                 invalid={errors.policyId !== ''}\r\n            >\r\n              <option value=\"\" disabled>Choose</option>\r\n              {optpolicys}\r\n            </Input>\r\n            <FormFeedback>{errors.policyId}</FormFeedback>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"roleId\">Roles</Label>\r\n            <Select name=\"roleId\" id=\"roleId\"  placeholder=\"Enter roleId\" isMulti disabled={isUsed}\r\n              value={optsp}\r\n              onChange={e => this.onOptionChange(\"roleId\",e)}\r\n              onBlur={this.handleBlur('roleId')}\r\n              options={optsps}\r\n\r\n            />\r\n            <FormFeedback>{errors.roleId}</FormFeedback> \r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"userId\">Users</Label>\r\n            <Select name=\"userId\" id=\"userId\"  placeholder=\"Enter userId\" isMulti disabled={isUsed}\r\n              value={optsu}\r\n              onChange={e => this.onOptionChange(\"userId\",e)}\r\n              onBlur={this.handleBlur('userId')}\r\n              options={optsus}\r\n            />\r\n            <FormFeedback>{errors.userId}</FormFeedback> \r\n          </FormGroup>\r\n\r\n           <FormGroup tag=\"fieldset\">\r\n            <Label for=\"accessType\">Key Material Origin</Label>\r\n\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"Kms\" checked={item.keyMaterialOrigin === 'Kms'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                Kms\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"accessType\" id=\"accessType\" value=\"External\" checked={item.keyMaterialOrigin === 'External'}\r\n                       onChange={this.handleChange} onBlur={this.handleBlur('accessType')} autoComplete=\"accessType\"\r\n                       valid={errors.accessType === ''}\r\n                       invalid={errors.accessType !== ''}\r\n                />{' '}\r\n                External\r\n              </Label>\r\n            </FormGroup>\r\n            \r\n            <FormFeedback>{errors.accessType}</FormFeedback>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"text\">Description</Label> \r\n            <Input type=\"text\" name=\"text\" id=\"text\" value={item.text || ''} placeholder=\"Enter text\" disabled={isUsed}\r\n                   onChange={this.handleChange} onBlur={this.handleBlur('text')} autoComplete=\"text\"\r\n                  \r\n            />\r\n          </FormGroup>\r\n          \r\n          \r\n            \r\n\r\n\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" disabled={isDisabled}>Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to={canc}>Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(KmsEdit);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { API_BASE_URL } from './constants';\r\n\r\nimport TrigrammeList from './TrigrammeList';\r\nimport TrigrammeEdit from './TrigrammeEdit';\r\n\r\nimport AccountList from './AccountList';\r\nimport AccountEdit from './AccountEdit';\r\n\r\nimport ProductList from './ProductList';\r\nimport ProductEdit from './ProductEdit';\r\n\r\nimport VpcList from './VpcList';\r\nimport VpcEdit from './VpcEdit';\r\nimport TagVpcList from './TagVpcList';\r\nimport TagVpcEdit from './TagVpcEdit';\r\n\r\nimport SubnetList from './SubnetList';\r\nimport SubnetEdit from './SubnetEdit';\r\nimport TagSubnetList from './TagSubnetList';\r\nimport TagSubnetEdit from './TagSubnetEdit';\r\n\r\nimport SubnetGroupList from './SubnetGroupList';\r\nimport SubnetGroupEdit from './SubnetGroupEdit';\r\n\r\nimport CognitoList from './CognitoList';\r\nimport CognitoEdit from './CognitoEdit';\r\n\r\nimport DynamoDbList from './DynamoDbList';\r\nimport DynamoDbEdit from './DynamoDbEdit';\r\n\r\nimport SsmList from './SsmList';\r\nimport SsmEdit from './SsmEdit';\r\n\r\nimport StorageList from './StorageList';\r\nimport StorageEdit from './StorageEdit';\r\nimport StorageAclList from './StorageAclList';\r\nimport StorageAclEdit from './StorageAclEdit';\r\nimport TagStorageList from './TagStorageList';\r\nimport TagStorageEdit from './TagStorageEdit';\r\n\r\nimport RdsList from './RdsList';\r\nimport RdsEdit from './RdsEdit';\r\n\r\nimport EfsList from './EfsList';\r\nimport EfsEdit from './EfsEdit';\r\nimport TagEfsList from './TagEfsList';\r\nimport TagEfsEdit from './TagEfsEdit';\r\n\r\nimport ElasticSearchList from './ElasticSearchList';\r\nimport ElasticSearchEdit from './ElasticSearchEdit';\r\n\r\nimport ElasticCacheList from './ElasticCacheList';\r\nimport ElasticCacheEdit from './ElasticCacheEdit';\r\n\r\nimport NaclList from './NaclList';\r\nimport NaclEdit from './NaclEdit';\r\nimport RuleList from './RuleList';\r\nimport RuleEdit from './RuleEdit';\r\nimport TagList from './TagList';\r\nimport TagEdit from './TagEdit';\r\n\r\n\r\nimport RouteTableList from './RouteTableList';\r\nimport RouteTableEdit from './RouteTableEdit';\r\nimport RouteList from './RouteList';\r\nimport RouteEdit from './RouteEdit';\r\nimport TagRouteTableList from './TagRouteTableList';\r\nimport TagRouteTableEdit from './TagRouteTableEdit';\r\n\r\n\r\n\r\nimport TargetGroupList from './TargetGroupList';\r\nimport TargetGroupEdit from './TargetGroupEdit';\r\nimport TargetList from './TargetList';\r\nimport TargetEdit from './TargetEdit';\r\nimport TagTargetGroupList from './TagTargetGroupList';\r\nimport TagTargetGroupEdit from './TagTargetGroupEdit';\r\n\r\nimport LbList from './LbList';\r\nimport LbEdit from './LbEdit';\r\nimport ListenerList from './ListenerList';\r\nimport ListenerEdit from './ListenerEdit';\r\nimport TagLbList from './TagLbList';\r\nimport TagLbEdit from './TagLbEdit';\r\n\r\nimport PeeringList from './PeeringList';\r\nimport PeeringEdit from './PeeringEdit';\r\nimport TagPeeringList from './TagPeeringList';\r\nimport TagPeeringEdit from './TagPeeringEdit';\r\n\r\nimport SgList from './SgList';\r\nimport SgEdit from './SgEdit';\r\nimport RuleSgList from './RuleSgList';\r\nimport RuleSgEdit from './RuleSgEdit';\r\nimport TagSgList from './TagSgList';\r\nimport TagSgEdit from './TagSgEdit';\r\n\r\nimport VpcManageList from './VpcManageList';\r\nimport VpcManageEdit from './VpcManageEdit';\r\nimport SubnetManageList from './SubnetManageList';\r\nimport SubnetManageEdit from './SubnetManageEdit';\r\n\r\nimport RegionList from './RegionList';\r\nimport RegionEdit from './RegionEdit';\r\nimport AzList from './AzList';\r\nimport AzEdit from './AzEdit';\r\nimport AmiList from './AmiList';\r\nimport AmiEdit from './AmiEdit';\r\n\r\nimport InstanceTypeList from './InstanceTypeList';\r\nimport InstanceTypeEdit from './InstanceTypeEdit';\r\n\r\nimport EccList from './EccList';\r\nimport EccEdit from './EccEdit';\r\nimport EccStorageList from './EccStorageList';\r\nimport EccStorageEdit from './EccStorageEdit';\r\nimport EccNetworkInterfaceList from './EccNetworkInterfaceList';\r\nimport EccNetworkInterfaceEdit from './EccNetworkInterfaceEdit';\r\nimport TagEccList from './TagEccList';\r\nimport TagEccEdit from './TagEccEdit';\r\n\r\nimport LaunchConfigurationList from './LaunchConfigurationList';\r\nimport LaunchConfigurationEdit from './LaunchConfigurationEdit';\r\nimport LaunchConfigurationStorageList from './LaunchConfigurationStorageList';\r\nimport LaunchConfigurationStorageEdit from './LaunchConfigurationStorageEdit';\r\n\r\nimport AutoScalingGroupList from './AutoScalingGroupList';\r\nimport AutoScalingGroupEdit from './AutoScalingGroupEdit';\r\nimport TagAutoScalingGroupList from './TagAutoScalingGroupList';\r\nimport TagAutoScalingGroupEdit from './TagAutoScalingGroupEdit';\r\n\r\nimport PolicyList from './PolicyList';\r\nimport PolicyEdit from './PolicyEdit';\r\n\r\nimport EndPointList from './EndPointList';\r\nimport EndPointEdit from './EndPointEdit';\r\n\r\n\r\nimport RoleList from './RoleList';\r\nimport RoleEdit from './RoleEdit';\r\n\r\nimport GroupList from './GroupList';\r\nimport GroupEdit from './GroupEdit';\r\n\r\nimport UserList from './UserList';\r\nimport UserEdit from './UserEdit';\r\n\r\n\r\nimport DhcpList from './DhcpList';\r\nimport DhcpEdit from './DhcpEdit';\r\nimport TagDhcpList from './TagDhcpList';\r\nimport TagDhcpEdit from './TagDhcpEdit';\r\n\r\nimport KmsList from './KmsList';\r\nimport KmsEdit from './KmsEdit';\r\n\r\n\r\nclass App extends Component { \r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path={`${API_BASE_URL}`} exact={true} component={Home}/>\r\n\r\n          <Route path={`${API_BASE_URL}/regions`} exact={true} component={RegionList}/>\r\n          <Route path={`${API_BASE_URL}/regions/:id`} component={RegionEdit}/>\r\n          <Route path={`${API_BASE_URL}/region/:id/azs`} exact={true} component={AzList}/>\r\n          <Route path={`${API_BASE_URL}/region/:idr/azs/:id`} component={AzEdit}/>\r\n          <Route path={`${API_BASE_URL}/region/:id/amis`} exact={true} component={AmiList}/>\r\n          <Route path={`${API_BASE_URL}/region/:idr/amis/:id`} component={AmiEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/instancetypes`} exact={true} component={InstanceTypeList}/>\r\n          <Route path={`${API_BASE_URL}/instancetypes/:id`} component={InstanceTypeEdit}/>\r\n\r\n\r\n          <Route path={`${API_BASE_URL}/kmss`} exact={true} component={KmsList}/>\r\n          <Route path={`${API_BASE_URL}/kmss/:id`} component={KmsEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/policys`} exact={true} component={PolicyList}/>\r\n          <Route path={`${API_BASE_URL}/policys/:id`} component={PolicyEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/roles`} exact={true} component={RoleList}/>\r\n          <Route path={`${API_BASE_URL}/roles/:id`} component={RoleEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/groups`} exact={true} component={GroupList}/>\r\n          <Route path={`${API_BASE_URL}/groups/:id`} component={GroupEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/users`} exact={true} component={UserList}/>\r\n          <Route path={`${API_BASE_URL}/users/:id`} component={UserEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/endpoints`} exact={true} component={EndPointList}/>\r\n          <Route path={`${API_BASE_URL}/endpoints/:id`} component={EndPointEdit}/>\r\n\r\n\r\n          <Route path={`${API_BASE_URL}/launchconfigurations`} exact={true} component={LaunchConfigurationList}/>\r\n          <Route path={`${API_BASE_URL}/launchconfigurations/:id`} component={LaunchConfigurationEdit}/>\r\n          <Route path={`${API_BASE_URL}/launchconfiguration/:id/launchConfigurationStorages`} exact={true} component={LaunchConfigurationStorageList}/>\r\n          <Route path={`${API_BASE_URL}/launchconfiguration/:idl/launchConfigurationStorages/:id`} component={LaunchConfigurationStorageEdit}/>\r\n\r\n\r\n          <Route path={`${API_BASE_URL}/autoscalinggroups`} exact={true} component={AutoScalingGroupList}/>\r\n          <Route path={`${API_BASE_URL}/autoscalinggroups/:id`} component={AutoScalingGroupEdit}/>\r\n          <Route path={`${API_BASE_URL}/autoscalinggroup/:id/tags`} exact={true} component={TagAutoScalingGroupList}/>\r\n          <Route path={`${API_BASE_URL}/autoscalinggroup/:ida/tags/:id`} component={TagAutoScalingGroupEdit}/>\r\n\r\n\r\n\r\n          <Route path={`${API_BASE_URL}/eccs`} exact={true} component={EccList}/>\r\n          <Route path={`${API_BASE_URL}/eccs/:id`} component={EccEdit}/>\r\n          <Route path={`${API_BASE_URL}/ecc/:id/eccStorages`} exact={true} component={EccStorageList}/>\r\n          <Route path={`${API_BASE_URL}/ecc/:ide/eccStorages/:id`} component={EccStorageEdit}/>\r\n          <Route path={`${API_BASE_URL}/ecc/:id/eccNetworkInterfaces`} exact={true} component={EccNetworkInterfaceList}/>\r\n          <Route path={`${API_BASE_URL}/ecc/:ide/eccNetworkInterfaces/:id`} component={EccNetworkInterfaceEdit}/>\r\n          <Route path={`${API_BASE_URL}/ecc/:id/tags`} exact={true} component={TagEccList}/>\r\n          <Route path={`${API_BASE_URL}/ecc/:ide/tags/:id`} component={TagEccEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/trigrammes`} exact={true} component={TrigrammeList}/>\r\n\t\t  <Route path={`${API_BASE_URL}/trigrammes/:id`} component={TrigrammeEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/products`} exact={true} component={ProductList}/>\r\n          <Route path={`${API_BASE_URL}/products/:id`} component={ProductEdit}/>\r\n          <Route path={`${API_BASE_URL}/trigramme/:id/products`} exact={true} component={ProductList}/>\r\n          <Route path={`${API_BASE_URL}/trigramme/:idt/products/:id`} component={ProductEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/accounts`} exact={true} component={AccountList}/>\r\n          <Route path={`${API_BASE_URL}/accounts/:id`} component={AccountEdit}/>\r\n          <Route path={`${API_BASE_URL}/product/:id/accounts`} exact={true} component={AccountList}/>\r\n          <Route path={`${API_BASE_URL}/product/:idp/accounts/:id`} component={AccountEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/vpcs`} exact={true} component={VpcList}/>\r\n          <Route path={`${API_BASE_URL}/vpcs/:id`} component={VpcEdit}/>\r\n          <Route path={`${API_BASE_URL}/account/:id/vpcs`} exact={true} component={VpcList}/>\r\n          <Route path={`${API_BASE_URL}/account/:ida/vpcs/:id`} component={VpcEdit}/>\r\n          <Route path={`${API_BASE_URL}/vpc/:id/tags`} exact={true} component={TagVpcList}/>\r\n          <Route path={`${API_BASE_URL}/vpc/:idv/tags/:id`} component={TagVpcEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/dhcps`} exact={true} component={DhcpList}/>\r\n          <Route path={`${API_BASE_URL}/dhcps/:id`} component={DhcpEdit}/>\r\n          <Route path={`${API_BASE_URL}/dhcp/:id/tags`} exact={true} component={TagDhcpList}/>\r\n          <Route path={`${API_BASE_URL}/dhcp/:idd/tags/:id`} component={TagDhcpEdit}/>\r\n\r\n\r\n          <Route path={`${API_BASE_URL}/subnets`} exact={true} component={SubnetList}/>\r\n          <Route path={`${API_BASE_URL}/subnets/:id`} component={SubnetEdit}/>\r\n          <Route path={`${API_BASE_URL}/vpc/:id/subnets`} exact={true} component={SubnetList}/>\r\n          <Route path={`${API_BASE_URL}/vpc/:idv/subnets/:id`} component={SubnetEdit}/>\r\n          <Route path={`${API_BASE_URL}/subnet/:id/tags`} exact={true} component={TagSubnetList}/>\r\n          <Route path={`${API_BASE_URL}/subnet/:ids/tags/:id`} component={TagSubnetEdit}/>\r\n\r\n\r\n          <Route path={`${API_BASE_URL}/subnetGroups`} exact={true} component={SubnetGroupList}/>\r\n          <Route path={`${API_BASE_URL}/subnetGroups/:id`} component={SubnetGroupEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/storages`} exact={true} component={StorageList}/>\r\n          <Route path={`${API_BASE_URL}/storages/:id`} component={StorageEdit}/>\r\n          <Route path={`${API_BASE_URL}/storage/:id/storageacls`} exact={true} component={StorageAclList}/>\r\n          <Route path={`${API_BASE_URL}/storage/:ids/storageacls/:id`} component={StorageAclEdit}/>\r\n          <Route path={`${API_BASE_URL}/storage/:id/tags`} exact={true} component={TagStorageList}/>\r\n          <Route path={`${API_BASE_URL}/storage/:ids/tags/:id`} component={TagStorageEdit}/>\r\n\r\n\r\n          <Route path={`${API_BASE_URL}/ssms`} exact={true} component={SsmList}/>\r\n          <Route path={`${API_BASE_URL}/ssms/:id`} component={SsmEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/cognitos`} exact={true} component={CognitoList}/>\r\n          <Route path={`${API_BASE_URL}/cognitos/:id`} component={CognitoEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/dynamoDbs`} exact={true} component={DynamoDbList}/>\r\n          <Route path={`${API_BASE_URL}/dynamoDbs/:id`} component={DynamoDbEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/rdss`} exact={true} component={RdsList}/>\r\n          <Route path={`${API_BASE_URL}/rdss/:id`} component={RdsEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/efss`} exact={true} component={EfsList}/>\r\n          <Route path={`${API_BASE_URL}/efss/:id`} component={EfsEdit}/>\r\n          <Route path={`${API_BASE_URL}/efs/:id/tags`} exact={true} component={TagEfsList}/>\r\n          <Route path={`${API_BASE_URL}/efs/:ide/tags/:id`} component={TagEfsEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/elasticSearchs`} exact={true} component={ElasticSearchList}/>\r\n          <Route path={`${API_BASE_URL}/elasticSearchs/:id`} component={ElasticSearchEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/elasticCaches`} exact={true} component={ElasticCacheList}/>\r\n          <Route path={`${API_BASE_URL}/elasticCaches/:id`} component={ElasticCacheEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/nacls`} exact={true} component={NaclList}/>\r\n          <Route path={`${API_BASE_URL}/nacls/:id`} component={NaclEdit}/>\r\n          <Route path={`${API_BASE_URL}/nacl/:id/rules`} exact={true} component={RuleList}/>\r\n          <Route path={`${API_BASE_URL}/nacl/:idn/rules/:id`} component={RuleEdit}/>\r\n          <Route path={`${API_BASE_URL}/nacl/:id/tags`} exact={true} component={TagList}/>\r\n          <Route path={`${API_BASE_URL}/nacl/:idn/tags/:id`} component={TagEdit}/>\r\n\r\n\r\n          <Route path={`${API_BASE_URL}/routetables`} exact={true} component={RouteTableList}/>\r\n          <Route path={`${API_BASE_URL}/routetables/:id`} component={RouteTableEdit}/>\r\n          <Route path={`${API_BASE_URL}/routetable/:id/routes`} exact={true} component={RouteList}/>\r\n          <Route path={`${API_BASE_URL}/routetable/:idr/routes/:id`} component={RouteEdit}/>\r\n          <Route path={`${API_BASE_URL}/routetable/:id/tags`} exact={true} component={TagRouteTableList}/>\r\n          <Route path={`${API_BASE_URL}/routetable/:idr/tags/:id`} component={TagRouteTableEdit}/>\r\n\r\n\r\n          <Route path={`${API_BASE_URL}/targetgroups`} exact={true} component={TargetGroupList}/>\r\n          <Route path={`${API_BASE_URL}/targetgroups/:id`} component={TargetGroupEdit}/>\r\n          <Route path={`${API_BASE_URL}/targetgroup/:id/targets`} exact={true} component={TargetList}/>\r\n          <Route path={`${API_BASE_URL}/targetgroup/:idt/targets/:id`} component={TargetEdit}/>\r\n          <Route path={`${API_BASE_URL}/targetgroup/:id/tags`} exact={true} component={TagTargetGroupList}/>\r\n          <Route path={`${API_BASE_URL}/targetgroup/:idr/tags/:id`} component={TagTargetGroupEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/lbs`} exact={true} component={LbList}/>\r\n          <Route path={`${API_BASE_URL}/lbs/:id`} component={LbEdit}/>\r\n          <Route path={`${API_BASE_URL}/lb/:id/listeners`} exact={true} component={ListenerList}/>\r\n          <Route path={`${API_BASE_URL}/lb/:idl/listeners/:id`} component={ListenerEdit}/>\r\n          <Route path={`${API_BASE_URL}/lb/:id/tags`} exact={true} component={TagLbList}/>\r\n          <Route path={`${API_BASE_URL}/lb/:idl/tags/:id`} component={TagLbEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/peerings`} exact={true} component={PeeringList}/>\r\n          <Route path={`${API_BASE_URL}/peerings/:id`} component={PeeringEdit}/>\r\n          <Route path={`${API_BASE_URL}/peering/:id/tags`} exact={true} component={TagPeeringList}/>\r\n          <Route path={`${API_BASE_URL}/peering/:idp/tags/:id`} component={TagPeeringEdit}/>\r\n\r\n          <Route path={`${API_BASE_URL}/sgs`} exact={true} component={SgList}/>\r\n          <Route path={`${API_BASE_URL}/sgs/:id`} component={SgEdit}/>\r\n          <Route path={`${API_BASE_URL}/sg/:id/ruleSgs`} exact={true} component={RuleSgList}/>\r\n          <Route path={`${API_BASE_URL}/sg/:ids/ruleSgs/:id`} component={RuleSgEdit}/>\r\n          <Route path={`${API_BASE_URL}/sg/:id/tags`} exact={true} component={TagSgList}/>\r\n          <Route path={`${API_BASE_URL}/sg/:ids/tags/:id`} component={TagSgEdit}/>\r\n\r\n\r\n\r\n          <Route path={`${API_BASE_URL}/vpcmanage`} exact={true} component={VpcManageList}/>\r\n          <Route path={`${API_BASE_URL}/vpcmanage/:id`} component={VpcManageEdit}/>\r\n\r\n\r\n          <Route path={`${API_BASE_URL}/vpcmanages/:id/subnetmanage`} exact={true} component={SubnetManageList}/>\r\n          <Route path={`${API_BASE_URL}/vpcmanages/:idc/subnetmanage/:id`} component={SubnetManageEdit}/>\r\n\r\n\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}